Metadata-Version: 2.2
Name: spectrosense
Version: 0.3.0
Summary: AI-powered RF signal analysis and classification
Home-page: https://github.com/oldhero5/spectrosense
Author: Marty H
Author-email: Marty Harris <adeptbison@proton.me>
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENCE
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: matplotlib
Requires-Dist: anthropic
Requires-Dist: pillow
Dynamic: author
Dynamic: home-page
Dynamic: requires-python

# SpectroSense üì°

SpectroSense is an AI-powered RF signal analysis and classification tool that combines advanced signal processing with large language models to automatically identify and classify radio frequency signals from spectrograms.

![SpectroSense Logo](https://raw.githubusercontent.com/oldhero5/spectrosense/main/docs/images/logo.png)

## üöÄ Features

- **Multiple AI Models**: Support for both Claude and Meta's Llama Vision model
- **Automated Signal Classification**: Leverages AI to identify RF signals in spectrograms
- **Direct Image Analysis**: Process existing spectrogram images in various formats
- **Batch Processing**: Process multiple recordings or images efficiently
- **Detailed Analysis Reports**: Generate comprehensive JSON reports of identified signals
- **Visualization Tools**: Generate high-quality spectrograms
- **Extensible Architecture**: Easy to add new signal types and analysis methods

## üõ†Ô∏è Installation

```bash
pip install spectrosense
```

For development installation:
```bash
git clone https://github.com/oldhero5/spectrosense.git
cd spectrosense
pip install -e ".[dev]"
```

## üîß Configuration

1. Copy the example environment file:
```bash
cp .env.example .env
```

2. Edit `.env` with your settings:
```bash
# For Claude
AI_MODEL_TYPE=claude
ANTHROPIC_API_KEY=your_api_key_here

# For Llama
AI_MODEL_TYPE=llama
VLLM_SERVER_URL=http://localhost:8000
```

## üìñ Quick Start

```python
from spectrosense import SpectrogramImageAnalyzer
from spectrosense.ai_integration import ModelType

# Using Claude
analyzer = SpectrogramImageAnalyzer(
    model_type=ModelType.CLAUDE,
    anthropic_api_key="your-api-key"
)

# Using Llama
analyzer = SpectrogramImageAnalyzer(
    model_type=ModelType.LLAMA,
    vllm_server_url="http://localhost:8000"
)

# Analyze a single image
result = analyzer.analyze_spectrogram_image("spectrogram.png")
print(result)

# Batch process a directory
results = analyzer.batch_analyze_images("spectrograms/")
```

## üìä Example Output

```json
{
    "signal_types": ["wifi_halow"],
    "confidence": "high",
    "features": [
        "2MHz channel bandwidth",
        "Regular packet structure",
        "Center frequency: 919MHz"
    ],
    "notes": "IEEE 802.11ah signal with MCS0 modulation"
}
```

## üöÄ Model Setup

### Claude Setup
1. Obtain an API key from Anthropic
2. Set the key in your environment

### Llama Setup
1. Install vLLM:
```bash
pip install vllm
```

2. Start the vLLM server:
```bash
python -m vllm.entrypoints.api_server \
    --model meta-llama/Llama-3.2-11B-Vision-Instruct \
    --port 8000
```

## ü§ù Contributing

We welcome contributions! Please see our [Contributing Guidelines](CONTRIBUTING.md) for details.

## üìù License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## üéØ Roadmap

- [X] Support for more AI models
- [ ] Real-time signal processing
- [ ] Web interface for analysis
- [ ] GPU acceleration
- [ ] Batch processing optimization
- [ ] Custom model training

## üìö Documentation

Full documentation is available at [spectrosense.readthedocs.io](https://spectrosense.readthedocs.io)

---
Made with ‚ù§Ô∏è by the SpectroSense Team
