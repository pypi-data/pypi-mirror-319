[build-system]
requires = ["flit_core >=3.2,<3.13"]
build-backend = "flit_core.buildapi"

[tool.flit.module]
name = "ccds"

[project]
name = "gatlens-opinionated-template"
version = "0.0.6"
description = "A modern, opinionated full-stack CookieCutter project template that prioritizes developer experience and cutting-edge tools."
authors = [
  { name = "Gatlen Culp", email = "GatlenCulp@gmail.com" },
  { name = "DrivenData", email = "info@drivendata.org" },
]
license = { file = "LICENSE" }
readme = "README.md"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
# Using 3.10 to ensure compatability
requires-python = ">=3.10,<3.11"
dependencies = [
    "click>=8.1.0",
    "cookiecutter>=2.6.0",
    "ipykernel>=6.29.5",
    "mdformat-frontmatter>=2.0.8",
]

[project.scripts]
gotem = "ccds.__main__:main"

[project.urls]
"Source Code" = "https://github.com/GatlenCulp/gatlens-opinionated-template"
"Documentation" = "https://gatlenculp.github.io/gatlens-opinionated-template/"

[dependency-groups]
dev = [
    "ansi2html>=1.9.2",
    "black>=24.8.0",
    "build>=1.2.2.post1",
    "chardet>=5.2.0",
    "cz-conventional-gitmoji>=0.6.1",
    "flake8>=5.0.4",
    "isort>=5.13.2",
    "mkdocs>=1.6.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-include-markdown-plugin>=6.2.2",
    "mkdocs-material>=9.5.49",
    "pexpect>=4.9.0",
    "pipenv>=2024.4.0",
    "pre-commit>=3.5.0",
    "pytest-icdiff>=0.9",
    "pytest>=8.3.4",
    "pytest-sugar>=1.0.0",
    "pytest-watcher>=0.4.3",
    "ruff>=0.8.4",
    "termynal>=0.2.0",
    "twine>=6.0.1",
    "uv>=0.5.11",
    "virtualenvwrapper>=6.1.1 ; sys_platform != 'win32'",
    "virtualenvwrapper-win>=1.2.7 ; sys_platform == 'win32'",
    "commitizen>=4.1.0",
    "nbqa>=1.9.1",
]

# ---------------------------------------------------------------------------- #
#                             ruff formatter/linter                            #
# ---------------------------------------------------------------------------- #


# ----------------------------- ruff global config ----------------------------- #

[tool.ruff]
cache-dir = ".cache/ruff"
line-length = 100
extend-include = ["*.ipynb"]
# Doesn't work, this is a bug with ruff.
# https://github.com/astral-sh/ruff/issues/9381
# exclude = ["*/{{{{ cookiecutter.repo_name }}}}/*"]
exclude = [
  "*cookiecutter*",
  "tests/test-linting/*"
]

[tool.ruff.lint]
# TODO: Different groups of linting styles depending on code use.
select = ["ALL"]
ignore = [
  "FIX002", # Allow TODOs
  "TD003" # Allow TODO to not have link to issue
]


[tool.ruff.lint.isort]
known-first-party = ["{{ cookiecutter.module_name }}"]
force-sort-within-sections = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Allow unused imports in __init__.py

"tests/**/*.py" = [
    # at least this three should be fine in tests:
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "ANN001", "ANN201", # Allow for non-typed functions
    "RET503", # Allow for implicit ignores
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pycodestyle]
max-doc-length = 99

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

# ---------------------------------------------------------------------------- #
#                                   pydoclint                                  #
# ---------------------------------------------------------------------------- #

[tool.pydoclint]
style = "google"
arg-type-hints-in-docstring = false
check-return-types = true
exclude = '\.venv'

# ---------------------------------------------------------------------------- #
#                                    pyright                                   #
# ---------------------------------------------------------------------------- #

[tool.pyright]
include = ["."]

# ---------------------------------------------------------------------------- #
#                                    pytest                                    #
# ---------------------------------------------------------------------------- #

[tool.pytest.ini_options]
addopts = """
--tb=long
--code-highlight=yes
--color=yes
-vv
"""

testpaths = ["./tests"]
log_file = "./logs/pytest.log"

# ---------------------------------------------------------------------------- #
#                                      uv                                      #
# ---------------------------------------------------------------------------- #

[tool.uv.sources]
gatlens-opinionated-template = { workspace = true }

# ---------------------------------------------------------------------------- #
#                                  commitizen                                  #
# ---------------------------------------------------------------------------- #

[tool.commitizen]
# name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "pep621"
update_changelog_on_bump = true
# TODO: Make this the default: czg ai -N=3 -M="gpt-4o"
