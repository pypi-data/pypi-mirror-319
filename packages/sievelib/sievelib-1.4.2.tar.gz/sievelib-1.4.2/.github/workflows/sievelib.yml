name: Sievelib

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    branches: [ master ]
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install codecov pytest pytest-cov
          pip install -e .
      - name: Run tests
        if: ${{ matrix.python-version != '3.11' }}
        run: |
          pytest
      - name: Run tests and coverage
        if: ${{ matrix.python-version == '3.11' }}
        run: |
          pytest --cov=sievelib --cov-report xml
      - name: Upload coverage result
        if: ${{ matrix.python-version == '3.11' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-results
          path: coverage.xml

  coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage results
        uses: actions/download-artifact@v4
        with:
          name: coverage-results
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

  release:
    if: github.event_name != 'pull_request'
    needs: coverage
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/sievelib
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Create package
        run: |
          python setup.py sdist
      - name: Publish to Test PyPI
        if: endsWith(github.event.ref, '/master')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
      - name: Publish distribution to PyPI
        if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
