[project]
name = "devto"
version = "0.1.3"
# dynamic = ["version"]
description = "Modern Dev.To API client built with aiohttp and pydantic"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiohttp>=3.11.11",
    "aiohttp-client-cache>=0.12.4",
    "aiosqlite>=0.20.0",
    "loguru>=0.7.3",
    "pydantic>=2.10.4",
]

[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[dependency-groups]
dev = [
  "ruff>=0.7.2",
  {include-group = "test"},
  "mypy>=1.14.1",
  "isort>=5.13.2",
  "types-requests>=2.32.0.20241016",
]
test = [
  "pytest-cov>=6.0.0",
  "pytest>=8.3.3",
]

[[tool.uv.index]]
url = "https://pypi.org/simple"
default = true
#
# # [tool.semantic_release]
# # version_variable = "pyproject.toml:version" # version location
# # branch = "main"                             # branch to make releases of
# # changelog_file = "CHANGELOG.md"             # changelog file
# # build_command = "uv build"              # build dists
# # dist_path = "dist/"                         # where to put dists
# # upload_to_release = true                    # auto-create GitHub release
# # upload_to_pypi = false                      # don't auto-upload to PyPI
# # remove_dist = false                         # don't remove dists
# # patch_without_tag = true                    # patch release by default
# [tool.semantic_release]
# version_variables = ["pyproject.toml:__version__"]
# assets = []
# build_command_env = []
# build_command = "uv build"
# commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
# commit_parser = "angular"
# logging_use_named_masks = false
# major_on_zero = true
# allow_zero_version = true
# no_git_verify = false
# tdist_path = "dist/"                         # where to put dists
# upload_to_release = true                    # auto-create GitHub release
# upload_to_pypi = false                      # don't auto-upload to PyPI
# remove_dist = false                         # don't remove dists
# patch_without_tag = true                    # patch release by default
#
# [tool.semantic_release.branches.main]
# match = "(main|master)"
# prerelease_token = "rc"
# prerelease = false
#
# [tool.semantic_release.changelog]
# changelog_file = ""
# exclude_commit_patterns = []
# mode = "init"
# insertion_flag = "<!-- version list -->"
# template_dir = "templates"
#
# [tool.semantic_release.changelog.default_templates]
# changelog_file = "CHANGELOG.md"
# output_format = "md"
# mask_initial_release = false
#
# [tool.semantic_release.changelog.environment]
# block_start_string = "{%"
# block_end_string = "%}"
# variable_start_string = "{{"
# variable_end_string = "}}"
# comment_start_string = "{#"
# comment_end_string = "#}"
# trim_blocks = false
# lstrip_blocks = false
# newline_sequence = "\n"
# keep_trailing_newline = false
# extensions = []
# autoescape = false
#
# [tool.semantic_release.commit_author]
# env = "GIT_COMMIT_AUTHOR"
# default = "semantic-release <semantic-release>"
#
# [tool.semantic_release.commit_parser_options]
# minor_tags = ["feat"]
# patch_tags = ["fix", "perf"]
# other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
# allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
# default_bump_level = 0
#
# [tool.semantic_release.remote]
# name = "origin"
# type = "github"
# ignore_token_for_push = false
# insecure = false
#
# [tool.semantic_release.publish]
# dist_glob_patterns = ["dist/*"]
# upload_to_vcs_release = true
#
