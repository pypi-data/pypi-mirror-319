name: "CICD"
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  test_publish:
    name: "Test publishing"
    runs-on: "ubuntu-latest"
    needs: [test, lint]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/devto
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Sync environment
      run: uv sync
    - name: Prepare package for release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        uv build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: pypi-publish
      uses: pypa/gh-action-pypi-publish@v1.12.3
      with:
        repository_url: https://test.pypi.org/legacy/
  github-release:
    needs:
    - publish
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: >-
        gh release create
        "$GITHUB_REF_NAME"
        --repo "$GITHUB_REPOSITORY"
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        "$GITHUB_REF_NAME" dist/**
        --repo "$GITHUB_REPOSITORY"   
  publish:
    name: "Publish to Pypi"
    runs-on: "ubuntu-latest"
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [test, lint]
    permissions:
      id-token: write
      contents: write
    environment:
      name: pypi
      # url: https://pypi.org/p/devto
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Sync environment
      run: uv sync
    - name: Prepare package for release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        uv build
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # with:
      #   repository_url: https://pypi.org/legacy/

  test:
    strategy:
      matrix:
        os: [ubuntu-latest] #, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Sync environment
      run: uv sync
    - name: Run tests
      run: pytest

  lint:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/setup
    - name: Sync environment
      run: uv sync
    - name: Run linting
      run: ruff check
