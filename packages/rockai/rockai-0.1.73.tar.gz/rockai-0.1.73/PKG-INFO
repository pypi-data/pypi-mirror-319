Metadata-Version: 2.1
Name: rockai
Version: 0.1.73
Summary: Python SDK for RockAI.online
Author: RockAI
Author-email: rockai@west-hpc.com
Requires-Python: >=3.10,<=3.13
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiohttp-sse-client (==0.2.1)
Requires-Dist: aiosseclient (>=0.1.3,<0.2.0)
Requires-Dist: fastapi (>=0.109.2,<0.110.0)
Requires-Dist: fastapi-utils (>=0.7.0,<0.8.0)
Requires-Dist: httpx (>=0.27.0,<0.28.0)
Requires-Dist: httpx-sse (==0.1.0)
Requires-Dist: huggingface-hub[cli] (>=0.24.7,<0.25.0)
Requires-Dist: multiprocess (>=0.70.16,<0.71.0)
Requires-Dist: pebble (>=5.0.7,<6.0.0)
Requires-Dist: prometheus-fastapi-instrumentator (>=7.0.0,<8.0.0)
Requires-Dist: requests (>=2.31.0,<3.0.0)
Requires-Dist: sseclient (>=0.0.27,<0.0.28)
Requires-Dist: toml (>=0.10.2,<0.11.0)
Requires-Dist: typer[all] (>=0.12.3,<0.13.0)
Requires-Dist: typing-inspect (>=0.9.0,<0.10.0)
Requires-Dist: uvicorn[standard] (>=0.27.0.post1,<0.28.0)
Description-Content-Type: text/markdown

# Setup

Python SDK for inference and training for RockAI

```shell
# Install package using pip
pip install rockai-cli-app
```

```python
from rockai_cli_app import Client
import asyncio

my_client = Client()


# Function to run the asynchronous function and print the result
async def main():
    
    result = await my_client.run_async(
        version="001bb81139b01780380407b4106ac681df46108e002eafbeb9ccb2d8faca42e1",
        input={
            "width": 1024,
            "height": 1024,
            "prompt": "a cartoon of a IRONMAN fighting with HULK, wall painting",
            "guidance_scale": 3,
            "negative_prompt": "(deformed, distorted, disfigured:1.3), poorly drawn, bad anatomy, wrong anatomy, extra limb, missing limb, floating limbs, (mutated hands and fingers:1.4), disconnected limbs, mutation, mutated, ugly, disgusting, blurry, amputation, NSFW",
            "num_inference_steps": 15,
        }
    )
    print("Result:", result)


# Run the main function using asyncio.run
if __name__ == "__main__":
    asyncio.run(main())
```

```shell
# clean docker space
docker system prune --all --force --volumes
```

# Development
* Python version 3.9.19
