# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from scicat_sdk_pydantic.models.full_facet_response import FullFacetResponse  # noqa: E501

class TestFullFacetResponse(unittest.TestCase):
    """FullFacetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FullFacetResponse:
        """Test FullFacetResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FullFacetResponse`
        """
        model = FullFacetResponse()  # noqa: E501
        if include_optional:
            return FullFacetResponse(
                all = [
                    scicat_sdk_pydantic.models.total_sets.TotalSets(
                        total_sets = 1.337, )
                    ]
            )
        else:
            return FullFacetResponse(
                all = [
                    scicat_sdk_pydantic.models.total_sets.TotalSets(
                        total_sets = 1.337, )
                    ],
        )
        """

    def testFullFacetResponse(self):
        """Test FullFacetResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
