# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend

    The version of the OpenAPI document: api/v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from typing import Any, Dict, Optional
from pydantic import BaseModel, Field, StrictStr

class PartialUpdateJobDto(BaseModel):
    """
    PartialUpdateJobDto
    """
    execution_time: Optional[datetime] = Field(default=None, alias="executionTime")
    job_status_message: Optional[StrictStr] = Field(default=None, alias="jobStatusMessage")
    job_result_object: Optional[Dict[str, Any]] = Field(default=None, alias="jobResultObject")
    __properties = ["executionTime", "jobStatusMessage", "jobResultObject"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> PartialUpdateJobDto:
        """Create an instance of PartialUpdateJobDto from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> PartialUpdateJobDto:
        """Create an instance of PartialUpdateJobDto from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return PartialUpdateJobDto.parse_obj(obj)

        _obj = PartialUpdateJobDto.parse_obj({
            "execution_time": obj.get("executionTime"),
            "job_status_message": obj.get("jobStatusMessage"),
            "job_result_object": obj.get("jobResultObject")
        })
        return _obj


