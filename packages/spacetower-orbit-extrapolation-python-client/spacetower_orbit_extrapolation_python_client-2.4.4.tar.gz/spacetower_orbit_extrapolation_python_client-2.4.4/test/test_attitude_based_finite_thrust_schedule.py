# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.attitude_based_finite_thrust_schedule import AttitudeBasedFiniteThrustSchedule

class TestAttitudeBasedFiniteThrustSchedule(unittest.TestCase):
    """AttitudeBasedFiniteThrustSchedule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AttitudeBasedFiniteThrustSchedule:
        """Test AttitudeBasedFiniteThrustSchedule
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AttitudeBasedFiniteThrustSchedule`
        """
        model = AttitudeBasedFiniteThrustSchedule()
        if include_optional:
            return AttitudeBasedFiniteThrustSchedule(
                dated_finite_thrust_schedule = [
                    spacetower_orbit_extrapolation_python_client.models.finite_thrust_definition.FiniteThrustDefinition(
                        execution_date = '2024-01-01T00:00Z', 
                        duration = 0, )
                    ]
            )
        else:
            return AttitudeBasedFiniteThrustSchedule(
                dated_finite_thrust_schedule = [
                    spacetower_orbit_extrapolation_python_client.models.finite_thrust_definition.FiniteThrustDefinition(
                        execution_date = '2024-01-01T00:00Z', 
                        duration = 0, )
                    ],
        )
        """

    def testAttitudeBasedFiniteThrustSchedule(self):
        """Test AttitudeBasedFiniteThrustSchedule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
