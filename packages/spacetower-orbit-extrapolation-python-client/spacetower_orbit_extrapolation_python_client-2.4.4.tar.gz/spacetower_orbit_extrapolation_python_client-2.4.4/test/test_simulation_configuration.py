# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.simulation_configuration import SimulationConfiguration

class TestSimulationConfiguration(unittest.TestCase):
    """SimulationConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SimulationConfiguration:
        """Test SimulationConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SimulationConfiguration`
        """
        model = SimulationConfiguration()
        if include_optional:
            return SimulationConfiguration(
                earth_fixed_frame_id = 'ITRF2020',
                ellipsoid_id = 'WGS84',
                include_tidal_effects_in_eop_interpolation = True,
                shadow_model_type = 'CONICAL',
                perturbations = [
                    spacetower_orbit_extrapolation_python_client.models.perturbation.Perturbation(
                        perturbation_type = 'ATMOSPHERIC_DRAG', )
                    ],
                integrator_configuration = spacetower_orbit_extrapolation_python_client.models.integrator_configuration.IntegratorConfiguration(
                    integrator_type = 'FIXED_STEP', )
            )
        else:
            return SimulationConfiguration(
                integrator_configuration = spacetower_orbit_extrapolation_python_client.models.integrator_configuration.IntegratorConfiguration(
                    integrator_type = 'FIXED_STEP', ),
        )
        """

    def testSimulationConfiguration(self):
        """Test SimulationConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
