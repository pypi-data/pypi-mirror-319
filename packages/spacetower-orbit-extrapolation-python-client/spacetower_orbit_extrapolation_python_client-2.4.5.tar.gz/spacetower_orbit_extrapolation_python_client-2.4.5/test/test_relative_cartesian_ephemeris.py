# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.relative_cartesian_ephemeris import RelativeCartesianEphemeris

class TestRelativeCartesianEphemeris(unittest.TestCase):
    """RelativeCartesianEphemeris unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RelativeCartesianEphemeris:
        """Test RelativeCartesianEphemeris
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RelativeCartesianEphemeris`
        """
        model = RelativeCartesianEphemeris()
        if include_optional:
            return RelativeCartesianEphemeris(
                dates = [
                    '2024-01-01T00:00Z'
                    ],
                description = [
                    spacetower_orbit_extrapolation_python_client.models.field_description.FieldDescription(
                        index = 56, 
                        name = '', 
                        label = '', 
                        units = '', )
                    ],
                target_names = [
                    ''
                    ]
            )
        else:
            return RelativeCartesianEphemeris(
                dates = [
                    '2024-01-01T00:00Z'
                    ],
                target_names = [
                    ''
                    ],
        )
        """

    def testRelativeCartesianEphemeris(self):
        """Test RelativeCartesianEphemeris"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
