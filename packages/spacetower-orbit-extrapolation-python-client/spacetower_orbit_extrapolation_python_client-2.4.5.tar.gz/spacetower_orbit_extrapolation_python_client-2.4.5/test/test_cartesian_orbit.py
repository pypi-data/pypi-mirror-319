# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.cartesian_orbit import CartesianOrbit

class TestCartesianOrbit(unittest.TestCase):
    """CartesianOrbit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CartesianOrbit:
        """Test CartesianOrbit
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CartesianOrbit`
        """
        model = CartesianOrbit()
        if include_optional:
            return CartesianOrbit(
                var_date = '2024-01-01T00:00Z',
                position = spacetower_orbit_extrapolation_python_client.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                velocity = spacetower_orbit_extrapolation_python_client.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                earth_centered_frame_id = 'GCRF'
            )
        else:
            return CartesianOrbit(
                var_date = '2024-01-01T00:00Z',
                position = spacetower_orbit_extrapolation_python_client.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
                velocity = spacetower_orbit_extrapolation_python_client.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
        )
        """

    def testCartesianOrbit(self):
        """Test CartesianOrbit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
