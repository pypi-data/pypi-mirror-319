# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.secondary_object_event_definition import SecondaryObjectEventDefinition

class TestSecondaryObjectEventDefinition(unittest.TestCase):
    """SecondaryObjectEventDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecondaryObjectEventDefinition:
        """Test SecondaryObjectEventDefinition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecondaryObjectEventDefinition`
        """
        model = SecondaryObjectEventDefinition()
        if include_optional:
            return SecondaryObjectEventDefinition(
                event_definition_type = 'CLOSEST_APPROACH',
                propagation_type = 'KEPLERIAN',
                secondary_object = spacetower_orbit_extrapolation_python_client.models.secondary_object_definition.SecondaryObjectDefinition(
                    name = 'Secondary', 
                    orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                        orbit_type = 'CARTESIAN', ), )
            )
        else:
            return SecondaryObjectEventDefinition(
                event_definition_type = 'CLOSEST_APPROACH',
                secondary_object = spacetower_orbit_extrapolation_python_client.models.secondary_object_definition.SecondaryObjectDefinition(
                    name = 'Secondary', 
                    orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                        orbit_type = 'CARTESIAN', ), ),
        )
        """

    def testSecondaryObjectEventDefinition(self):
        """Test SecondaryObjectEventDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
