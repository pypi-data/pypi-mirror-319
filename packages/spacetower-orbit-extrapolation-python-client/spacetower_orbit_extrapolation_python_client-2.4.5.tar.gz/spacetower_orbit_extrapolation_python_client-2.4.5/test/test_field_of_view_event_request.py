# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.field_of_view_event_request import FieldOfViewEventRequest

class TestFieldOfViewEventRequest(unittest.TestCase):
    """FieldOfViewEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FieldOfViewEventRequest:
        """Test FieldOfViewEventRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FieldOfViewEventRequest`
        """
        model = FieldOfViewEventRequest()
        if include_optional:
            return FieldOfViewEventRequest(
                event_detection_type = 'LOG_ALL',
                time_span = spacetower_orbit_extrapolation_python_client.models.time_span.TimeSpan(
                    start_date = '2024-01-01T00:00Z', 
                    end_date = '2024-01-02T00:00Z', ),
                minimum_duration = 10.0,
                field_of_view = spacetower_orbit_extrapolation_python_client.models.field_of_view.FieldOfView(
                    field_of_view_type = 'CIRCULAR', ),
                target_body_names = [
                    'SUN'
                    ]
            )
        else:
            return FieldOfViewEventRequest(
                field_of_view = spacetower_orbit_extrapolation_python_client.models.field_of_view.FieldOfView(
                    field_of_view_type = 'CIRCULAR', ),
                target_body_names = [
                    'SUN'
                    ],
        )
        """

    def testFieldOfViewEventRequest(self):
        """Test FieldOfViewEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
