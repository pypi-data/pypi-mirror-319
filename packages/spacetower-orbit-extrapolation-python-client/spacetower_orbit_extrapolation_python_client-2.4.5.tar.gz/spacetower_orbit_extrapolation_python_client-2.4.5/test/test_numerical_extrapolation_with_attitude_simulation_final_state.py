# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.numerical_extrapolation_with_attitude_simulation_final_state import NumericalExtrapolationWithAttitudeSimulationFinalState

class TestNumericalExtrapolationWithAttitudeSimulationFinalState(unittest.TestCase):
    """NumericalExtrapolationWithAttitudeSimulationFinalState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NumericalExtrapolationWithAttitudeSimulationFinalState:
        """Test NumericalExtrapolationWithAttitudeSimulationFinalState
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NumericalExtrapolationWithAttitudeSimulationFinalState`
        """
        model = NumericalExtrapolationWithAttitudeSimulationFinalState()
        if include_optional:
            return NumericalExtrapolationWithAttitudeSimulationFinalState(
                orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                    orbit_type = 'CARTESIAN', ),
                covariance_matrix = spacetower_orbit_extrapolation_python_client.models.orbital_covariance_matrix.OrbitalCovarianceMatrix(
                    covariance_orbit_type = 'CARTESIAN', ),
                space_object = None,
                attitude_law = spacetower_orbit_extrapolation_python_client.models.attitude_law.AttitudeLaw()
            )
        else:
            return NumericalExtrapolationWithAttitudeSimulationFinalState(
                orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                    orbit_type = 'CARTESIAN', ),
        )
        """

    def testNumericalExtrapolationWithAttitudeSimulationFinalState(self):
        """Test NumericalExtrapolationWithAttitudeSimulationFinalState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
