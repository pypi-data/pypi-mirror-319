# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.secondary_object_event_request import SecondaryObjectEventRequest

class TestSecondaryObjectEventRequest(unittest.TestCase):
    """SecondaryObjectEventRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecondaryObjectEventRequest:
        """Test SecondaryObjectEventRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecondaryObjectEventRequest`
        """
        model = SecondaryObjectEventRequest()
        if include_optional:
            return SecondaryObjectEventRequest(
                event_detection_type = 'LOG_ALL',
                time_span = spacetower_orbit_extrapolation_python_client.models.time_span.TimeSpan(
                    start_date = '2024-01-01T00:00Z', 
                    end_date = '2024-01-02T00:00Z', ),
                secondary_object_event_definitions = [
                    spacetower_orbit_extrapolation_python_client.models.secondary_object_event_definition.SecondaryObjectEventDefinition(
                        event_definition_type = 'CLOSEST_APPROACH', 
                        propagation_type = 'KEPLERIAN', 
                        secondary_object = spacetower_orbit_extrapolation_python_client.models.secondary_object_definition.SecondaryObjectDefinition(
                            name = 'Secondary', 
                            orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                                orbit_type = 'CARTESIAN', ), ), )
                    ]
            )
        else:
            return SecondaryObjectEventRequest(
                secondary_object_event_definitions = [
                    spacetower_orbit_extrapolation_python_client.models.secondary_object_event_definition.SecondaryObjectEventDefinition(
                        event_definition_type = 'CLOSEST_APPROACH', 
                        propagation_type = 'KEPLERIAN', 
                        secondary_object = spacetower_orbit_extrapolation_python_client.models.secondary_object_definition.SecondaryObjectDefinition(
                            name = 'Secondary', 
                            orbit = spacetower_orbit_extrapolation_python_client.models.orbit.Orbit(
                                orbit_type = 'CARTESIAN', ), ), )
                    ],
        )
        """

    def testSecondaryObjectEventRequest(self):
        """Test SecondaryObjectEventRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
