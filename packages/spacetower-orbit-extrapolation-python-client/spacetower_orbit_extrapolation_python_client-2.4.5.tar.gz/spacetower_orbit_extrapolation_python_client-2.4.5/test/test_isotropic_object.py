# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbit_extrapolation_python_client.models.isotropic_object import IsotropicObject

class TestIsotropicObject(unittest.TestCase):
    """IsotropicObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IsotropicObject:
        """Test IsotropicObject
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IsotropicObject`
        """
        model = IsotropicObject()
        if include_optional:
            return IsotropicObject(
                mass = 0,
                drag_coefficient = 0,
                drag_cross_section = 0,
                radiation_cross_section = 0,
                radiation_coefficients = spacetower_orbit_extrapolation_python_client.models.radiation_coefficients.RadiationCoefficients(
                    radiation_coefficients_type = 'REFLECTION_ABSORPTION', ),
                propulsion_system = spacetower_orbit_extrapolation_python_client.models.propulsion_system.PropulsionSystem(
                    active_propulsion_power_consumption = 0.0, 
                    thruster = spacetower_orbit_extrapolation_python_client.models.thruster.Thruster(
                        thrust = 0, 
                        specific_impulse = 0, 
                        axis_in_space_object_frame = spacetower_orbit_extrapolation_python_client.models.vector3_d.Vector3D(
                            x = 1.337, 
                            y = 1.337, 
                            z = 1.337, ), ), ),
                solar_array_system = spacetower_orbit_extrapolation_python_client.models.solar_array_system.SolarArraySystem(
                    solar_array_power = 0.0, ),
                battery_model = spacetower_orbit_extrapolation_python_client.models.battery_model.BatteryModel(
                    nominal_capacity = 0.0, 
                    depth_of_discharge = 1.337, 
                    initial_charge = 0.0, 
                    minimum_charge_when_firing = 0.0, )
            )
        else:
            return IsotropicObject(
                mass = 0,
                drag_coefficient = 0,
        )
        """

    def testIsotropicObject(self):
        """Test IsotropicObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
