# coding: utf-8

"""
    Orbit Extrapolation API

    Orbit Extrapolation API

    The version of the OpenAPI document: 2.4.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class CartesianCovarianceFrameId(str, Enum):
    """
    For a Local Orbital Frame e.g. QSW (a.k.a. RTN), inertial means that the rotation rate w.r.t.  inertial is ignored when converting velocities. For LVLH frames, the CCSDS standard is adopted.<br> - ```CIRF```: Celestial Intermediate Reference Frame. this is a quasi-inertial Earth-centred system. - ```EME2000```: Earth Mean Equator and Equinox at epoch J2000. The J2000 frame is realized by the transformational algorithm between it and the Earth Fixed frame. - ```GCRF```: Geocentric Celestial Reference Frame. It is a standard inertial coordinate system for the Earth, with origin at the geocenter. - ```GTOD```: Greenwich True-of-Date. It is a rotating, right-handed, Cartesian system with the origin at the Earth's center. - ```ITRF2020```: International Terrestrial Reference Frame. It is a rotating Earth-Fixed frame with data from 2020 used in the frame formation. - ```LVLH_INERTIAL```: Constant for LVLH frame considered inertial (Z axis aligned with opposite of position, Y axis aligned with opposite of orbital momentum) - ```LVLH_ROTATING```: Constant for LVLH frame (Z axis aligned with opposite of position, Y axis aligned with opposite of orbital momentum) - ```QSW_INERTIAL```: Constant for QSW frame considered inertial (X axis aligned with position, Z axis aligned with orbital momentum) - ```QSW_ROTATING```: Constant for QSW frame (X axis aligned with position, Z axis aligned with orbital momentum) - ```TNW_INERTIAL```: Constant for TNW frame considered inertial (X axis aligned with velocity, Z axis aligned with orbital momentum) - ```TNW_ROTATING```: Constant for TNW frame (X axis aligned with velocity, Z axis aligned with orbital momentum) 
    """

    """
    allowed enum values
    """
    EME2000 = 'EME2000'
    CIRF = 'CIRF'
    GCRF = 'GCRF'
    ITRF2020 = 'ITRF2020'
    GTOD = 'GTOD'
    QSW_INERTIAL = 'QSW_INERTIAL'
    QSW_ROTATING = 'QSW_ROTATING'
    TNW_INERTIAL = 'TNW_INERTIAL'
    TNW_ROTATING = 'TNW_ROTATING'
    LVLH_INERTIAL = 'LVLH_INERTIAL'
    LVLH_ROTATING = 'LVLH_ROTATING'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CartesianCovarianceFrameId from a JSON string"""
        return cls(json.loads(json_str))


