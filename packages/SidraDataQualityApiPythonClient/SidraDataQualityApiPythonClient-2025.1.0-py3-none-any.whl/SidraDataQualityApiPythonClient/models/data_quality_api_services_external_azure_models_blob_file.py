# coding: utf-8

"""
    DataQuality API

    DataQuality API  # noqa: E501

    OpenAPI spec version: 1.0
    Contact: info@sidra.dev
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DataQualityApiServicesExternalAzureModelsBlobFile(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'file_name': 'str',
        'absolute_name': 'str',
        'modified_date': 'datetime',
        'content': 'str',
        'download_url': 'str',
        'web_display_url': 'str'
    }

    attribute_map = {
        'file_name': 'fileName',
        'absolute_name': 'absoluteName',
        'modified_date': 'modifiedDate',
        'content': 'content',
        'download_url': 'downloadUrl',
        'web_display_url': 'webDisplayUrl'
    }

    def __init__(self, file_name=None, absolute_name=None, modified_date=None, content=None, download_url=None, web_display_url=None):  # noqa: E501
        """DataQualityApiServicesExternalAzureModelsBlobFile - a model defined in Swagger"""  # noqa: E501
        self._file_name = None
        self._absolute_name = None
        self._modified_date = None
        self._content = None
        self._download_url = None
        self._web_display_url = None
        self.discriminator = None
        if file_name is not None:
            self.file_name = file_name
        if absolute_name is not None:
            self.absolute_name = absolute_name
        if modified_date is not None:
            self.modified_date = modified_date
        if content is not None:
            self.content = content
        if download_url is not None:
            self.download_url = download_url
        if web_display_url is not None:
            self.web_display_url = web_display_url

    @property
    def file_name(self):
        """Gets the file_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The file_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: str
        """
        return self._file_name

    @file_name.setter
    def file_name(self, file_name):
        """Sets the file_name of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param file_name: The file_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: str
        """

        self._file_name = file_name

    @property
    def absolute_name(self):
        """Gets the absolute_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The absolute_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: str
        """
        return self._absolute_name

    @absolute_name.setter
    def absolute_name(self, absolute_name):
        """Sets the absolute_name of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param absolute_name: The absolute_name of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: str
        """

        self._absolute_name = absolute_name

    @property
    def modified_date(self):
        """Gets the modified_date of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The modified_date of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: datetime
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param modified_date: The modified_date of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: datetime
        """

        self._modified_date = modified_date

    @property
    def content(self):
        """Gets the content of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The content of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param content: The content of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: str
        """

        self._content = content

    @property
    def download_url(self):
        """Gets the download_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The download_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param download_url: The download_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def web_display_url(self):
        """Gets the web_display_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501


        :return: The web_display_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :rtype: str
        """
        return self._web_display_url

    @web_display_url.setter
    def web_display_url(self, web_display_url):
        """Sets the web_display_url of this DataQualityApiServicesExternalAzureModelsBlobFile.


        :param web_display_url: The web_display_url of this DataQualityApiServicesExternalAzureModelsBlobFile.  # noqa: E501
        :type: str
        """

        self._web_display_url = web_display_url

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DataQualityApiServicesExternalAzureModelsBlobFile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DataQualityApiServicesExternalAzureModelsBlobFile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
