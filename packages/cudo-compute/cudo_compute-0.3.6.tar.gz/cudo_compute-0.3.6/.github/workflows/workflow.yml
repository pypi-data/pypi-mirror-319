name: Publish package to PyPI

on: release

jobs:
  build:
    name: Generate
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Gen Swagger File
        run: python3 tools/swaggerfix.py
      - name: Run Swagger Codegen
        uses: ./.github/actions/swagger-codegen
        with:
          output: out
          input: fix.swagger.json
          action: generate
      - name: Copy files
        run: |
          rm -rf src
          mkdir -p src
          cp -r out/cudo_compute src
          cp helpers/* src/cudo_compute
          echo "import cudo_compute.auth_config as AuthConfig" >> src/cudo_compute/__init__.py
          echo "import cudo_compute.cudo_api as cudo_api" >> src/cudo_compute/__init__.py
          python3 tools/authfix.py
      - name: Install pypa/build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: python3 -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: >-
      Publish Python distribution to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cudo-compute  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

#  github-release:
#    name: >-
#      Sign the Python distribution with Sigstore
#      and upload them to GitHub Release
#    needs:
#    - publish-to-pypi
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write  # IMPORTANT: mandatory for making GitHub Releases
#      id-token: write  # IMPORTANT: mandatory for sigstore
#
#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v3
#      with:
#        name: python-package-distributions
#        path: dist/
#    - name: Sign the dists with Sigstore
#      uses: sigstore/gh-action-sigstore-python@v1.2.3
#      with:
#        inputs: >-
#          ./dist/*.tar.gz
#          ./dist/*.whl
#    - name: Create GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      run: >-
#        gh release create
#        '${{ github.ref_name }}'
#        --repo '${{ github.repository }}'
#        --notes ""
#    - name: Upload artifact signatures to GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#      # Upload to GitHub Release using the `gh` CLI.
#      # `dist/` contains the built packages, and the
#      # sigstore-produced signatures and certificates.
#      run: >-
#        gh release upload
#        '${{ github.ref_name }}' dist/**
#        --repo '${{ github.repository }}'