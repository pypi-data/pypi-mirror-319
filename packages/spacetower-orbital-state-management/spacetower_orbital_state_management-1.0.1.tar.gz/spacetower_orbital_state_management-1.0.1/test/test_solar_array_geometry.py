# coding: utf-8

"""
    Orbital State Management API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbital_state_management.models.solar_array_geometry import SolarArrayGeometry

class TestSolarArrayGeometry(unittest.TestCase):
    """SolarArrayGeometry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SolarArrayGeometry:
        """Test SolarArrayGeometry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SolarArrayGeometry`
        """
        model = SolarArrayGeometry()
        if include_optional:
            return SolarArrayGeometry(
                radiation_coefficients = spacetower_orbital_state_management.models.reflection_absorption_coefficients.ReflectionAbsorptionCoefficients(),
                drag_coefficient = 1.337,
                surface_area = 1.337,
                normal_axis_in_space_object_frame = spacetower_orbital_state_management.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, )
            )
        else:
            return SolarArrayGeometry(
                surface_area = 1.337,
                normal_axis_in_space_object_frame = spacetower_orbital_state_management.models.vector3_d.Vector3D(
                    x = 1.337, 
                    y = 1.337, 
                    z = 1.337, ),
        )
        """

    def testSolarArrayGeometry(self):
        """Test SolarArrayGeometry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
