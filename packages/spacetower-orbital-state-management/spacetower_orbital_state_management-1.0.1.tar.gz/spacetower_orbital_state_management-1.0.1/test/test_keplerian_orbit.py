# coding: utf-8

"""
    Orbital State Management API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_orbital_state_management.models.keplerian_orbit import KeplerianOrbit

class TestKeplerianOrbit(unittest.TestCase):
    """KeplerianOrbit unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KeplerianOrbit:
        """Test KeplerianOrbit
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KeplerianOrbit`
        """
        model = KeplerianOrbit()
        if include_optional:
            return KeplerianOrbit(
                semi_major_axis = 1.337,
                eccentricity = 1.337,
                inclination = 1.337,
                argument_of_perigee = 1.337,
                raan = 1.337,
                anomaly = 1.337,
                anomaly_type = 'ECCENTRIC',
                mean_osc_type = 'OSCULATING',
                inertial_frame_id = 'EME2000'
            )
        else:
            return KeplerianOrbit(
                semi_major_axis = 1.337,
                eccentricity = 1.337,
                inclination = 1.337,
                argument_of_perigee = 1.337,
                raan = 1.337,
                anomaly = 1.337,
                anomaly_type = 'ECCENTRIC',
                mean_osc_type = 'OSCULATING',
                inertial_frame_id = 'EME2000',
        )
        """

    def testKeplerianOrbit(self):
        """Test KeplerianOrbit"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
