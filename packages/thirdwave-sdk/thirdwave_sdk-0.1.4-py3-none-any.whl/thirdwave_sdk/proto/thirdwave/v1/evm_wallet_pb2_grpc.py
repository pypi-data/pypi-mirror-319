# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from thirdwave.v1 import evm_wallet_pb2 as thirdwave_dot_v1_dot_evm__wallet__pb2


class EvmWalletServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOne = channel.unary_unary(
                '/thirdwave.v1.EvmWalletService/GetOne',
                request_serializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.SerializeToString,
                response_deserializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.FromString,
                _registered_method=True)
        self.GetMany = channel.stream_stream(
                '/thirdwave.v1.EvmWalletService/GetMany',
                request_serializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.SerializeToString,
                response_deserializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.FromString,
                _registered_method=True)


class EvmWalletServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOne(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMany(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EvmWalletServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOne': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOne,
                    request_deserializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.FromString,
                    response_serializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.SerializeToString,
            ),
            'GetMany': grpc.stream_stream_rpc_method_handler(
                    servicer.GetMany,
                    request_deserializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.FromString,
                    response_serializer=thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'thirdwave.v1.EvmWalletService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('thirdwave.v1.EvmWalletService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EvmWalletService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOne(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/thirdwave.v1.EvmWalletService/GetOne',
            thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.SerializeToString,
            thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMany(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/thirdwave.v1.EvmWalletService/GetMany',
            thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletRequest.SerializeToString,
            thirdwave_dot_v1_dot_evm__wallet__pb2.EvmWalletResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
