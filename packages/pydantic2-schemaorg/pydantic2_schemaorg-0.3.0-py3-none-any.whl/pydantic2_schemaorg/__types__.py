types = {
    "Thing": ("Thing", "pydantic2_schemaorg.Thing", "Thing"),
    "Place": ("Place", "pydantic2_schemaorg.Place", "Place"),
    "Organization": (
        "Organization",
        "pydantic2_schemaorg.Organization",
        "Organization",
    ),
    "LocalBusiness": (
        "LocalBusiness",
        "pydantic2_schemaorg.LocalBusiness",
        "LocalBusiness",
    ),
    "FoodEstablishment": (
        "FoodEstablishment",
        "pydantic2_schemaorg.FoodEstablishment",
        "FoodEstablishment",
    ),
    "IceCreamShop": (
        "IceCreamShop",
        "pydantic2_schemaorg.IceCreamShop",
        "IceCreamShop",
    ),
    "Intangible": ("Intangible", "pydantic2_schemaorg.Intangible", "Intangible"),
    "Enumeration": ("Enumeration", "pydantic2_schemaorg.Enumeration", "Enumeration"),
    "MedicalEnumeration": (
        "MedicalEnumeration",
        "pydantic2_schemaorg.MedicalEnumeration",
        "MedicalEnumeration",
    ),
    "MedicalTrialDesign": (
        "MedicalTrialDesign",
        "pydantic2_schemaorg.MedicalTrialDesign",
        "MedicalTrialDesign",
    ),
    "OpenTrial": ("OpenTrial", "pydantic2_schemaorg.OpenTrial", "OpenTrial"),
    "StatusEnumeration": (
        "StatusEnumeration",
        "pydantic2_schemaorg.StatusEnumeration",
        "StatusEnumeration",
    ),
    "PaymentStatusType": (
        "PaymentStatusType",
        "pydantic2_schemaorg.PaymentStatusType",
        "PaymentStatusType",
    ),
    "PaymentDeclined": (
        "PaymentDeclined",
        "pydantic2_schemaorg.PaymentDeclined",
        "PaymentDeclined",
    ),
    "HealthAspectEnumeration": (
        "HealthAspectEnumeration",
        "pydantic2_schemaorg.HealthAspectEnumeration",
        "HealthAspectEnumeration",
    ),
    "MayTreatHealthAspect": (
        "MayTreatHealthAspect",
        "pydantic2_schemaorg.MayTreatHealthAspect",
        "MayTreatHealthAspect",
    ),
    "HealthInsurancePlan": (
        "HealthInsurancePlan",
        "pydantic2_schemaorg.HealthInsurancePlan",
        "HealthInsurancePlan",
    ),
    "MusicReleaseFormatType": (
        "MusicReleaseFormatType",
        "pydantic2_schemaorg.MusicReleaseFormatType",
        "MusicReleaseFormatType",
    ),
    "LaserDiscFormat": (
        "LaserDiscFormat",
        "pydantic2_schemaorg.LaserDiscFormat",
        "LaserDiscFormat",
    ),
    "PaymentMethodType": (
        "PaymentMethodType",
        "pydantic2_schemaorg.PaymentMethodType",
        "PaymentMethodType",
    ),
    "PhoneCarrierPayment": (
        "PhoneCarrierPayment",
        "pydantic2_schemaorg.PhoneCarrierPayment",
        "PhoneCarrierPayment",
    ),
    "PriceComponentTypeEnumeration": (
        "PriceComponentTypeEnumeration",
        "pydantic2_schemaorg.PriceComponentTypeEnumeration",
        "PriceComponentTypeEnumeration",
    ),
    "CreativeWork": (
        "CreativeWork",
        "pydantic2_schemaorg.CreativeWork",
        "CreativeWork",
    ),
    "Article": ("Article", "pydantic2_schemaorg.Article", "Article"),
    "SocialMediaPosting": (
        "SocialMediaPosting",
        "pydantic2_schemaorg.SocialMediaPosting",
        "SocialMediaPosting",
    ),
    "DiscussionForumPosting": (
        "DiscussionForumPosting",
        "pydantic2_schemaorg.DiscussionForumPosting",
        "DiscussionForumPosting",
    ),
    "Event": ("Event", "pydantic2_schemaorg.Event", "Event"),
    "PublicationEvent": (
        "PublicationEvent",
        "pydantic2_schemaorg.PublicationEvent",
        "PublicationEvent",
    ),
    "OnDemandEvent": (
        "OnDemandEvent",
        "pydantic2_schemaorg.OnDemandEvent",
        "OnDemandEvent",
    ),
    "BookFormatType": (
        "BookFormatType",
        "pydantic2_schemaorg.BookFormatType",
        "BookFormatType",
    ),
    "Hardcover": ("Hardcover", "pydantic2_schemaorg.Hardcover", "Hardcover"),
    "GovernmentOrganization": (
        "GovernmentOrganization",
        "pydantic2_schemaorg.GovernmentOrganization",
        "GovernmentOrganization",
    ),
    "Product": ("Product", "pydantic2_schemaorg.Product", "Product"),
    "Vehicle": ("Vehicle", "pydantic2_schemaorg.Vehicle", "Vehicle"),
    "Motorcycle": ("Motorcycle", "pydantic2_schemaorg.Motorcycle", "Motorcycle"),
    "GeospatialGeometry": (
        "GeospatialGeometry",
        "pydantic2_schemaorg.GeospatialGeometry",
        "GeospatialGeometry",
    ),
    "Ticket": ("Ticket", "pydantic2_schemaorg.Ticket", "Ticket"),
    "DigitalFormat": (
        "DigitalFormat",
        "pydantic2_schemaorg.DigitalFormat",
        "DigitalFormat",
    ),
    "DVDFormat": ("DVDFormat", "pydantic2_schemaorg.DVDFormat", "DVDFormat"),
    "MedicalEntity": (
        "MedicalEntity",
        "pydantic2_schemaorg.MedicalEntity",
        "MedicalEntity",
    ),
    "AnatomicalStructure": (
        "AnatomicalStructure",
        "pydantic2_schemaorg.AnatomicalStructure",
        "AnatomicalStructure",
    ),
    "BrainStructure": (
        "BrainStructure",
        "pydantic2_schemaorg.BrainStructure",
        "BrainStructure",
    ),
    "MediaObject": ("MediaObject", "pydantic2_schemaorg.MediaObject", "MediaObject"),
    "MusicVideoObject": (
        "MusicVideoObject",
        "pydantic2_schemaorg.MusicVideoObject",
        "MusicVideoObject",
    ),
    "MedicalCondition": (
        "MedicalCondition",
        "pydantic2_schemaorg.MedicalCondition",
        "MedicalCondition",
    ),
    "MedicalSignOrSymptom": (
        "MedicalSignOrSymptom",
        "pydantic2_schemaorg.MedicalSignOrSymptom",
        "MedicalSignOrSymptom",
    ),
    "MedicalSign": ("MedicalSign", "pydantic2_schemaorg.MedicalSign", "MedicalSign"),
    "EventStatusType": (
        "EventStatusType",
        "pydantic2_schemaorg.EventStatusType",
        "EventStatusType",
    ),
    "EventRescheduled": (
        "EventRescheduled",
        "pydantic2_schemaorg.EventRescheduled",
        "EventRescheduled",
    ),
    "Accommodation": (
        "Accommodation",
        "pydantic2_schemaorg.Accommodation",
        "Accommodation",
    ),
    "CampingPitch": (
        "CampingPitch",
        "pydantic2_schemaorg.CampingPitch",
        "CampingPitch",
    ),
    "OrderItem": ("OrderItem", "pydantic2_schemaorg.OrderItem", "OrderItem"),
    "Action": ("Action", "pydantic2_schemaorg.Action", "Action"),
    "InteractAction": (
        "InteractAction",
        "pydantic2_schemaorg.InteractAction",
        "InteractAction",
    ),
    "FollowAction": (
        "FollowAction",
        "pydantic2_schemaorg.FollowAction",
        "FollowAction",
    ),
    "ScholarlyArticle": (
        "ScholarlyArticle",
        "pydantic2_schemaorg.ScholarlyArticle",
        "ScholarlyArticle",
    ),
    "OrderStatus": ("OrderStatus", "pydantic2_schemaorg.OrderStatus", "OrderStatus"),
    "OrderProcessing": (
        "OrderProcessing",
        "pydantic2_schemaorg.OrderProcessing",
        "OrderProcessing",
    ),
    "CivicStructure": (
        "CivicStructure",
        "pydantic2_schemaorg.CivicStructure",
        "CivicStructure",
    ),
    "PlaceOfWorship": (
        "PlaceOfWorship",
        "pydantic2_schemaorg.PlaceOfWorship",
        "PlaceOfWorship",
    ),
    "Map": ("Map", "pydantic2_schemaorg.Map", "Map"),
    "QualitativeValue": (
        "QualitativeValue",
        "pydantic2_schemaorg.QualitativeValue",
        "QualitativeValue",
    ),
    "DriveWheelConfigurationValue": (
        "DriveWheelConfigurationValue",
        "pydantic2_schemaorg.DriveWheelConfigurationValue",
        "DriveWheelConfigurationValue",
    ),
    "AllWheelDriveConfiguration": (
        "AllWheelDriveConfiguration",
        "pydantic2_schemaorg.AllWheelDriveConfiguration",
        "AllWheelDriveConfiguration",
    ),
    "AdultOrientedEnumeration": (
        "AdultOrientedEnumeration",
        "pydantic2_schemaorg.AdultOrientedEnumeration",
        "AdultOrientedEnumeration",
    ),
    "TobaccoNicotineConsideration": (
        "TobaccoNicotineConsideration",
        "pydantic2_schemaorg.TobaccoNicotineConsideration",
        "TobaccoNicotineConsideration",
    ),
    "Comment": ("Comment", "pydantic2_schemaorg.Comment", "Comment"),
    "CorrectionComment": (
        "CorrectionComment",
        "pydantic2_schemaorg.CorrectionComment",
        "CorrectionComment",
    ),
    "MeasurementTypeEnumeration": (
        "MeasurementTypeEnumeration",
        "pydantic2_schemaorg.MeasurementTypeEnumeration",
        "MeasurementTypeEnumeration",
    ),
    "WearableMeasurementTypeEnumeration": (
        "WearableMeasurementTypeEnumeration",
        "pydantic2_schemaorg.WearableMeasurementTypeEnumeration",
        "WearableMeasurementTypeEnumeration",
    ),
    "WearableMeasurementWidth": (
        "WearableMeasurementWidth",
        "pydantic2_schemaorg.WearableMeasurementWidth",
        "WearableMeasurementWidth",
    ),
    "UserInteraction": (
        "UserInteraction",
        "pydantic2_schemaorg.UserInteraction",
        "UserInteraction",
    ),
    "UserPageVisits": (
        "UserPageVisits",
        "pydantic2_schemaorg.UserPageVisits",
        "UserPageVisits",
    ),
    "DefinedTermSet": (
        "DefinedTermSet",
        "pydantic2_schemaorg.DefinedTermSet",
        "DefinedTermSet",
    ),
    "Clip": ("Clip", "pydantic2_schemaorg.Clip", "Clip"),
    "MedicalImagingTechnique": (
        "MedicalImagingTechnique",
        "pydantic2_schemaorg.MedicalImagingTechnique",
        "MedicalImagingTechnique",
    ),
    "MRI": ("MRI", "pydantic2_schemaorg.MRI", "MRI"),
    "WearableMeasurementSleeve": (
        "WearableMeasurementSleeve",
        "pydantic2_schemaorg.WearableMeasurementSleeve",
        "WearableMeasurementSleeve",
    ),
    "CommunicateAction": (
        "CommunicateAction",
        "pydantic2_schemaorg.CommunicateAction",
        "CommunicateAction",
    ),
    "CheckInAction": (
        "CheckInAction",
        "pydantic2_schemaorg.CheckInAction",
        "CheckInAction",
    ),
    "ReservationStatusType": (
        "ReservationStatusType",
        "pydantic2_schemaorg.ReservationStatusType",
        "ReservationStatusType",
    ),
    "ReservationPending": (
        "ReservationPending",
        "pydantic2_schemaorg.ReservationPending",
        "ReservationPending",
    ),
    "MediaEnumeration": (
        "MediaEnumeration",
        "pydantic2_schemaorg.MediaEnumeration",
        "MediaEnumeration",
    ),
    "IPTCDigitalSourceEnumeration": (
        "IPTCDigitalSourceEnumeration",
        "pydantic2_schemaorg.IPTCDigitalSourceEnumeration",
        "IPTCDigitalSourceEnumeration",
    ),
    "AlgorithmicallyEnhancedDigitalSource": (
        "AlgorithmicallyEnhancedDigitalSource",
        "pydantic2_schemaorg.AlgorithmicallyEnhancedDigitalSource",
        "AlgorithmicallyEnhancedDigitalSource",
    ),
    "EnergyEfficiencyEnumeration": (
        "EnergyEfficiencyEnumeration",
        "pydantic2_schemaorg.EnergyEfficiencyEnumeration",
        "EnergyEfficiencyEnumeration",
    ),
    "EUEnergyEfficiencyEnumeration": (
        "EUEnergyEfficiencyEnumeration",
        "pydantic2_schemaorg.EUEnergyEfficiencyEnumeration",
        "EUEnergyEfficiencyEnumeration",
    ),
    "EUEnergyEfficiencyCategoryA1Plus": (
        "EUEnergyEfficiencyCategoryA1Plus",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryA1Plus",
        "EUEnergyEfficiencyCategoryA1Plus",
    ),
    "SomeProducts": (
        "SomeProducts",
        "pydantic2_schemaorg.SomeProducts",
        "SomeProducts",
    ),
    "SizeSystemEnumeration": (
        "SizeSystemEnumeration",
        "pydantic2_schemaorg.SizeSystemEnumeration",
        "SizeSystemEnumeration",
    ),
    "WearableSizeSystemEnumeration": (
        "WearableSizeSystemEnumeration",
        "pydantic2_schemaorg.WearableSizeSystemEnumeration",
        "WearableSizeSystemEnumeration",
    ),
    "WearableSizeSystemJP": (
        "WearableSizeSystemJP",
        "pydantic2_schemaorg.WearableSizeSystemJP",
        "WearableSizeSystemJP",
    ),
    "Demand": ("Demand", "pydantic2_schemaorg.Demand", "Demand"),
    "MediaManipulationRatingEnumeration": (
        "MediaManipulationRatingEnumeration",
        "pydantic2_schemaorg.MediaManipulationRatingEnumeration",
        "MediaManipulationRatingEnumeration",
    ),
    "SatireOrParodyContent": (
        "SatireOrParodyContent",
        "pydantic2_schemaorg.SatireOrParodyContent",
        "SatireOrParodyContent",
    ),
    "MotorizedBicycle": (
        "MotorizedBicycle",
        "pydantic2_schemaorg.MotorizedBicycle",
        "MotorizedBicycle",
    ),
    "SocialEvent": ("SocialEvent", "pydantic2_schemaorg.SocialEvent", "SocialEvent"),
    "EntertainmentBusiness": (
        "EntertainmentBusiness",
        "pydantic2_schemaorg.EntertainmentBusiness",
        "EntertainmentBusiness",
    ),
    "ArtGallery": ("ArtGallery", "pydantic2_schemaorg.ArtGallery", "ArtGallery"),
    "ItemListOrderType": (
        "ItemListOrderType",
        "pydantic2_schemaorg.ItemListOrderType",
        "ItemListOrderType",
    ),
    "ItemListOrderAscending": (
        "ItemListOrderAscending",
        "pydantic2_schemaorg.ItemListOrderAscending",
        "ItemListOrderAscending",
    ),
    "ListItem": ("ListItem", "pydantic2_schemaorg.ListItem", "ListItem"),
    "ItemList": ("ItemList", "pydantic2_schemaorg.ItemList", "ItemList"),
    "HowToSection": (
        "HowToSection",
        "pydantic2_schemaorg.HowToSection",
        "HowToSection",
    ),
    "Residence": ("Residence", "pydantic2_schemaorg.Residence", "Residence"),
    "AllergiesHealthAspect": (
        "AllergiesHealthAspect",
        "pydantic2_schemaorg.AllergiesHealthAspect",
        "AllergiesHealthAspect",
    ),
    "Bakery": ("Bakery", "pydantic2_schemaorg.Bakery", "Bakery"),
    "Specialty": ("Specialty", "pydantic2_schemaorg.Specialty", "Specialty"),
    "MedicalSpecialty": (
        "MedicalSpecialty",
        "pydantic2_schemaorg.MedicalSpecialty",
        "MedicalSpecialty",
    ),
    "Radiography": ("Radiography", "pydantic2_schemaorg.Radiography", "Radiography"),
    "OrganizeAction": (
        "OrganizeAction",
        "pydantic2_schemaorg.OrganizeAction",
        "OrganizeAction",
    ),
    "AllocateAction": (
        "AllocateAction",
        "pydantic2_schemaorg.AllocateAction",
        "AllocateAction",
    ),
    "AcceptAction": (
        "AcceptAction",
        "pydantic2_schemaorg.AcceptAction",
        "AcceptAction",
    ),
    "SelfCareHealthAspect": (
        "SelfCareHealthAspect",
        "pydantic2_schemaorg.SelfCareHealthAspect",
        "SelfCareHealthAspect",
    ),
    "Quantity": ("Quantity", "pydantic2_schemaorg.Quantity", "Quantity"),
    "Energy": ("Energy", "pydantic2_schemaorg.Energy", "Energy"),
    "SoftwareApplication": (
        "SoftwareApplication",
        "pydantic2_schemaorg.SoftwareApplication",
        "SoftwareApplication",
    ),
    "WebApplication": (
        "WebApplication",
        "pydantic2_schemaorg.WebApplication",
        "WebApplication",
    ),
    "TransferAction": (
        "TransferAction",
        "pydantic2_schemaorg.TransferAction",
        "TransferAction",
    ),
    "DownloadAction": (
        "DownloadAction",
        "pydantic2_schemaorg.DownloadAction",
        "DownloadAction",
    ),
    "NonprofitType": (
        "NonprofitType",
        "pydantic2_schemaorg.NonprofitType",
        "NonprofitType",
    ),
    "USNonprofitType": (
        "USNonprofitType",
        "pydantic2_schemaorg.USNonprofitType",
        "USNonprofitType",
    ),
    "Nonprofit501c10": (
        "Nonprofit501c10",
        "pydantic2_schemaorg.Nonprofit501c10",
        "Nonprofit501c10",
    ),
    "MedicalProcedure": (
        "MedicalProcedure",
        "pydantic2_schemaorg.MedicalProcedure",
        "MedicalProcedure",
    ),
    "TherapeuticProcedure": (
        "TherapeuticProcedure",
        "pydantic2_schemaorg.TherapeuticProcedure",
        "TherapeuticProcedure",
    ),
    "MedicalTherapy": (
        "MedicalTherapy",
        "pydantic2_schemaorg.MedicalTherapy",
        "MedicalTherapy",
    ),
    "RadiationTherapy": (
        "RadiationTherapy",
        "pydantic2_schemaorg.RadiationTherapy",
        "RadiationTherapy",
    ),
    "ReturnMethodEnumeration": (
        "ReturnMethodEnumeration",
        "pydantic2_schemaorg.ReturnMethodEnumeration",
        "ReturnMethodEnumeration",
    ),
    "ReturnByMail": (
        "ReturnByMail",
        "pydantic2_schemaorg.ReturnByMail",
        "ReturnByMail",
    ),
    "ImageObject": ("ImageObject", "pydantic2_schemaorg.ImageObject", "ImageObject"),
    "Barcode": ("Barcode", "pydantic2_schemaorg.Barcode", "Barcode"),
    "Duration": ("Duration", "pydantic2_schemaorg.Duration", "Duration"),
    "TradeAction": ("TradeAction", "pydantic2_schemaorg.TradeAction", "TradeAction"),
    "QuoteAction": ("QuoteAction", "pydantic2_schemaorg.QuoteAction", "QuoteAction"),
    "CheckOutAction": (
        "CheckOutAction",
        "pydantic2_schemaorg.CheckOutAction",
        "CheckOutAction",
    ),
    "PriceTypeEnumeration": (
        "PriceTypeEnumeration",
        "pydantic2_schemaorg.PriceTypeEnumeration",
        "PriceTypeEnumeration",
    ),
    "InvoicePrice": (
        "InvoicePrice",
        "pydantic2_schemaorg.InvoicePrice",
        "InvoicePrice",
    ),
    "HowTo": ("HowTo", "pydantic2_schemaorg.HowTo", "HowTo"),
    "Recipe": ("Recipe", "pydantic2_schemaorg.Recipe", "Recipe"),
    "SideEffectsHealthAspect": (
        "SideEffectsHealthAspect",
        "pydantic2_schemaorg.SideEffectsHealthAspect",
        "SideEffectsHealthAspect",
    ),
    "WearableMeasurementCup": (
        "WearableMeasurementCup",
        "pydantic2_schemaorg.WearableMeasurementCup",
        "WearableMeasurementCup",
    ),
    "StructuredValue": (
        "StructuredValue",
        "pydantic2_schemaorg.StructuredValue",
        "StructuredValue",
    ),
    "PriceSpecification": (
        "PriceSpecification",
        "pydantic2_schemaorg.PriceSpecification",
        "PriceSpecification",
    ),
    "CompoundPriceSpecification": (
        "CompoundPriceSpecification",
        "pydantic2_schemaorg.CompoundPriceSpecification",
        "CompoundPriceSpecification",
    ),
    "MedicineSystem": (
        "MedicineSystem",
        "pydantic2_schemaorg.MedicineSystem",
        "MedicineSystem",
    ),
    "WesternConventional": (
        "WesternConventional",
        "pydantic2_schemaorg.WesternConventional",
        "WesternConventional",
    ),
    "DrugPrescriptionStatus": (
        "DrugPrescriptionStatus",
        "pydantic2_schemaorg.DrugPrescriptionStatus",
        "DrugPrescriptionStatus",
    ),
    "PrescriptionOnly": (
        "PrescriptionOnly",
        "pydantic2_schemaorg.PrescriptionOnly",
        "PrescriptionOnly",
    ),
    "FoodEvent": ("FoodEvent", "pydantic2_schemaorg.FoodEvent", "FoodEvent"),
    "AutomotiveBusiness": (
        "AutomotiveBusiness",
        "pydantic2_schemaorg.AutomotiveBusiness",
        "AutomotiveBusiness",
    ),
    "Service": ("Service", "pydantic2_schemaorg.Service", "Service"),
    "FinancialProduct": (
        "FinancialProduct",
        "pydantic2_schemaorg.FinancialProduct",
        "FinancialProduct",
    ),
    "PaymentMethod": (
        "PaymentMethod",
        "pydantic2_schemaorg.PaymentMethod",
        "PaymentMethod",
    ),
    "PaymentCard": ("PaymentCard", "pydantic2_schemaorg.PaymentCard", "PaymentCard"),
    "LoanOrCredit": (
        "LoanOrCredit",
        "pydantic2_schemaorg.LoanOrCredit",
        "LoanOrCredit",
    ),
    "CreditCard": ("CreditCard", "pydantic2_schemaorg.CreditCard", "CreditCard"),
    "InStorePrepay": (
        "InStorePrepay",
        "pydantic2_schemaorg.InStorePrepay",
        "InStorePrepay",
    ),
    "QuantitativeValueDistribution": (
        "QuantitativeValueDistribution",
        "pydantic2_schemaorg.QuantitativeValueDistribution",
        "QuantitativeValueDistribution",
    ),
    "Game": ("Game", "pydantic2_schemaorg.Game", "Game"),
    "Airline": ("Airline", "pydantic2_schemaorg.Airline", "Airline"),
    "RadioClip": ("RadioClip", "pydantic2_schemaorg.RadioClip", "RadioClip"),
    "ServiceChannel": (
        "ServiceChannel",
        "pydantic2_schemaorg.ServiceChannel",
        "ServiceChannel",
    ),
    "SizeGroupEnumeration": (
        "SizeGroupEnumeration",
        "pydantic2_schemaorg.SizeGroupEnumeration",
        "SizeGroupEnumeration",
    ),
    "WearableSizeGroupEnumeration": (
        "WearableSizeGroupEnumeration",
        "pydantic2_schemaorg.WearableSizeGroupEnumeration",
        "WearableSizeGroupEnumeration",
    ),
    "WearableSizeGroupPetite": (
        "WearableSizeGroupPetite",
        "pydantic2_schemaorg.WearableSizeGroupPetite",
        "WearableSizeGroupPetite",
    ),
    "MedicalBusiness": (
        "MedicalBusiness",
        "pydantic2_schemaorg.MedicalBusiness",
        "MedicalBusiness",
    ),
    "DietNutrition": (
        "DietNutrition",
        "pydantic2_schemaorg.DietNutrition",
        "DietNutrition",
    ),
    "DataCatalog": ("DataCatalog", "pydantic2_schemaorg.DataCatalog", "DataCatalog"),
    "DigitalDocumentPermissionType": (
        "DigitalDocumentPermissionType",
        "pydantic2_schemaorg.DigitalDocumentPermissionType",
        "DigitalDocumentPermissionType",
    ),
    "CommentPermission": (
        "CommentPermission",
        "pydantic2_schemaorg.CommentPermission",
        "CommentPermission",
    ),
    "Nursing": ("Nursing", "pydantic2_schemaorg.Nursing", "Nursing"),
    "Nonprofit501c20": (
        "Nonprofit501c20",
        "pydantic2_schemaorg.Nonprofit501c20",
        "Nonprofit501c20",
    ),
    "MerchantReturnPolicy": (
        "MerchantReturnPolicy",
        "pydantic2_schemaorg.MerchantReturnPolicy",
        "MerchantReturnPolicy",
    ),
    "RestrictedDiet": (
        "RestrictedDiet",
        "pydantic2_schemaorg.RestrictedDiet",
        "RestrictedDiet",
    ),
    "VeganDiet": ("VeganDiet", "pydantic2_schemaorg.VeganDiet", "VeganDiet"),
    "InternationalTrial": (
        "InternationalTrial",
        "pydantic2_schemaorg.InternationalTrial",
        "InternationalTrial",
    ),
    "EmergencyService": (
        "EmergencyService",
        "pydantic2_schemaorg.EmergencyService",
        "EmergencyService",
    ),
    "MedicalOrganization": (
        "MedicalOrganization",
        "pydantic2_schemaorg.MedicalOrganization",
        "MedicalOrganization",
    ),
    "Hospital": ("Hospital", "pydantic2_schemaorg.Hospital", "Hospital"),
    "MedicalProcedureType": (
        "MedicalProcedureType",
        "pydantic2_schemaorg.MedicalProcedureType",
        "MedicalProcedureType",
    ),
    "PercutaneousProcedure": (
        "PercutaneousProcedure",
        "pydantic2_schemaorg.PercutaneousProcedure",
        "PercutaneousProcedure",
    ),
    "Reservation": ("Reservation", "pydantic2_schemaorg.Reservation", "Reservation"),
    "RentalCarReservation": (
        "RentalCarReservation",
        "pydantic2_schemaorg.RentalCarReservation",
        "RentalCarReservation",
    ),
    "AutoDealer": ("AutoDealer", "pydantic2_schemaorg.AutoDealer", "AutoDealer"),
    "SalePrice": ("SalePrice", "pydantic2_schemaorg.SalePrice", "SalePrice"),
    "Nonprofit501c3": (
        "Nonprofit501c3",
        "pydantic2_schemaorg.Nonprofit501c3",
        "Nonprofit501c3",
    ),
    "EUEnergyEfficiencyCategoryA2Plus": (
        "EUEnergyEfficiencyCategoryA2Plus",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryA2Plus",
        "EUEnergyEfficiencyCategoryA2Plus",
    ),
    "SurgicalProcedure": (
        "SurgicalProcedure",
        "pydantic2_schemaorg.SurgicalProcedure",
        "SurgicalProcedure",
    ),
    "EntryPoint": ("EntryPoint", "pydantic2_schemaorg.EntryPoint", "EntryPoint"),
    "GovernmentBenefitsType": (
        "GovernmentBenefitsType",
        "pydantic2_schemaorg.GovernmentBenefitsType",
        "GovernmentBenefitsType",
    ),
    "WearableSizeGroupBoys": (
        "WearableSizeGroupBoys",
        "pydantic2_schemaorg.WearableSizeGroupBoys",
        "WearableSizeGroupBoys",
    ),
    "MapCategoryType": (
        "MapCategoryType",
        "pydantic2_schemaorg.MapCategoryType",
        "MapCategoryType",
    ),
    "SeatingMap": ("SeatingMap", "pydantic2_schemaorg.SeatingMap", "SeatingMap"),
    "OverviewHealthAspect": (
        "OverviewHealthAspect",
        "pydantic2_schemaorg.OverviewHealthAspect",
        "OverviewHealthAspect",
    ),
    "ReservationConfirmed": (
        "ReservationConfirmed",
        "pydantic2_schemaorg.ReservationConfirmed",
        "ReservationConfirmed",
    ),
    "TypesHealthAspect": (
        "TypesHealthAspect",
        "pydantic2_schemaorg.TypesHealthAspect",
        "TypesHealthAspect",
    ),
    "MedicalStudy": (
        "MedicalStudy",
        "pydantic2_schemaorg.MedicalStudy",
        "MedicalStudy",
    ),
    "MedicalTrial": (
        "MedicalTrial",
        "pydantic2_schemaorg.MedicalTrial",
        "MedicalTrial",
    ),
    "GovernmentBuilding": (
        "GovernmentBuilding",
        "pydantic2_schemaorg.GovernmentBuilding",
        "GovernmentBuilding",
    ),
    "CityHall": ("CityHall", "pydantic2_schemaorg.CityHall", "CityHall"),
    "DayOfWeek": ("DayOfWeek", "pydantic2_schemaorg.DayOfWeek", "DayOfWeek"),
    "Tuesday": ("Tuesday", "pydantic2_schemaorg.Tuesday", "Tuesday"),
    "Store": ("Store", "pydantic2_schemaorg.Store", "Store"),
    "LiquorStore": ("LiquorStore", "pydantic2_schemaorg.LiquorStore", "LiquorStore"),
    "Downpayment": ("Downpayment", "pydantic2_schemaorg.Downpayment", "Downpayment"),
    "WebPageElement": (
        "WebPageElement",
        "pydantic2_schemaorg.WebPageElement",
        "WebPageElement",
    ),
    "PublicToilet": (
        "PublicToilet",
        "pydantic2_schemaorg.PublicToilet",
        "PublicToilet",
    ),
    "Physician": ("Physician", "pydantic2_schemaorg.Physician", "Physician"),
    "PhysiciansOffice": (
        "PhysiciansOffice",
        "pydantic2_schemaorg.PhysiciansOffice",
        "PhysiciansOffice",
    ),
    "CarUsageType": (
        "CarUsageType",
        "pydantic2_schemaorg.CarUsageType",
        "CarUsageType",
    ),
    "RentalVehicleUsage": (
        "RentalVehicleUsage",
        "pydantic2_schemaorg.RentalVehicleUsage",
        "RentalVehicleUsage",
    ),
    "SheetMusic": ("SheetMusic", "pydantic2_schemaorg.SheetMusic", "SheetMusic"),
    "InfectiousAgentClass": (
        "InfectiousAgentClass",
        "pydantic2_schemaorg.InfectiousAgentClass",
        "InfectiousAgentClass",
    ),
    "EducationalOccupationalProgram": (
        "EducationalOccupationalProgram",
        "pydantic2_schemaorg.EducationalOccupationalProgram",
        "EducationalOccupationalProgram",
    ),
    "WorkBasedProgram": (
        "WorkBasedProgram",
        "pydantic2_schemaorg.WorkBasedProgram",
        "WorkBasedProgram",
    ),
    "HomeAndConstructionBusiness": (
        "HomeAndConstructionBusiness",
        "pydantic2_schemaorg.HomeAndConstructionBusiness",
        "HomeAndConstructionBusiness",
    ),
    "RoofingContractor": (
        "RoofingContractor",
        "pydantic2_schemaorg.RoofingContractor",
        "RoofingContractor",
    ),
    "DrugCostCategory": (
        "DrugCostCategory",
        "pydantic2_schemaorg.DrugCostCategory",
        "DrugCostCategory",
    ),
    "Dataset": ("Dataset", "pydantic2_schemaorg.Dataset", "Dataset"),
    "DataFeed": ("DataFeed", "pydantic2_schemaorg.DataFeed", "DataFeed"),
    "WearableMeasurementBack": (
        "WearableMeasurementBack",
        "pydantic2_schemaorg.WearableMeasurementBack",
        "WearableMeasurementBack",
    ),
    "MedicalTest": ("MedicalTest", "pydantic2_schemaorg.MedicalTest", "MedicalTest"),
    "Message": ("Message", "pydantic2_schemaorg.Message", "Message"),
    "EmailMessage": (
        "EmailMessage",
        "pydantic2_schemaorg.EmailMessage",
        "EmailMessage",
    ),
    "ShippingDeliveryTime": (
        "ShippingDeliveryTime",
        "pydantic2_schemaorg.ShippingDeliveryTime",
        "ShippingDeliveryTime",
    ),
    "WorkersUnion": (
        "WorkersUnion",
        "pydantic2_schemaorg.WorkersUnion",
        "WorkersUnion",
    ),
    "GameServerStatus": (
        "GameServerStatus",
        "pydantic2_schemaorg.GameServerStatus",
        "GameServerStatus",
    ),
    "LegalService": (
        "LegalService",
        "pydantic2_schemaorg.LegalService",
        "LegalService",
    ),
    "Notary": ("Notary", "pydantic2_schemaorg.Notary", "Notary"),
    "BroadcastEvent": (
        "BroadcastEvent",
        "pydantic2_schemaorg.BroadcastEvent",
        "BroadcastEvent",
    ),
    "CausesHealthAspect": (
        "CausesHealthAspect",
        "pydantic2_schemaorg.CausesHealthAspect",
        "CausesHealthAspect",
    ),
    "TripleBlindedTrial": (
        "TripleBlindedTrial",
        "pydantic2_schemaorg.TripleBlindedTrial",
        "TripleBlindedTrial",
    ),
    "NewsArticle": ("NewsArticle", "pydantic2_schemaorg.NewsArticle", "NewsArticle"),
    "ReportageNewsArticle": (
        "ReportageNewsArticle",
        "pydantic2_schemaorg.ReportageNewsArticle",
        "ReportageNewsArticle",
    ),
    "UserTweets": ("UserTweets", "pydantic2_schemaorg.UserTweets", "UserTweets"),
    "RVPark": ("RVPark", "pydantic2_schemaorg.RVPark", "RVPark"),
    "IngredientsHealthAspect": (
        "IngredientsHealthAspect",
        "pydantic2_schemaorg.IngredientsHealthAspect",
        "IngredientsHealthAspect",
    ),
    "ParkingFacility": (
        "ParkingFacility",
        "pydantic2_schemaorg.ParkingFacility",
        "ParkingFacility",
    ),
    "Room": ("Room", "pydantic2_schemaorg.Room", "Room"),
    "MeetingRoom": ("MeetingRoom", "pydantic2_schemaorg.MeetingRoom", "MeetingRoom"),
    "OfflineTemporarily": (
        "OfflineTemporarily",
        "pydantic2_schemaorg.OfflineTemporarily",
        "OfflineTemporarily",
    ),
    "BodyMeasurementTypeEnumeration": (
        "BodyMeasurementTypeEnumeration",
        "pydantic2_schemaorg.BodyMeasurementTypeEnumeration",
        "BodyMeasurementTypeEnumeration",
    ),
    "BodyMeasurementBust": (
        "BodyMeasurementBust",
        "pydantic2_schemaorg.BodyMeasurementBust",
        "BodyMeasurementBust",
    ),
    "Renal": ("Renal", "pydantic2_schemaorg.Renal", "Renal"),
    "AmusementPark": (
        "AmusementPark",
        "pydantic2_schemaorg.AmusementPark",
        "AmusementPark",
    ),
    "PaidLeave": ("PaidLeave", "pydantic2_schemaorg.PaidLeave", "PaidLeave"),
    "WearableSizeGroupShort": (
        "WearableSizeGroupShort",
        "pydantic2_schemaorg.WearableSizeGroupShort",
        "WearableSizeGroupShort",
    ),
    "OrderInTransit": (
        "OrderInTransit",
        "pydantic2_schemaorg.OrderInTransit",
        "OrderInTransit",
    ),
    "LodgingBusiness": (
        "LodgingBusiness",
        "pydantic2_schemaorg.LodgingBusiness",
        "LodgingBusiness",
    ),
    "BedAndBreakfast": (
        "BedAndBreakfast",
        "pydantic2_schemaorg.BedAndBreakfast",
        "BedAndBreakfast",
    ),
    "DrugPregnancyCategory": (
        "DrugPregnancyCategory",
        "pydantic2_schemaorg.DrugPregnancyCategory",
        "DrugPregnancyCategory",
    ),
    "FDAcategoryB": (
        "FDAcategoryB",
        "pydantic2_schemaorg.FDAcategoryB",
        "FDAcategoryB",
    ),
    "WearableMeasurementInseam": (
        "WearableMeasurementInseam",
        "pydantic2_schemaorg.WearableMeasurementInseam",
        "WearableMeasurementInseam",
    ),
    "HealthAndBeautyBusiness": (
        "HealthAndBeautyBusiness",
        "pydantic2_schemaorg.HealthAndBeautyBusiness",
        "HealthAndBeautyBusiness",
    ),
    "DiagnosticLab": (
        "DiagnosticLab",
        "pydantic2_schemaorg.DiagnosticLab",
        "DiagnosticLab",
    ),
    "GardenStore": ("GardenStore", "pydantic2_schemaorg.GardenStore", "GardenStore"),
    "MerchantReturnEnumeration": (
        "MerchantReturnEnumeration",
        "pydantic2_schemaorg.MerchantReturnEnumeration",
        "MerchantReturnEnumeration",
    ),
    "MerchantReturnUnspecified": (
        "MerchantReturnUnspecified",
        "pydantic2_schemaorg.MerchantReturnUnspecified",
        "MerchantReturnUnspecified",
    ),
    "SolveMathAction": (
        "SolveMathAction",
        "pydantic2_schemaorg.SolveMathAction",
        "SolveMathAction",
    ),
    "MoveAction": ("MoveAction", "pydantic2_schemaorg.MoveAction", "MoveAction"),
    "TravelAction": (
        "TravelAction",
        "pydantic2_schemaorg.TravelAction",
        "TravelAction",
    ),
    "RsvpResponseType": (
        "RsvpResponseType",
        "pydantic2_schemaorg.RsvpResponseType",
        "RsvpResponseType",
    ),
    "WearableSizeGroupMens": (
        "WearableSizeGroupMens",
        "pydantic2_schemaorg.WearableSizeGroupMens",
        "WearableSizeGroupMens",
    ),
    "WearableSizeGroupTall": (
        "WearableSizeGroupTall",
        "pydantic2_schemaorg.WearableSizeGroupTall",
        "WearableSizeGroupTall",
    ),
    "WebPage": ("WebPage", "pydantic2_schemaorg.WebPage", "WebPage"),
    "CollectionPage": (
        "CollectionPage",
        "pydantic2_schemaorg.CollectionPage",
        "CollectionPage",
    ),
    "MediaGallery": (
        "MediaGallery",
        "pydantic2_schemaorg.MediaGallery",
        "MediaGallery",
    ),
    "VideoGallery": (
        "VideoGallery",
        "pydantic2_schemaorg.VideoGallery",
        "VideoGallery",
    ),
    "SafetyHealthAspect": (
        "SafetyHealthAspect",
        "pydantic2_schemaorg.SafetyHealthAspect",
        "SafetyHealthAspect",
    ),
    "NailSalon": ("NailSalon", "pydantic2_schemaorg.NailSalon", "NailSalon"),
    "Landform": ("Landform", "pydantic2_schemaorg.Landform", "Landform"),
    "BodyOfWater": ("BodyOfWater", "pydantic2_schemaorg.BodyOfWater", "BodyOfWater"),
    "RiverBodyOfWater": (
        "RiverBodyOfWater",
        "pydantic2_schemaorg.RiverBodyOfWater",
        "RiverBodyOfWater",
    ),
    "EducationalOrganization": (
        "EducationalOrganization",
        "pydantic2_schemaorg.EducationalOrganization",
        "EducationalOrganization",
    ),
    "HighSchool": ("HighSchool", "pydantic2_schemaorg.HighSchool", "HighSchool"),
    "Hematologic": ("Hematologic", "pydantic2_schemaorg.Hematologic", "Hematologic"),
    "TaxiService": ("TaxiService", "pydantic2_schemaorg.TaxiService", "TaxiService"),
    "PsychologicalTreatment": (
        "PsychologicalTreatment",
        "pydantic2_schemaorg.PsychologicalTreatment",
        "PsychologicalTreatment",
    ),
    "SubwayStation": (
        "SubwayStation",
        "pydantic2_schemaorg.SubwayStation",
        "SubwayStation",
    ),
    "NGO": ("NGO", "pydantic2_schemaorg.NGO", "NGO"),
    "Plumber": ("Plumber", "pydantic2_schemaorg.Plumber", "Plumber"),
    "ShareAction": ("ShareAction", "pydantic2_schemaorg.ShareAction", "ShareAction"),
    "OceanBodyOfWater": (
        "OceanBodyOfWater",
        "pydantic2_schemaorg.OceanBodyOfWater",
        "OceanBodyOfWater",
    ),
    "TheaterEvent": (
        "TheaterEvent",
        "pydantic2_schemaorg.TheaterEvent",
        "TheaterEvent",
    ),
    "Musculoskeletal": (
        "Musculoskeletal",
        "pydantic2_schemaorg.Musculoskeletal",
        "Musculoskeletal",
    ),
    "DiagnosticProcedure": (
        "DiagnosticProcedure",
        "pydantic2_schemaorg.DiagnosticProcedure",
        "DiagnosticProcedure",
    ),
    "CompositeSyntheticDigitalSource": (
        "CompositeSyntheticDigitalSource",
        "pydantic2_schemaorg.CompositeSyntheticDigitalSource",
        "CompositeSyntheticDigitalSource",
    ),
    "FastFoodRestaurant": (
        "FastFoodRestaurant",
        "pydantic2_schemaorg.FastFoodRestaurant",
        "FastFoodRestaurant",
    ),
    "Photograph": ("Photograph", "pydantic2_schemaorg.Photograph", "Photograph"),
    "Campground": ("Campground", "pydantic2_schemaorg.Campground", "Campground"),
    "DistanceFee": ("DistanceFee", "pydantic2_schemaorg.DistanceFee", "DistanceFee"),
    "MedicalEvidenceLevel": (
        "MedicalEvidenceLevel",
        "pydantic2_schemaorg.MedicalEvidenceLevel",
        "MedicalEvidenceLevel",
    ),
    "EvidenceLevelB": (
        "EvidenceLevelB",
        "pydantic2_schemaorg.EvidenceLevelB",
        "EvidenceLevelB",
    ),
    "PhysicalExam": (
        "PhysicalExam",
        "pydantic2_schemaorg.PhysicalExam",
        "PhysicalExam",
    ),
    "Nose": ("Nose", "pydantic2_schemaorg.Nose", "Nose"),
    "OfferCatalog": (
        "OfferCatalog",
        "pydantic2_schemaorg.OfferCatalog",
        "OfferCatalog",
    ),
    "AdministrativeArea": (
        "AdministrativeArea",
        "pydantic2_schemaorg.AdministrativeArea",
        "AdministrativeArea",
    ),
    "Country": ("Country", "pydantic2_schemaorg.Country", "Country"),
    "BarOrPub": ("BarOrPub", "pydantic2_schemaorg.BarOrPub", "BarOrPub"),
    "MedicalStudyStatus": (
        "MedicalStudyStatus",
        "pydantic2_schemaorg.MedicalStudyStatus",
        "MedicalStudyStatus",
    ),
    "ResultsAvailable": (
        "ResultsAvailable",
        "pydantic2_schemaorg.ResultsAvailable",
        "ResultsAvailable",
    ),
    "Audience": ("Audience", "pydantic2_schemaorg.Audience", "Audience"),
    "Researcher": ("Researcher", "pydantic2_schemaorg.Researcher", "Researcher"),
    "Trip": ("Trip", "pydantic2_schemaorg.Trip", "Trip"),
    "TrainTrip": ("TrainTrip", "pydantic2_schemaorg.TrainTrip", "TrainTrip"),
    "FinancialService": (
        "FinancialService",
        "pydantic2_schemaorg.FinancialService",
        "FinancialService",
    ),
    "InsuranceAgency": (
        "InsuranceAgency",
        "pydantic2_schemaorg.InsuranceAgency",
        "InsuranceAgency",
    ),
    "AssessAction": (
        "AssessAction",
        "pydantic2_schemaorg.AssessAction",
        "AssessAction",
    ),
    "ChooseAction": (
        "ChooseAction",
        "pydantic2_schemaorg.ChooseAction",
        "ChooseAction",
    ),
    "VoteAction": ("VoteAction", "pydantic2_schemaorg.VoteAction", "VoteAction"),
    "Offer": ("Offer", "pydantic2_schemaorg.Offer", "Offer"),
    "OfferForPurchase": (
        "OfferForPurchase",
        "pydantic2_schemaorg.OfferForPurchase",
        "OfferForPurchase",
    ),
    "ReactAction": ("ReactAction", "pydantic2_schemaorg.ReactAction", "ReactAction"),
    "EndorseAction": (
        "EndorseAction",
        "pydantic2_schemaorg.EndorseAction",
        "EndorseAction",
    ),
    "Role": ("Role", "pydantic2_schemaorg.Role", "Role"),
    "PerformanceRole": (
        "PerformanceRole",
        "pydantic2_schemaorg.PerformanceRole",
        "PerformanceRole",
    ),
    "UserLikes": ("UserLikes", "pydantic2_schemaorg.UserLikes", "UserLikes"),
    "Bridge": ("Bridge", "pydantic2_schemaorg.Bridge", "Bridge"),
    "PlaceboControlledTrial": (
        "PlaceboControlledTrial",
        "pydantic2_schemaorg.PlaceboControlledTrial",
        "PlaceboControlledTrial",
    ),
    "ContagiousnessHealthAspect": (
        "ContagiousnessHealthAspect",
        "pydantic2_schemaorg.ContagiousnessHealthAspect",
        "ContagiousnessHealthAspect",
    ),
    "Series": ("Series", "pydantic2_schemaorg.Series", "Series"),
    "CreativeWorkSeries": (
        "CreativeWorkSeries",
        "pydantic2_schemaorg.CreativeWorkSeries",
        "CreativeWorkSeries",
    ),
    "Neurologic": ("Neurologic", "pydantic2_schemaorg.Neurologic", "Neurologic"),
    "Episode": ("Episode", "pydantic2_schemaorg.Episode", "Episode"),
    "QuantitativeValue": (
        "QuantitativeValue",
        "pydantic2_schemaorg.QuantitativeValue",
        "QuantitativeValue",
    ),
    "MensClothingStore": (
        "MensClothingStore",
        "pydantic2_schemaorg.MensClothingStore",
        "MensClothingStore",
    ),
    "WearableSizeSystemFR": (
        "WearableSizeSystemFR",
        "pydantic2_schemaorg.WearableSizeSystemFR",
        "WearableSizeSystemFR",
    ),
    "SizeSpecification": (
        "SizeSpecification",
        "pydantic2_schemaorg.SizeSpecification",
        "SizeSpecification",
    ),
    "EUEnergyEfficiencyCategoryG": (
        "EUEnergyEfficiencyCategoryG",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryG",
        "EUEnergyEfficiencyCategoryG",
    ),
    "BioChemEntity": (
        "BioChemEntity",
        "pydantic2_schemaorg.BioChemEntity",
        "BioChemEntity",
    ),
    "Protein": ("Protein", "pydantic2_schemaorg.Protein", "Protein"),
    "LowLactoseDiet": (
        "LowLactoseDiet",
        "pydantic2_schemaorg.LowLactoseDiet",
        "LowLactoseDiet",
    ),
    "ToyStore": ("ToyStore", "pydantic2_schemaorg.ToyStore", "ToyStore"),
    "Sunday": ("Sunday", "pydantic2_schemaorg.Sunday", "Sunday"),
    "AdultEntertainment": (
        "AdultEntertainment",
        "pydantic2_schemaorg.AdultEntertainment",
        "AdultEntertainment",
    ),
    "Thesis": ("Thesis", "pydantic2_schemaorg.Thesis", "Thesis"),
    "InvestmentOrDeposit": (
        "InvestmentOrDeposit",
        "pydantic2_schemaorg.InvestmentOrDeposit",
        "InvestmentOrDeposit",
    ),
    "CompositeCaptureDigitalSource": (
        "CompositeCaptureDigitalSource",
        "pydantic2_schemaorg.CompositeCaptureDigitalSource",
        "CompositeCaptureDigitalSource",
    ),
    "Nonprofit501e": (
        "Nonprofit501e",
        "pydantic2_schemaorg.Nonprofit501e",
        "Nonprofit501e",
    ),
    "Table": ("Table", "pydantic2_schemaorg.Table", "Table"),
    "GameServer": ("GameServer", "pydantic2_schemaorg.GameServer", "GameServer"),
    "BusinessAudience": (
        "BusinessAudience",
        "pydantic2_schemaorg.BusinessAudience",
        "BusinessAudience",
    ),
    "Taxon": ("Taxon", "pydantic2_schemaorg.Taxon", "Taxon"),
    "Completed": ("Completed", "pydantic2_schemaorg.Completed", "Completed"),
    "ReturnFeesEnumeration": (
        "ReturnFeesEnumeration",
        "pydantic2_schemaorg.ReturnFeesEnumeration",
        "ReturnFeesEnumeration",
    ),
    "RestockingFees": (
        "RestockingFees",
        "pydantic2_schemaorg.RestockingFees",
        "RestockingFees",
    ),
    "PropertyValue": (
        "PropertyValue",
        "pydantic2_schemaorg.PropertyValue",
        "PropertyValue",
    ),
    "LocationFeatureSpecification": (
        "LocationFeatureSpecification",
        "pydantic2_schemaorg.LocationFeatureSpecification",
        "LocationFeatureSpecification",
    ),
    "Permit": ("Permit", "pydantic2_schemaorg.Permit", "Permit"),
    "GovernmentPermit": (
        "GovernmentPermit",
        "pydantic2_schemaorg.GovernmentPermit",
        "GovernmentPermit",
    ),
    "MusicEvent": ("MusicEvent", "pydantic2_schemaorg.MusicEvent", "MusicEvent"),
    "BroadcastChannel": (
        "BroadcastChannel",
        "pydantic2_schemaorg.BroadcastChannel",
        "BroadcastChannel",
    ),
    "MedicalObservationalStudyDesign": (
        "MedicalObservationalStudyDesign",
        "pydantic2_schemaorg.MedicalObservationalStudyDesign",
        "MedicalObservationalStudyDesign",
    ),
    "Longitudinal": (
        "Longitudinal",
        "pydantic2_schemaorg.Longitudinal",
        "Longitudinal",
    ),
    "AggregateOffer": (
        "AggregateOffer",
        "pydantic2_schemaorg.AggregateOffer",
        "AggregateOffer",
    ),
    "WearableMeasurementHips": (
        "WearableMeasurementHips",
        "pydantic2_schemaorg.WearableMeasurementHips",
        "WearableMeasurementHips",
    ),
    "ReturnInStore": (
        "ReturnInStore",
        "pydantic2_schemaorg.ReturnInStore",
        "ReturnInStore",
    ),
    "TextObject": ("TextObject", "pydantic2_schemaorg.TextObject", "TextObject"),
    "LowSaltDiet": ("LowSaltDiet", "pydantic2_schemaorg.LowSaltDiet", "LowSaltDiet"),
    "Bone": ("Bone", "pydantic2_schemaorg.Bone", "Bone"),
    "TrainStation": (
        "TrainStation",
        "pydantic2_schemaorg.TrainStation",
        "TrainStation",
    ),
    "Dermatologic": (
        "Dermatologic",
        "pydantic2_schemaorg.Dermatologic",
        "Dermatologic",
    ),
    "RadioSeries": ("RadioSeries", "pydantic2_schemaorg.RadioSeries", "RadioSeries"),
    "EnergyConsumptionDetails": (
        "EnergyConsumptionDetails",
        "pydantic2_schemaorg.EnergyConsumptionDetails",
        "EnergyConsumptionDetails",
    ),
    "DecontextualizedContent": (
        "DecontextualizedContent",
        "pydantic2_schemaorg.DecontextualizedContent",
        "DecontextualizedContent",
    ),
    "DigitalDocument": (
        "DigitalDocument",
        "pydantic2_schemaorg.DigitalDocument",
        "DigitalDocument",
    ),
    "NoteDigitalDocument": (
        "NoteDigitalDocument",
        "pydantic2_schemaorg.NoteDigitalDocument",
        "NoteDigitalDocument",
    ),
    "PodcastSeries": (
        "PodcastSeries",
        "pydantic2_schemaorg.PodcastSeries",
        "PodcastSeries",
    ),
    "ItemAvailability": (
        "ItemAvailability",
        "pydantic2_schemaorg.ItemAvailability",
        "ItemAvailability",
    ),
    "UKNonprofitType": (
        "UKNonprofitType",
        "pydantic2_schemaorg.UKNonprofitType",
        "UKNonprofitType",
    ),
    "CharitableIncorporatedOrganization": (
        "CharitableIncorporatedOrganization",
        "pydantic2_schemaorg.CharitableIncorporatedOrganization",
        "CharitableIncorporatedOrganization",
    ),
    "Geriatric": ("Geriatric", "pydantic2_schemaorg.Geriatric", "Geriatric"),
    "WebContent": ("WebContent", "pydantic2_schemaorg.WebContent", "WebContent"),
    "HealthTopicContent": (
        "HealthTopicContent",
        "pydantic2_schemaorg.HealthTopicContent",
        "HealthTopicContent",
    ),
    "BodyMeasurementFoot": (
        "BodyMeasurementFoot",
        "pydantic2_schemaorg.BodyMeasurementFoot",
        "BodyMeasurementFoot",
    ),
    "WearableSizeGroupWomens": (
        "WearableSizeGroupWomens",
        "pydantic2_schemaorg.WearableSizeGroupWomens",
        "WearableSizeGroupWomens",
    ),
    "Nonprofit501c21": (
        "Nonprofit501c21",
        "pydantic2_schemaorg.Nonprofit501c21",
        "Nonprofit501c21",
    ),
    "InternetCafe": (
        "InternetCafe",
        "pydantic2_schemaorg.InternetCafe",
        "InternetCafe",
    ),
    "PropertyValueSpecification": (
        "PropertyValueSpecification",
        "pydantic2_schemaorg.PropertyValueSpecification",
        "PropertyValueSpecification",
    ),
    "Vessel": ("Vessel", "pydantic2_schemaorg.Vessel", "Vessel"),
    "Vein": ("Vein", "pydantic2_schemaorg.Vein", "Vein"),
    "Skin": ("Skin", "pydantic2_schemaorg.Skin", "Skin"),
    "DigitalPlatformEnumeration": (
        "DigitalPlatformEnumeration",
        "pydantic2_schemaorg.DigitalPlatformEnumeration",
        "DigitalPlatformEnumeration",
    ),
    "AndroidPlatform": (
        "AndroidPlatform",
        "pydantic2_schemaorg.AndroidPlatform",
        "AndroidPlatform",
    ),
    "SportsActivityLocation": (
        "SportsActivityLocation",
        "pydantic2_schemaorg.SportsActivityLocation",
        "SportsActivityLocation",
    ),
    "PublicSwimmingPool": (
        "PublicSwimmingPool",
        "pydantic2_schemaorg.PublicSwimmingPool",
        "PublicSwimmingPool",
    ),
    "Withdrawn": ("Withdrawn", "pydantic2_schemaorg.Withdrawn", "Withdrawn"),
    "Infectious": ("Infectious", "pydantic2_schemaorg.Infectious", "Infectious"),
    "FAQPage": ("FAQPage", "pydantic2_schemaorg.FAQPage", "FAQPage"),
    "FreeReturn": ("FreeReturn", "pydantic2_schemaorg.FreeReturn", "FreeReturn"),
    "Nonprofit501c4": (
        "Nonprofit501c4",
        "pydantic2_schemaorg.Nonprofit501c4",
        "Nonprofit501c4",
    ),
    "MSRP": ("MSRP", "pydantic2_schemaorg.MSRP", "MSRP"),
    "AutoPartsStore": (
        "AutoPartsStore",
        "pydantic2_schemaorg.AutoPartsStore",
        "AutoPartsStore",
    ),
    "LegalValueLevel": (
        "LegalValueLevel",
        "pydantic2_schemaorg.LegalValueLevel",
        "LegalValueLevel",
    ),
    "AuthoritativeLegalValue": (
        "AuthoritativeLegalValue",
        "pydantic2_schemaorg.AuthoritativeLegalValue",
        "AuthoritativeLegalValue",
    ),
    "PawnShop": ("PawnShop", "pydantic2_schemaorg.PawnShop", "PawnShop"),
    "RefundTypeEnumeration": (
        "RefundTypeEnumeration",
        "pydantic2_schemaorg.RefundTypeEnumeration",
        "RefundTypeEnumeration",
    ),
    "ExchangeRefund": (
        "ExchangeRefund",
        "pydantic2_schemaorg.ExchangeRefund",
        "ExchangeRefund",
    ),
    "LearningResource": (
        "LearningResource",
        "pydantic2_schemaorg.LearningResource",
        "LearningResource",
    ),
    "GenderType": ("GenderType", "pydantic2_schemaorg.GenderType", "GenderType"),
    "NoninvasiveProcedure": (
        "NoninvasiveProcedure",
        "pydantic2_schemaorg.NoninvasiveProcedure",
        "NoninvasiveProcedure",
    ),
    "Nonprofit501c16": (
        "Nonprofit501c16",
        "pydantic2_schemaorg.Nonprofit501c16",
        "Nonprofit501c16",
    ),
    "SeeDoctorHealthAspect": (
        "SeeDoctorHealthAspect",
        "pydantic2_schemaorg.SeeDoctorHealthAspect",
        "SeeDoctorHealthAspect",
    ),
    "HVACBusiness": (
        "HVACBusiness",
        "pydantic2_schemaorg.HVACBusiness",
        "HVACBusiness",
    ),
    "ChildrensEvent": (
        "ChildrensEvent",
        "pydantic2_schemaorg.ChildrensEvent",
        "ChildrensEvent",
    ),
    "MisconceptionsHealthAspect": (
        "MisconceptionsHealthAspect",
        "pydantic2_schemaorg.MisconceptionsHealthAspect",
        "MisconceptionsHealthAspect",
    ),
    "Midwifery": ("Midwifery", "pydantic2_schemaorg.Midwifery", "Midwifery"),
    "SoftwareSourceCode": (
        "SoftwareSourceCode",
        "pydantic2_schemaorg.SoftwareSourceCode",
        "SoftwareSourceCode",
    ),
    "Sculpture": ("Sculpture", "pydantic2_schemaorg.Sculpture", "Sculpture"),
    "MerchantReturnUnlimitedWindow": (
        "MerchantReturnUnlimitedWindow",
        "pydantic2_schemaorg.MerchantReturnUnlimitedWindow",
        "MerchantReturnUnlimitedWindow",
    ),
    "Flight": ("Flight", "pydantic2_schemaorg.Flight", "Flight"),
    "Code": ("Code", "pydantic2_schemaorg.Code", "Code"),
    "ReturnLabelSourceEnumeration": (
        "ReturnLabelSourceEnumeration",
        "pydantic2_schemaorg.ReturnLabelSourceEnumeration",
        "ReturnLabelSourceEnumeration",
    ),
    "UserCheckins": (
        "UserCheckins",
        "pydantic2_schemaorg.UserCheckins",
        "UserCheckins",
    ),
    "ConsumeAction": (
        "ConsumeAction",
        "pydantic2_schemaorg.ConsumeAction",
        "ConsumeAction",
    ),
    "EatAction": ("EatAction", "pydantic2_schemaorg.EatAction", "EatAction"),
    "Genetic": ("Genetic", "pydantic2_schemaorg.Genetic", "Genetic"),
    "DefinedTerm": ("DefinedTerm", "pydantic2_schemaorg.DefinedTerm", "DefinedTerm"),
    "Cash": ("Cash", "pydantic2_schemaorg.Cash", "Cash"),
    "Manuscript": ("Manuscript", "pydantic2_schemaorg.Manuscript", "Manuscript"),
    "LeaveAction": ("LeaveAction", "pydantic2_schemaorg.LeaveAction", "LeaveAction"),
    "Reserved": ("Reserved", "pydantic2_schemaorg.Reserved", "Reserved"),
    "RegularPrice": (
        "RegularPrice",
        "pydantic2_schemaorg.RegularPrice",
        "RegularPrice",
    ),
    "City": ("City", "pydantic2_schemaorg.City", "City"),
    "NLNonprofitType": (
        "NLNonprofitType",
        "pydantic2_schemaorg.NLNonprofitType",
        "NLNonprofitType",
    ),
    "DiabeticDiet": (
        "DiabeticDiet",
        "pydantic2_schemaorg.DiabeticDiet",
        "DiabeticDiet",
    ),
    "UseAction": ("UseAction", "pydantic2_schemaorg.UseAction", "UseAction"),
    "WearAction": ("WearAction", "pydantic2_schemaorg.WearAction", "WearAction"),
    "GamePlayMode": (
        "GamePlayMode",
        "pydantic2_schemaorg.GamePlayMode",
        "GamePlayMode",
    ),
    "MerchantReturnNotPermitted": (
        "MerchantReturnNotPermitted",
        "pydantic2_schemaorg.MerchantReturnNotPermitted",
        "MerchantReturnNotPermitted",
    ),
    "InfectiousDisease": (
        "InfectiousDisease",
        "pydantic2_schemaorg.InfectiousDisease",
        "InfectiousDisease",
    ),
    "DonateAction": (
        "DonateAction",
        "pydantic2_schemaorg.DonateAction",
        "DonateAction",
    ),
    "OccupationalTherapy": (
        "OccupationalTherapy",
        "pydantic2_schemaorg.OccupationalTherapy",
        "OccupationalTherapy",
    ),
    "GameAvailabilityEnumeration": (
        "GameAvailabilityEnumeration",
        "pydantic2_schemaorg.GameAvailabilityEnumeration",
        "GameAvailabilityEnumeration",
    ),
    "WearableSizeSystemDE": (
        "WearableSizeSystemDE",
        "pydantic2_schemaorg.WearableSizeSystemDE",
        "WearableSizeSystemDE",
    ),
    "OfferShippingDetails": (
        "OfferShippingDetails",
        "pydantic2_schemaorg.OfferShippingDetails",
        "OfferShippingDetails",
    ),
    "DemoGameAvailability": (
        "DemoGameAvailability",
        "pydantic2_schemaorg.DemoGameAvailability",
        "DemoGameAvailability",
    ),
    "Thursday": ("Thursday", "pydantic2_schemaorg.Thursday", "Thursday"),
    "PreSale": ("PreSale", "pydantic2_schemaorg.PreSale", "PreSale"),
    "Synagogue": ("Synagogue", "pydantic2_schemaorg.Synagogue", "Synagogue"),
    "EnergyStarEnergyEfficiencyEnumeration": (
        "EnergyStarEnergyEfficiencyEnumeration",
        "pydantic2_schemaorg.EnergyStarEnergyEfficiencyEnumeration",
        "EnergyStarEnergyEfficiencyEnumeration",
    ),
    "ApartmentComplex": (
        "ApartmentComplex",
        "pydantic2_schemaorg.ApartmentComplex",
        "ApartmentComplex",
    ),
    "BusStation": ("BusStation", "pydantic2_schemaorg.BusStation", "BusStation"),
    "TrainReservation": (
        "TrainReservation",
        "pydantic2_schemaorg.TrainReservation",
        "TrainReservation",
    ),
    "LendAction": ("LendAction", "pydantic2_schemaorg.LendAction", "LendAction"),
    "Wednesday": ("Wednesday", "pydantic2_schemaorg.Wednesday", "Wednesday"),
    "EUEnergyEfficiencyCategoryE": (
        "EUEnergyEfficiencyCategoryE",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryE",
        "EUEnergyEfficiencyCategoryE",
    ),
    "Locksmith": ("Locksmith", "pydantic2_schemaorg.Locksmith", "Locksmith"),
    "Observation": ("Observation", "pydantic2_schemaorg.Observation", "Observation"),
    "Grant": ("Grant", "pydantic2_schemaorg.Grant", "Grant"),
    "MonetaryGrant": (
        "MonetaryGrant",
        "pydantic2_schemaorg.MonetaryGrant",
        "MonetaryGrant",
    ),
    "PerformingGroup": (
        "PerformingGroup",
        "pydantic2_schemaorg.PerformingGroup",
        "PerformingGroup",
    ),
    "DanceGroup": ("DanceGroup", "pydantic2_schemaorg.DanceGroup", "DanceGroup"),
    "Ligament": ("Ligament", "pydantic2_schemaorg.Ligament", "Ligament"),
    "InstallAction": (
        "InstallAction",
        "pydantic2_schemaorg.InstallAction",
        "InstallAction",
    ),
    "Airport": ("Airport", "pydantic2_schemaorg.Airport", "Airport"),
    "HealthPlanFormulary": (
        "HealthPlanFormulary",
        "pydantic2_schemaorg.HealthPlanFormulary",
        "HealthPlanFormulary",
    ),
    "House": ("House", "pydantic2_schemaorg.House", "House"),
    "GovernmentOffice": (
        "GovernmentOffice",
        "pydantic2_schemaorg.GovernmentOffice",
        "GovernmentOffice",
    ),
    "VideoGameSeries": (
        "VideoGameSeries",
        "pydantic2_schemaorg.VideoGameSeries",
        "VideoGameSeries",
    ),
    "ViewAction": ("ViewAction", "pydantic2_schemaorg.ViewAction", "ViewAction"),
    "HalalDiet": ("HalalDiet", "pydantic2_schemaorg.HalalDiet", "HalalDiet"),
    "Property": ("Property", "pydantic2_schemaorg.Property", "Property"),
    "OfferItemCondition": (
        "OfferItemCondition",
        "pydantic2_schemaorg.OfferItemCondition",
        "OfferItemCondition",
    ),
    "RefurbishedCondition": (
        "RefurbishedCondition",
        "pydantic2_schemaorg.RefurbishedCondition",
        "RefurbishedCondition",
    ),
    "CreateAction": (
        "CreateAction",
        "pydantic2_schemaorg.CreateAction",
        "CreateAction",
    ),
    "PhotographAction": (
        "PhotographAction",
        "pydantic2_schemaorg.PhotographAction",
        "PhotographAction",
    ),
    "TechArticle": ("TechArticle", "pydantic2_schemaorg.TechArticle", "TechArticle"),
    "DrivingSchoolVehicleUsage": (
        "DrivingSchoolVehicleUsage",
        "pydantic2_schemaorg.DrivingSchoolVehicleUsage",
        "DrivingSchoolVehicleUsage",
    ),
    "BloodTest": ("BloodTest", "pydantic2_schemaorg.BloodTest", "BloodTest"),
    "Corporation": ("Corporation", "pydantic2_schemaorg.Corporation", "Corporation"),
    "BorrowAction": (
        "BorrowAction",
        "pydantic2_schemaorg.BorrowAction",
        "BorrowAction",
    ),
    "MedicalTestPanel": (
        "MedicalTestPanel",
        "pydantic2_schemaorg.MedicalTestPanel",
        "MedicalTestPanel",
    ),
    "VirtualLocation": (
        "VirtualLocation",
        "pydantic2_schemaorg.VirtualLocation",
        "VirtualLocation",
    ),
    "Rating": ("Rating", "pydantic2_schemaorg.Rating", "Rating"),
    "EndorsementRating": (
        "EndorsementRating",
        "pydantic2_schemaorg.EndorsementRating",
        "EndorsementRating",
    ),
    "BookStore": ("BookStore", "pydantic2_schemaorg.BookStore", "BookStore"),
    "MortgageLoan": (
        "MortgageLoan",
        "pydantic2_schemaorg.MortgageLoan",
        "MortgageLoan",
    ),
    "MulticellularParasite": (
        "MulticellularParasite",
        "pydantic2_schemaorg.MulticellularParasite",
        "MulticellularParasite",
    ),
    "PlanAction": ("PlanAction", "pydantic2_schemaorg.PlanAction", "PlanAction"),
    "ReserveAction": (
        "ReserveAction",
        "pydantic2_schemaorg.ReserveAction",
        "ReserveAction",
    ),
    "FindAction": ("FindAction", "pydantic2_schemaorg.FindAction", "FindAction"),
    "TaxiStand": ("TaxiStand", "pydantic2_schemaorg.TaxiStand", "TaxiStand"),
    "IOSPlatform": ("IOSPlatform", "pydantic2_schemaorg.IOSPlatform", "IOSPlatform"),
    "OrderDelivered": (
        "OrderDelivered",
        "pydantic2_schemaorg.OrderDelivered",
        "OrderDelivered",
    ),
    "RelatedTopicsHealthAspect": (
        "RelatedTopicsHealthAspect",
        "pydantic2_schemaorg.RelatedTopicsHealthAspect",
        "RelatedTopicsHealthAspect",
    ),
    "MedicalIntangible": (
        "MedicalIntangible",
        "pydantic2_schemaorg.MedicalIntangible",
        "MedicalIntangible",
    ),
    "DoseSchedule": (
        "DoseSchedule",
        "pydantic2_schemaorg.DoseSchedule",
        "DoseSchedule",
    ),
    "MaximumDoseSchedule": (
        "MaximumDoseSchedule",
        "pydantic2_schemaorg.MaximumDoseSchedule",
        "MaximumDoseSchedule",
    ),
    "MedicalIndication": (
        "MedicalIndication",
        "pydantic2_schemaorg.MedicalIndication",
        "MedicalIndication",
    ),
    "TreatmentIndication": (
        "TreatmentIndication",
        "pydantic2_schemaorg.TreatmentIndication",
        "TreatmentIndication",
    ),
    "PET": ("PET", "pydantic2_schemaorg.PET", "PET"),
    "WearableSizeSystemEurope": (
        "WearableSizeSystemEurope",
        "pydantic2_schemaorg.WearableSizeSystemEurope",
        "WearableSizeSystemEurope",
    ),
    "Quotation": ("Quotation", "pydantic2_schemaorg.Quotation", "Quotation"),
    "RepaymentSpecification": (
        "RepaymentSpecification",
        "pydantic2_schemaorg.RepaymentSpecification",
        "RepaymentSpecification",
    ),
    "PublicHealth": (
        "PublicHealth",
        "pydantic2_schemaorg.PublicHealth",
        "PublicHealth",
    ),
    "ImageObjectSnapshot": (
        "ImageObjectSnapshot",
        "pydantic2_schemaorg.ImageObjectSnapshot",
        "ImageObjectSnapshot",
    ),
    "SingleCenterTrial": (
        "SingleCenterTrial",
        "pydantic2_schemaorg.SingleCenterTrial",
        "SingleCenterTrial",
    ),
    "Review": ("Review", "pydantic2_schemaorg.Review", "Review"),
    "Nonprofit501c7": (
        "Nonprofit501c7",
        "pydantic2_schemaorg.Nonprofit501c7",
        "Nonprofit501c7",
    ),
    "BookmarkAction": (
        "BookmarkAction",
        "pydantic2_schemaorg.BookmarkAction",
        "BookmarkAction",
    ),
    "CertificationStatusEnumeration": (
        "CertificationStatusEnumeration",
        "pydantic2_schemaorg.CertificationStatusEnumeration",
        "CertificationStatusEnumeration",
    ),
    "ReturnAtKiosk": (
        "ReturnAtKiosk",
        "pydantic2_schemaorg.ReturnAtKiosk",
        "ReturnAtKiosk",
    ),
    "ChemicalSubstance": (
        "ChemicalSubstance",
        "pydantic2_schemaorg.ChemicalSubstance",
        "ChemicalSubstance",
    ),
    "GeneralContractor": (
        "GeneralContractor",
        "pydantic2_schemaorg.GeneralContractor",
        "GeneralContractor",
    ),
    "Nonprofit501c13": (
        "Nonprofit501c13",
        "pydantic2_schemaorg.Nonprofit501c13",
        "Nonprofit501c13",
    ),
    "PlayGameAction": (
        "PlayGameAction",
        "pydantic2_schemaorg.PlayGameAction",
        "PlayGameAction",
    ),
    "TrainedAlgorithmicMediaDigitalSource": (
        "TrainedAlgorithmicMediaDigitalSource",
        "pydantic2_schemaorg.TrainedAlgorithmicMediaDigitalSource",
        "TrainedAlgorithmicMediaDigitalSource",
    ),
    "WarrantyScope": (
        "WarrantyScope",
        "pydantic2_schemaorg.WarrantyScope",
        "WarrantyScope",
    ),
    "WebAPI": ("WebAPI", "pydantic2_schemaorg.WebAPI", "WebAPI"),
    "Nonprofit501c5": (
        "Nonprofit501c5",
        "pydantic2_schemaorg.Nonprofit501c5",
        "Nonprofit501c5",
    ),
    "LifestyleModification": (
        "LifestyleModification",
        "pydantic2_schemaorg.LifestyleModification",
        "LifestyleModification",
    ),
    "PhysicalActivity": (
        "PhysicalActivity",
        "pydantic2_schemaorg.PhysicalActivity",
        "PhysicalActivity",
    ),
    "BusinessFunction": (
        "BusinessFunction",
        "pydantic2_schemaorg.BusinessFunction",
        "BusinessFunction",
    ),
    "LowFatDiet": ("LowFatDiet", "pydantic2_schemaorg.LowFatDiet", "LowFatDiet"),
    "BankAccount": ("BankAccount", "pydantic2_schemaorg.BankAccount", "BankAccount"),
    "Conversation": (
        "Conversation",
        "pydantic2_schemaorg.Conversation",
        "Conversation",
    ),
    "Anesthesia": ("Anesthesia", "pydantic2_schemaorg.Anesthesia", "Anesthesia"),
    "DigitalAudioTapeFormat": (
        "DigitalAudioTapeFormat",
        "pydantic2_schemaorg.DigitalAudioTapeFormat",
        "DigitalAudioTapeFormat",
    ),
    "EnergyStarCertified": (
        "EnergyStarCertified",
        "pydantic2_schemaorg.EnergyStarCertified",
        "EnergyStarCertified",
    ),
    "Drawing": ("Drawing", "pydantic2_schemaorg.Drawing", "Drawing"),
    "UnRegisterAction": (
        "UnRegisterAction",
        "pydantic2_schemaorg.UnRegisterAction",
        "UnRegisterAction",
    ),
    "ConvenienceStore": (
        "ConvenienceStore",
        "pydantic2_schemaorg.ConvenienceStore",
        "ConvenienceStore",
    ),
    "RadioChannel": (
        "RadioChannel",
        "pydantic2_schemaorg.RadioChannel",
        "RadioChannel",
    ),
    "AMRadioChannel": (
        "AMRadioChannel",
        "pydantic2_schemaorg.AMRadioChannel",
        "AMRadioChannel",
    ),
    "CleaningFee": ("CleaningFee", "pydantic2_schemaorg.CleaningFee", "CleaningFee"),
    "EUEnergyEfficiencyCategoryA": (
        "EUEnergyEfficiencyCategoryA",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryA",
        "EUEnergyEfficiencyCategoryA",
    ),
    "Continent": ("Continent", "pydantic2_schemaorg.Continent", "Continent"),
    "MusicGroup": ("MusicGroup", "pydantic2_schemaorg.MusicGroup", "MusicGroup"),
    "PreventionHealthAspect": (
        "PreventionHealthAspect",
        "pydantic2_schemaorg.PreventionHealthAspect",
        "PreventionHealthAspect",
    ),
    "MedicalDevicePurpose": (
        "MedicalDevicePurpose",
        "pydantic2_schemaorg.MedicalDevicePurpose",
        "MedicalDevicePurpose",
    ),
    "Diagnostic": ("Diagnostic", "pydantic2_schemaorg.Diagnostic", "Diagnostic"),
    "Class": ("Class", "pydantic2_schemaorg.Class", "Class"),
    "DataType": ("DataType", "pydantic2_schemaorg.DataType", "DataType"),
    "Number": ("Number", "pydantic2_schemaorg.Number", "Number"),
    "Float": ("Float", "pydantic2_schemaorg.Float", "Float"),
    "WearableMeasurementChestOrBust": (
        "WearableMeasurementChestOrBust",
        "pydantic2_schemaorg.WearableMeasurementChestOrBust",
        "WearableMeasurementChestOrBust",
    ),
    "InformAction": (
        "InformAction",
        "pydantic2_schemaorg.InformAction",
        "InformAction",
    ),
    "PlayAction": ("PlayAction", "pydantic2_schemaorg.PlayAction", "PlayAction"),
    "PerformAction": (
        "PerformAction",
        "pydantic2_schemaorg.PerformAction",
        "PerformAction",
    ),
    "DisagreeAction": (
        "DisagreeAction",
        "pydantic2_schemaorg.DisagreeAction",
        "DisagreeAction",
    ),
    "Schedule": ("Schedule", "pydantic2_schemaorg.Schedule", "Schedule"),
    "WearableSizeGroupHusky": (
        "WearableSizeGroupHusky",
        "pydantic2_schemaorg.WearableSizeGroupHusky",
        "WearableSizeGroupHusky",
    ),
    "MedicalObservationalStudy": (
        "MedicalObservationalStudy",
        "pydantic2_schemaorg.MedicalObservationalStudy",
        "MedicalObservationalStudy",
    ),
    "Suite": ("Suite", "pydantic2_schemaorg.Suite", "Suite"),
    "MedicalAudienceType": (
        "MedicalAudienceType",
        "pydantic2_schemaorg.MedicalAudienceType",
        "MedicalAudienceType",
    ),
    "MedicalResearcher": (
        "MedicalResearcher",
        "pydantic2_schemaorg.MedicalResearcher",
        "MedicalResearcher",
    ),
    "WearableMeasurementWaist": (
        "WearableMeasurementWaist",
        "pydantic2_schemaorg.WearableMeasurementWaist",
        "WearableMeasurementWaist",
    ),
    "UnitPriceSpecification": (
        "UnitPriceSpecification",
        "pydantic2_schemaorg.UnitPriceSpecification",
        "UnitPriceSpecification",
    ),
    "CreativeWorkSeason": (
        "CreativeWorkSeason",
        "pydantic2_schemaorg.CreativeWorkSeason",
        "CreativeWorkSeason",
    ),
    "Electrician": ("Electrician", "pydantic2_schemaorg.Electrician", "Electrician"),
    "Nonprofit501c24": (
        "Nonprofit501c24",
        "pydantic2_schemaorg.Nonprofit501c24",
        "Nonprofit501c24",
    ),
    "OriginalMediaContent": (
        "OriginalMediaContent",
        "pydantic2_schemaorg.OriginalMediaContent",
        "OriginalMediaContent",
    ),
    "MusicAlbumProductionType": (
        "MusicAlbumProductionType",
        "pydantic2_schemaorg.MusicAlbumProductionType",
        "MusicAlbumProductionType",
    ),
    "StudioAlbum": ("StudioAlbum", "pydantic2_schemaorg.StudioAlbum", "StudioAlbum"),
    "HairSalon": ("HairSalon", "pydantic2_schemaorg.HairSalon", "HairSalon"),
    "Nonprofit501c28": (
        "Nonprofit501c28",
        "pydantic2_schemaorg.Nonprofit501c28",
        "Nonprofit501c28",
    ),
    "OfficialLegalValue": (
        "OfficialLegalValue",
        "pydantic2_schemaorg.OfficialLegalValue",
        "OfficialLegalValue",
    ),
    "AnimalShelter": (
        "AnimalShelter",
        "pydantic2_schemaorg.AnimalShelter",
        "AnimalShelter",
    ),
    "CriticReview": (
        "CriticReview",
        "pydantic2_schemaorg.CriticReview",
        "CriticReview",
    ),
    "ReviewNewsArticle": (
        "ReviewNewsArticle",
        "pydantic2_schemaorg.ReviewNewsArticle",
        "ReviewNewsArticle",
    ),
    "UserReview": ("UserReview", "pydantic2_schemaorg.UserReview", "UserReview"),
    "SportingGoodsStore": (
        "SportingGoodsStore",
        "pydantic2_schemaorg.SportingGoodsStore",
        "SportingGoodsStore",
    ),
    "EducationalOccupationalCredential": (
        "EducationalOccupationalCredential",
        "pydantic2_schemaorg.EducationalOccupationalCredential",
        "EducationalOccupationalCredential",
    ),
    "TelevisionChannel": (
        "TelevisionChannel",
        "pydantic2_schemaorg.TelevisionChannel",
        "TelevisionChannel",
    ),
    "HealthPlanNetwork": (
        "HealthPlanNetwork",
        "pydantic2_schemaorg.HealthPlanNetwork",
        "HealthPlanNetwork",
    ),
    "MedicalConditionStage": (
        "MedicalConditionStage",
        "pydantic2_schemaorg.MedicalConditionStage",
        "MedicalConditionStage",
    ),
    "Brewery": ("Brewery", "pydantic2_schemaorg.Brewery", "Brewery"),
    "Nonprofit501c15": (
        "Nonprofit501c15",
        "pydantic2_schemaorg.Nonprofit501c15",
        "Nonprofit501c15",
    ),
    "ListenAction": (
        "ListenAction",
        "pydantic2_schemaorg.ListenAction",
        "ListenAction",
    ),
    "MediaReview": ("MediaReview", "pydantic2_schemaorg.MediaReview", "MediaReview"),
    "Subscription": (
        "Subscription",
        "pydantic2_schemaorg.Subscription",
        "Subscription",
    ),
    "Play": ("Play", "pydantic2_schemaorg.Play", "Play"),
    "BodyMeasurementChest": (
        "BodyMeasurementChest",
        "pydantic2_schemaorg.BodyMeasurementChest",
        "BodyMeasurementChest",
    ),
    "OrganizationRole": (
        "OrganizationRole",
        "pydantic2_schemaorg.OrganizationRole",
        "OrganizationRole",
    ),
    "LiteraryEvent": (
        "LiteraryEvent",
        "pydantic2_schemaorg.LiteraryEvent",
        "LiteraryEvent",
    ),
    "Optician": ("Optician", "pydantic2_schemaorg.Optician", "Optician"),
    "BodyMeasurementWeight": (
        "BodyMeasurementWeight",
        "pydantic2_schemaorg.BodyMeasurementWeight",
        "BodyMeasurementWeight",
    ),
    "WPFooter": ("WPFooter", "pydantic2_schemaorg.WPFooter", "WPFooter"),
    "XRay": ("XRay", "pydantic2_schemaorg.XRay", "XRay"),
    "VisualArtwork": (
        "VisualArtwork",
        "pydantic2_schemaorg.VisualArtwork",
        "VisualArtwork",
    ),
    "CoverArt": ("CoverArt", "pydantic2_schemaorg.CoverArt", "CoverArt"),
    "Chiropractic": (
        "Chiropractic",
        "pydantic2_schemaorg.Chiropractic",
        "Chiropractic",
    ),
    "BusinessEvent": (
        "BusinessEvent",
        "pydantic2_schemaorg.BusinessEvent",
        "BusinessEvent",
    ),
    "ReturnShippingFees": (
        "ReturnShippingFees",
        "pydantic2_schemaorg.ReturnShippingFees",
        "ReturnShippingFees",
    ),
    "JobPosting": ("JobPosting", "pydantic2_schemaorg.JobPosting", "JobPosting"),
    "TaxiReservation": (
        "TaxiReservation",
        "pydantic2_schemaorg.TaxiReservation",
        "TaxiReservation",
    ),
    "Gynecologic": ("Gynecologic", "pydantic2_schemaorg.Gynecologic", "Gynecologic"),
    "WearableSizeSystemCN": (
        "WearableSizeSystemCN",
        "pydantic2_schemaorg.WearableSizeSystemCN",
        "WearableSizeSystemCN",
    ),
    "Person": ("Person", "pydantic2_schemaorg.Person", "Person"),
    "MemberProgram": (
        "MemberProgram",
        "pydantic2_schemaorg.MemberProgram",
        "MemberProgram",
    ),
    "Waterfall": ("Waterfall", "pydantic2_schemaorg.Waterfall", "Waterfall"),
    "BodyMeasurementInsideLeg": (
        "BodyMeasurementInsideLeg",
        "pydantic2_schemaorg.BodyMeasurementInsideLeg",
        "BodyMeasurementInsideLeg",
    ),
    "FullRefund": ("FullRefund", "pydantic2_schemaorg.FullRefund", "FullRefund"),
    "MultiCenterTrial": (
        "MultiCenterTrial",
        "pydantic2_schemaorg.MultiCenterTrial",
        "MultiCenterTrial",
    ),
    "AutoRepair": ("AutoRepair", "pydantic2_schemaorg.AutoRepair", "AutoRepair"),
    "RadioEpisode": (
        "RadioEpisode",
        "pydantic2_schemaorg.RadioEpisode",
        "RadioEpisode",
    ),
    "Friday": ("Friday", "pydantic2_schemaorg.Friday", "Friday"),
    "Claim": ("Claim", "pydantic2_schemaorg.Claim", "Claim"),
    "StoreCreditRefund": (
        "StoreCreditRefund",
        "pydantic2_schemaorg.StoreCreditRefund",
        "StoreCreditRefund",
    ),
    "ItemListOrderDescending": (
        "ItemListOrderDescending",
        "pydantic2_schemaorg.ItemListOrderDescending",
        "ItemListOrderDescending",
    ),
    "CategoryCode": (
        "CategoryCode",
        "pydantic2_schemaorg.CategoryCode",
        "CategoryCode",
    ),
    "LegalForceStatus": (
        "LegalForceStatus",
        "pydantic2_schemaorg.LegalForceStatus",
        "LegalForceStatus",
    ),
    "ControlAction": (
        "ControlAction",
        "pydantic2_schemaorg.ControlAction",
        "ControlAction",
    ),
    "Nonprofit501n": (
        "Nonprofit501n",
        "pydantic2_schemaorg.Nonprofit501n",
        "Nonprofit501n",
    ),
    "DDxElement": ("DDxElement", "pydantic2_schemaorg.DDxElement", "DDxElement"),
    "HobbyShop": ("HobbyShop", "pydantic2_schemaorg.HobbyShop", "HobbyShop"),
    "Reservoir": ("Reservoir", "pydantic2_schemaorg.Reservoir", "Reservoir"),
    "Text": ("Text", "pydantic2_schemaorg.Text", "Text"),
    "XPathType": ("XPathType", "pydantic2_schemaorg.XPathType", "XPathType"),
    "Beach": ("Beach", "pydantic2_schemaorg.Beach", "Beach"),
    "ProfilePage": ("ProfilePage", "pydantic2_schemaorg.ProfilePage", "ProfilePage"),
    "ChildCare": ("ChildCare", "pydantic2_schemaorg.ChildCare", "ChildCare"),
    "Pediatric": ("Pediatric", "pydantic2_schemaorg.Pediatric", "Pediatric"),
    "ApplyAction": ("ApplyAction", "pydantic2_schemaorg.ApplyAction", "ApplyAction"),
    "RandomizedTrial": (
        "RandomizedTrial",
        "pydantic2_schemaorg.RandomizedTrial",
        "RandomizedTrial",
    ),
    "Paperback": ("Paperback", "pydantic2_schemaorg.Paperback", "Paperback"),
    "WearableSizeGroupExtraTall": (
        "WearableSizeGroupExtraTall",
        "pydantic2_schemaorg.WearableSizeGroupExtraTall",
        "WearableSizeGroupExtraTall",
    ),
    "Boolean": ("Boolean", "pydantic2_schemaorg.Boolean", "Boolean"),
    "Mass": ("Mass", "pydantic2_schemaorg.Mass", "Mass"),
    "BookSeries": ("BookSeries", "pydantic2_schemaorg.BookSeries", "BookSeries"),
    "NarcoticConsideration": (
        "NarcoticConsideration",
        "pydantic2_schemaorg.NarcoticConsideration",
        "NarcoticConsideration",
    ),
    "VacationRental": (
        "VacationRental",
        "pydantic2_schemaorg.VacationRental",
        "VacationRental",
    ),
    "IgnoreAction": (
        "IgnoreAction",
        "pydantic2_schemaorg.IgnoreAction",
        "IgnoreAction",
    ),
    "UpdateAction": (
        "UpdateAction",
        "pydantic2_schemaorg.UpdateAction",
        "UpdateAction",
    ),
    "AddAction": ("AddAction", "pydantic2_schemaorg.AddAction", "AddAction"),
    "InsertAction": (
        "InsertAction",
        "pydantic2_schemaorg.InsertAction",
        "InsertAction",
    ),
    "PrependAction": (
        "PrependAction",
        "pydantic2_schemaorg.PrependAction",
        "PrependAction",
    ),
    "PublicationIssue": (
        "PublicationIssue",
        "pydantic2_schemaorg.PublicationIssue",
        "PublicationIssue",
    ),
    "ComicIssue": ("ComicIssue", "pydantic2_schemaorg.ComicIssue", "ComicIssue"),
    "EffectivenessHealthAspect": (
        "EffectivenessHealthAspect",
        "pydantic2_schemaorg.EffectivenessHealthAspect",
        "EffectivenessHealthAspect",
    ),
    "Resort": ("Resort", "pydantic2_schemaorg.Resort", "Resort"),
    "GasStation": ("GasStation", "pydantic2_schemaorg.GasStation", "GasStation"),
    "MobileWebPlatform": (
        "MobileWebPlatform",
        "pydantic2_schemaorg.MobileWebPlatform",
        "MobileWebPlatform",
    ),
    "WearableSizeSystemAU": (
        "WearableSizeSystemAU",
        "pydantic2_schemaorg.WearableSizeSystemAU",
        "WearableSizeSystemAU",
    ),
    "LegislativeBuilding": (
        "LegislativeBuilding",
        "pydantic2_schemaorg.LegislativeBuilding",
        "LegislativeBuilding",
    ),
    "OfflinePermanently": (
        "OfflinePermanently",
        "pydantic2_schemaorg.OfflinePermanently",
        "OfflinePermanently",
    ),
    "DeliveryChargeSpecification": (
        "DeliveryChargeSpecification",
        "pydantic2_schemaorg.DeliveryChargeSpecification",
        "DeliveryChargeSpecification",
    ),
    "ComicStory": ("ComicStory", "pydantic2_schemaorg.ComicStory", "ComicStory"),
    "ComicCoverArt": (
        "ComicCoverArt",
        "pydantic2_schemaorg.ComicCoverArt",
        "ComicCoverArt",
    ),
    "EvidenceLevelC": (
        "EvidenceLevelC",
        "pydantic2_schemaorg.EvidenceLevelC",
        "EvidenceLevelC",
    ),
    "GenericWebPlatform": (
        "GenericWebPlatform",
        "pydantic2_schemaorg.GenericWebPlatform",
        "GenericWebPlatform",
    ),
    "ContactPointOption": (
        "ContactPointOption",
        "pydantic2_schemaorg.ContactPointOption",
        "ContactPointOption",
    ),
    "TollFree": ("TollFree", "pydantic2_schemaorg.TollFree", "TollFree"),
    "PaymentPastDue": (
        "PaymentPastDue",
        "pydantic2_schemaorg.PaymentPastDue",
        "PaymentPastDue",
    ),
    "EmployerReview": (
        "EmployerReview",
        "pydantic2_schemaorg.EmployerReview",
        "EmployerReview",
    ),
    "MotorcycleRepair": (
        "MotorcycleRepair",
        "pydantic2_schemaorg.MotorcycleRepair",
        "MotorcycleRepair",
    ),
    "EUEnergyEfficiencyCategoryC": (
        "EUEnergyEfficiencyCategoryC",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryC",
        "EUEnergyEfficiencyCategoryC",
    ),
    "Rheumatologic": (
        "Rheumatologic",
        "pydantic2_schemaorg.Rheumatologic",
        "Rheumatologic",
    ),
    "GovernmentService": (
        "GovernmentService",
        "pydantic2_schemaorg.GovernmentService",
        "GovernmentService",
    ),
    "LymphaticVessel": (
        "LymphaticVessel",
        "pydantic2_schemaorg.LymphaticVessel",
        "LymphaticVessel",
    ),
    "CrossSectional": (
        "CrossSectional",
        "pydantic2_schemaorg.CrossSectional",
        "CrossSectional",
    ),
    "ReviewAction": (
        "ReviewAction",
        "pydantic2_schemaorg.ReviewAction",
        "ReviewAction",
    ),
    "HowOrWhereHealthAspect": (
        "HowOrWhereHealthAspect",
        "pydantic2_schemaorg.HowOrWhereHealthAspect",
        "HowOrWhereHealthAspect",
    ),
    "MoneyTransfer": (
        "MoneyTransfer",
        "pydantic2_schemaorg.MoneyTransfer",
        "MoneyTransfer",
    ),
    "Restaurant": ("Restaurant", "pydantic2_schemaorg.Restaurant", "Restaurant"),
    "DangerousGoodConsideration": (
        "DangerousGoodConsideration",
        "pydantic2_schemaorg.DangerousGoodConsideration",
        "DangerousGoodConsideration",
    ),
    "MobileApplication": (
        "MobileApplication",
        "pydantic2_schemaorg.MobileApplication",
        "MobileApplication",
    ),
    "BedType": ("BedType", "pydantic2_schemaorg.BedType", "BedType"),
    "ActionAccessSpecification": (
        "ActionAccessSpecification",
        "pydantic2_schemaorg.ActionAccessSpecification",
        "ActionAccessSpecification",
    ),
    "NewCondition": (
        "NewCondition",
        "pydantic2_schemaorg.NewCondition",
        "NewCondition",
    ),
    "Podiatric": ("Podiatric", "pydantic2_schemaorg.Podiatric", "Podiatric"),
    "Suspended": ("Suspended", "pydantic2_schemaorg.Suspended", "Suspended"),
    "MeasurementMethodEnum": (
        "MeasurementMethodEnum",
        "pydantic2_schemaorg.MeasurementMethodEnum",
        "MeasurementMethodEnum",
    ),
    "ExampleMeasurementMethodEnum": (
        "ExampleMeasurementMethodEnum",
        "pydantic2_schemaorg.ExampleMeasurementMethodEnum",
        "ExampleMeasurementMethodEnum",
    ),
    "TheaterGroup": (
        "TheaterGroup",
        "pydantic2_schemaorg.TheaterGroup",
        "TheaterGroup",
    ),
    "WearableSizeSystemMX": (
        "WearableSizeSystemMX",
        "pydantic2_schemaorg.WearableSizeSystemMX",
        "WearableSizeSystemMX",
    ),
    "DefinedRegion": (
        "DefinedRegion",
        "pydantic2_schemaorg.DefinedRegion",
        "DefinedRegion",
    ),
    "Statement": ("Statement", "pydantic2_schemaorg.Statement", "Statement"),
    "BodyMeasurementUnderbust": (
        "BodyMeasurementUnderbust",
        "pydantic2_schemaorg.BodyMeasurementUnderbust",
        "BodyMeasurementUnderbust",
    ),
    "PeopleAudience": (
        "PeopleAudience",
        "pydantic2_schemaorg.PeopleAudience",
        "PeopleAudience",
    ),
    "MedicalAudience": (
        "MedicalAudience",
        "pydantic2_schemaorg.MedicalAudience",
        "MedicalAudience",
    ),
    "Patient": ("Patient", "pydantic2_schemaorg.Patient", "Patient"),
    "ReturnAction": (
        "ReturnAction",
        "pydantic2_schemaorg.ReturnAction",
        "ReturnAction",
    ),
    "MedicalContraindication": (
        "MedicalContraindication",
        "pydantic2_schemaorg.MedicalContraindication",
        "MedicalContraindication",
    ),
    "FoodService": ("FoodService", "pydantic2_schemaorg.FoodService", "FoodService"),
    "StatisticalPopulation": (
        "StatisticalPopulation",
        "pydantic2_schemaorg.StatisticalPopulation",
        "StatisticalPopulation",
    ),
    "PathologyTest": (
        "PathologyTest",
        "pydantic2_schemaorg.PathologyTest",
        "PathologyTest",
    ),
    "MobilePhoneStore": (
        "MobilePhoneStore",
        "pydantic2_schemaorg.MobilePhoneStore",
        "MobilePhoneStore",
    ),
    "SearchRescueOrganization": (
        "SearchRescueOrganization",
        "pydantic2_schemaorg.SearchRescueOrganization",
        "SearchRescueOrganization",
    ),
    "Nonprofit501c2": (
        "Nonprofit501c2",
        "pydantic2_schemaorg.Nonprofit501c2",
        "Nonprofit501c2",
    ),
    "NotYetRecruiting": (
        "NotYetRecruiting",
        "pydantic2_schemaorg.NotYetRecruiting",
        "NotYetRecruiting",
    ),
    "DisabilitySupport": (
        "DisabilitySupport",
        "pydantic2_schemaorg.DisabilitySupport",
        "DisabilitySupport",
    ),
    "WearableSizeGroupBig": (
        "WearableSizeGroupBig",
        "pydantic2_schemaorg.WearableSizeGroupBig",
        "WearableSizeGroupBig",
    ),
    "AchieveAction": (
        "AchieveAction",
        "pydantic2_schemaorg.AchieveAction",
        "AchieveAction",
    ),
    "AdvertiserContentArticle": (
        "AdvertiserContentArticle",
        "pydantic2_schemaorg.AdvertiserContentArticle",
        "AdvertiserContentArticle",
    ),
    "Nonprofit501c11": (
        "Nonprofit501c11",
        "pydantic2_schemaorg.Nonprofit501c11",
        "Nonprofit501c11",
    ),
    "CertificationInactive": (
        "CertificationInactive",
        "pydantic2_schemaorg.CertificationInactive",
        "CertificationInactive",
    ),
    "Nonprofit501c6": (
        "Nonprofit501c6",
        "pydantic2_schemaorg.Nonprofit501c6",
        "Nonprofit501c6",
    ),
    "ReturnLabelCustomerResponsibility": (
        "ReturnLabelCustomerResponsibility",
        "pydantic2_schemaorg.ReturnLabelCustomerResponsibility",
        "ReturnLabelCustomerResponsibility",
    ),
    "Nonprofit501c19": (
        "Nonprofit501c19",
        "pydantic2_schemaorg.Nonprofit501c19",
        "Nonprofit501c19",
    ),
    "PhysicalActivityCategory": (
        "PhysicalActivityCategory",
        "pydantic2_schemaorg.PhysicalActivityCategory",
        "PhysicalActivityCategory",
    ),
    "LeisureTimeActivity": (
        "LeisureTimeActivity",
        "pydantic2_schemaorg.LeisureTimeActivity",
        "LeisureTimeActivity",
    ),
    "BoardingPolicyType": (
        "BoardingPolicyType",
        "pydantic2_schemaorg.BoardingPolicyType",
        "BoardingPolicyType",
    ),
    "OneTimePayments": (
        "OneTimePayments",
        "pydantic2_schemaorg.OneTimePayments",
        "OneTimePayments",
    ),
    "ProgramMembership": (
        "ProgramMembership",
        "pydantic2_schemaorg.ProgramMembership",
        "ProgramMembership",
    ),
    "ParentalSupport": (
        "ParentalSupport",
        "pydantic2_schemaorg.ParentalSupport",
        "ParentalSupport",
    ),
    "SchoolDistrict": (
        "SchoolDistrict",
        "pydantic2_schemaorg.SchoolDistrict",
        "SchoolDistrict",
    ),
    "ReturnLabelDownloadAndPrint": (
        "ReturnLabelDownloadAndPrint",
        "pydantic2_schemaorg.ReturnLabelDownloadAndPrint",
        "ReturnLabelDownloadAndPrint",
    ),
    "AskAction": ("AskAction", "pydantic2_schemaorg.AskAction", "AskAction"),
    "RsvpResponseMaybe": (
        "RsvpResponseMaybe",
        "pydantic2_schemaorg.RsvpResponseMaybe",
        "RsvpResponseMaybe",
    ),
    "SinglePlayer": (
        "SinglePlayer",
        "pydantic2_schemaorg.SinglePlayer",
        "SinglePlayer",
    ),
    "HotelRoom": ("HotelRoom", "pydantic2_schemaorg.HotelRoom", "HotelRoom"),
    "Clinician": ("Clinician", "pydantic2_schemaorg.Clinician", "Clinician"),
    "Periodical": ("Periodical", "pydantic2_schemaorg.Periodical", "Periodical"),
    "Newspaper": ("Newspaper", "pydantic2_schemaorg.Newspaper", "Newspaper"),
    "IndividualProduct": (
        "IndividualProduct",
        "pydantic2_schemaorg.IndividualProduct",
        "IndividualProduct",
    ),
    "VideoGame": ("VideoGame", "pydantic2_schemaorg.VideoGame", "VideoGame"),
    "Occupation": ("Occupation", "pydantic2_schemaorg.Occupation", "Occupation"),
    "ActivationFee": (
        "ActivationFee",
        "pydantic2_schemaorg.ActivationFee",
        "ActivationFee",
    ),
    "CheckInAdvance": (
        "CheckInAdvance",
        "pydantic2_schemaorg.CheckInAdvance",
        "CheckInAdvance",
    ),
    "WearableSizeGroupMisses": (
        "WearableSizeGroupMisses",
        "pydantic2_schemaorg.WearableSizeGroupMisses",
        "WearableSizeGroupMisses",
    ),
    "BuyAction": ("BuyAction", "pydantic2_schemaorg.BuyAction", "BuyAction"),
    "Cemetery": ("Cemetery", "pydantic2_schemaorg.Cemetery", "Cemetery"),
    "Nonprofit527": (
        "Nonprofit527",
        "pydantic2_schemaorg.Nonprofit527",
        "Nonprofit527",
    ),
    "PublicHolidays": (
        "PublicHolidays",
        "pydantic2_schemaorg.PublicHolidays",
        "PublicHolidays",
    ),
    "FilmAction": ("FilmAction", "pydantic2_schemaorg.FilmAction", "FilmAction"),
    "MusicAlbumReleaseType": (
        "MusicAlbumReleaseType",
        "pydantic2_schemaorg.MusicAlbumReleaseType",
        "MusicAlbumReleaseType",
    ),
    "WantAction": ("WantAction", "pydantic2_schemaorg.WantAction", "WantAction"),
    "ReplyAction": ("ReplyAction", "pydantic2_schemaorg.ReplyAction", "ReplyAction"),
    "Winery": ("Winery", "pydantic2_schemaorg.Winery", "Winery"),
    "VegetarianDiet": (
        "VegetarianDiet",
        "pydantic2_schemaorg.VegetarianDiet",
        "VegetarianDiet",
    ),
    "EducationalAudience": (
        "EducationalAudience",
        "pydantic2_schemaorg.EducationalAudience",
        "EducationalAudience",
    ),
    "MiddleSchool": (
        "MiddleSchool",
        "pydantic2_schemaorg.MiddleSchool",
        "MiddleSchool",
    ),
    "TypeAndQuantityNode": (
        "TypeAndQuantityNode",
        "pydantic2_schemaorg.TypeAndQuantityNode",
        "TypeAndQuantityNode",
    ),
    "Head": ("Head", "pydantic2_schemaorg.Head", "Head"),
    "SingleRelease": (
        "SingleRelease",
        "pydantic2_schemaorg.SingleRelease",
        "SingleRelease",
    ),
    "UserPlusOnes": (
        "UserPlusOnes",
        "pydantic2_schemaorg.UserPlusOnes",
        "UserPlusOnes",
    ),
    "InStoreOnly": ("InStoreOnly", "pydantic2_schemaorg.InStoreOnly", "InStoreOnly"),
    "ProductModel": (
        "ProductModel",
        "pydantic2_schemaorg.ProductModel",
        "ProductModel",
    ),
    "WearableMeasurementOutsideLeg": (
        "WearableMeasurementOutsideLeg",
        "pydantic2_schemaorg.WearableMeasurementOutsideLeg",
        "WearableMeasurementOutsideLeg",
    ),
    "CourseInstance": (
        "CourseInstance",
        "pydantic2_schemaorg.CourseInstance",
        "CourseInstance",
    ),
    "CardiovascularExam": (
        "CardiovascularExam",
        "pydantic2_schemaorg.CardiovascularExam",
        "CardiovascularExam",
    ),
    "RearWheelDriveConfiguration": (
        "RearWheelDriveConfiguration",
        "pydantic2_schemaorg.RearWheelDriveConfiguration",
        "RearWheelDriveConfiguration",
    ),
    "BoatTrip": ("BoatTrip", "pydantic2_schemaorg.BoatTrip", "BoatTrip"),
    "Apartment": ("Apartment", "pydantic2_schemaorg.Apartment", "Apartment"),
    "ComedyEvent": ("ComedyEvent", "pydantic2_schemaorg.ComedyEvent", "ComedyEvent"),
    "DryCleaningOrLaundry": (
        "DryCleaningOrLaundry",
        "pydantic2_schemaorg.DryCleaningOrLaundry",
        "DryCleaningOrLaundry",
    ),
    "DataDrivenMediaDigitalSource": (
        "DataDrivenMediaDigitalSource",
        "pydantic2_schemaorg.DataDrivenMediaDigitalSource",
        "DataDrivenMediaDigitalSource",
    ),
    "AlcoholConsideration": (
        "AlcoholConsideration",
        "pydantic2_schemaorg.AlcoholConsideration",
        "AlcoholConsideration",
    ),
    "PaymentComplete": (
        "PaymentComplete",
        "pydantic2_schemaorg.PaymentComplete",
        "PaymentComplete",
    ),
    "ComputerLanguage": (
        "ComputerLanguage",
        "pydantic2_schemaorg.ComputerLanguage",
        "ComputerLanguage",
    ),
    "ResultsNotAvailable": (
        "ResultsNotAvailable",
        "pydantic2_schemaorg.ResultsNotAvailable",
        "ResultsNotAvailable",
    ),
    "PostalCodeRangeSpecification": (
        "PostalCodeRangeSpecification",
        "pydantic2_schemaorg.PostalCodeRangeSpecification",
        "PostalCodeRangeSpecification",
    ),
    "Invoice": ("Invoice", "pydantic2_schemaorg.Invoice", "Invoice"),
    "ResearchOrganization": (
        "ResearchOrganization",
        "pydantic2_schemaorg.ResearchOrganization",
        "ResearchOrganization",
    ),
    "SuspendAction": (
        "SuspendAction",
        "pydantic2_schemaorg.SuspendAction",
        "SuspendAction",
    ),
    "TierBenefitEnumeration": (
        "TierBenefitEnumeration",
        "pydantic2_schemaorg.TierBenefitEnumeration",
        "TierBenefitEnumeration",
    ),
    "TierBenefitLoyaltyShipping": (
        "TierBenefitLoyaltyShipping",
        "pydantic2_schemaorg.TierBenefitLoyaltyShipping",
        "TierBenefitLoyaltyShipping",
    ),
    "BackOrder": ("BackOrder", "pydantic2_schemaorg.BackOrder", "BackOrder"),
    "MerchantReturnPolicySeasonalOverride": (
        "MerchantReturnPolicySeasonalOverride",
        "pydantic2_schemaorg.MerchantReturnPolicySeasonalOverride",
        "MerchantReturnPolicySeasonalOverride",
    ),
    "SportsEvent": ("SportsEvent", "pydantic2_schemaorg.SportsEvent", "SportsEvent"),
    "DiscoverAction": (
        "DiscoverAction",
        "pydantic2_schemaorg.DiscoverAction",
        "DiscoverAction",
    ),
    "ViolenceConsideration": (
        "ViolenceConsideration",
        "pydantic2_schemaorg.ViolenceConsideration",
        "ViolenceConsideration",
    ),
    "ParcelDelivery": (
        "ParcelDelivery",
        "pydantic2_schemaorg.ParcelDelivery",
        "ParcelDelivery",
    ),
    "Emergency": ("Emergency", "pydantic2_schemaorg.Emergency", "Emergency"),
    "Genitourinary": (
        "Genitourinary",
        "pydantic2_schemaorg.Genitourinary",
        "Genitourinary",
    ),
    "BlogPosting": ("BlogPosting", "pydantic2_schemaorg.BlogPosting", "BlogPosting"),
    "LiveBlogPosting": (
        "LiveBlogPosting",
        "pydantic2_schemaorg.LiveBlogPosting",
        "LiveBlogPosting",
    ),
    "SexualContentConsideration": (
        "SexualContentConsideration",
        "pydantic2_schemaorg.SexualContentConsideration",
        "SexualContentConsideration",
    ),
    "MovieSeries": ("MovieSeries", "pydantic2_schemaorg.MovieSeries", "MovieSeries"),
    "ActiveNotRecruiting": (
        "ActiveNotRecruiting",
        "pydantic2_schemaorg.ActiveNotRecruiting",
        "ActiveNotRecruiting",
    ),
    "Nonprofit501c25": (
        "Nonprofit501c25",
        "pydantic2_schemaorg.Nonprofit501c25",
        "Nonprofit501c25",
    ),
    "ElementarySchool": (
        "ElementarySchool",
        "pydantic2_schemaorg.ElementarySchool",
        "ElementarySchool",
    ),
    "Legislation": ("Legislation", "pydantic2_schemaorg.Legislation", "Legislation"),
    "AudioObject": ("AudioObject", "pydantic2_schemaorg.AudioObject", "AudioObject"),
    "AudioObjectSnapshot": (
        "AudioObjectSnapshot",
        "pydantic2_schemaorg.AudioObjectSnapshot",
        "AudioObjectSnapshot",
    ),
    "MedicalRiskEstimator": (
        "MedicalRiskEstimator",
        "pydantic2_schemaorg.MedicalRiskEstimator",
        "MedicalRiskEstimator",
    ),
    "HinduDiet": ("HinduDiet", "pydantic2_schemaorg.HinduDiet", "HinduDiet"),
    "Project": ("Project", "pydantic2_schemaorg.Project", "Project"),
    "TransformedContent": (
        "TransformedContent",
        "pydantic2_schemaorg.TransformedContent",
        "TransformedContent",
    ),
    "EventScheduled": (
        "EventScheduled",
        "pydantic2_schemaorg.EventScheduled",
        "EventScheduled",
    ),
    "Ear": ("Ear", "pydantic2_schemaorg.Ear", "Ear"),
    "WearableSizeSystemUK": (
        "WearableSizeSystemUK",
        "pydantic2_schemaorg.WearableSizeSystemUK",
        "WearableSizeSystemUK",
    ),
    "AutoBodyShop": (
        "AutoBodyShop",
        "pydantic2_schemaorg.AutoBodyShop",
        "AutoBodyShop",
    ),
    "MedicalDevice": (
        "MedicalDevice",
        "pydantic2_schemaorg.MedicalDevice",
        "MedicalDevice",
    ),
    "EnrollingByInvitation": (
        "EnrollingByInvitation",
        "pydantic2_schemaorg.EnrollingByInvitation",
        "EnrollingByInvitation",
    ),
    "CoOp": ("CoOp", "pydantic2_schemaorg.CoOp", "CoOp"),
    "WearableSizeGroupInfants": (
        "WearableSizeGroupInfants",
        "pydantic2_schemaorg.WearableSizeGroupInfants",
        "WearableSizeGroupInfants",
    ),
    "Language": ("Language", "pydantic2_schemaorg.Language", "Language"),
    "RisksOrComplicationsHealthAspect": (
        "RisksOrComplicationsHealthAspect",
        "pydantic2_schemaorg.RisksOrComplicationsHealthAspect",
        "RisksOrComplicationsHealthAspect",
    ),
    "StagesHealthAspect": (
        "StagesHealthAspect",
        "pydantic2_schemaorg.StagesHealthAspect",
        "StagesHealthAspect",
    ),
    "PaymentChargeSpecification": (
        "PaymentChargeSpecification",
        "pydantic2_schemaorg.PaymentChargeSpecification",
        "PaymentChargeSpecification",
    ),
    "HealthPlanCostSharingSpecification": (
        "HealthPlanCostSharingSpecification",
        "pydantic2_schemaorg.HealthPlanCostSharingSpecification",
        "HealthPlanCostSharingSpecification",
    ),
    "TennisComplex": (
        "TennisComplex",
        "pydantic2_schemaorg.TennisComplex",
        "TennisComplex",
    ),
    "WatchAction": ("WatchAction", "pydantic2_schemaorg.WatchAction", "WatchAction"),
    "SportsClub": ("SportsClub", "pydantic2_schemaorg.SportsClub", "SportsClub"),
    "WritePermission": (
        "WritePermission",
        "pydantic2_schemaorg.WritePermission",
        "WritePermission",
    ),
    "Hackathon": ("Hackathon", "pydantic2_schemaorg.Hackathon", "Hackathon"),
    "SellAction": ("SellAction", "pydantic2_schemaorg.SellAction", "SellAction"),
    "ApprovedIndication": (
        "ApprovedIndication",
        "pydantic2_schemaorg.ApprovedIndication",
        "ApprovedIndication",
    ),
    "TrackAction": ("TrackAction", "pydantic2_schemaorg.TrackAction", "TrackAction"),
    "HowToTip": ("HowToTip", "pydantic2_schemaorg.HowToTip", "HowToTip"),
    "TravelAgency": (
        "TravelAgency",
        "pydantic2_schemaorg.TravelAgency",
        "TravelAgency",
    ),
    "BusinessEntityType": (
        "BusinessEntityType",
        "pydantic2_schemaorg.BusinessEntityType",
        "BusinessEntityType",
    ),
    "FireStation": ("FireStation", "pydantic2_schemaorg.FireStation", "FireStation"),
    "LiveAlbum": ("LiveAlbum", "pydantic2_schemaorg.LiveAlbum", "LiveAlbum"),
    "SearchAction": (
        "SearchAction",
        "pydantic2_schemaorg.SearchAction",
        "SearchAction",
    ),
    "Muscle": ("Muscle", "pydantic2_schemaorg.Muscle", "Muscle"),
    "_3DModel": ("_3DModel", "pydantic2_schemaorg._3DModel", "_3DModel"),
    "OccupationalActivity": (
        "OccupationalActivity",
        "pydantic2_schemaorg.OccupationalActivity",
        "OccupationalActivity",
    ),
    "AccountingService": (
        "AccountingService",
        "pydantic2_schemaorg.AccountingService",
        "AccountingService",
    ),
    "PreOrder": ("PreOrder", "pydantic2_schemaorg.PreOrder", "PreOrder"),
    "MedicalClinic": (
        "MedicalClinic",
        "pydantic2_schemaorg.MedicalClinic",
        "MedicalClinic",
    ),
    "BroadcastService": (
        "BroadcastService",
        "pydantic2_schemaorg.BroadcastService",
        "BroadcastService",
    ),
    "BreadcrumbList": (
        "BreadcrumbList",
        "pydantic2_schemaorg.BreadcrumbList",
        "BreadcrumbList",
    ),
    "BefriendAction": (
        "BefriendAction",
        "pydantic2_schemaorg.BefriendAction",
        "BefriendAction",
    ),
    "MedicalCause": (
        "MedicalCause",
        "pydantic2_schemaorg.MedicalCause",
        "MedicalCause",
    ),
    "FrontWheelDriveConfiguration": (
        "FrontWheelDriveConfiguration",
        "pydantic2_schemaorg.FrontWheelDriveConfiguration",
        "FrontWheelDriveConfiguration",
    ),
    "Nonprofit501f": (
        "Nonprofit501f",
        "pydantic2_schemaorg.Nonprofit501f",
        "Nonprofit501f",
    ),
    "UnclassifiedAdultConsideration": (
        "UnclassifiedAdultConsideration",
        "pydantic2_schemaorg.UnclassifiedAdultConsideration",
        "UnclassifiedAdultConsideration",
    ),
    "ContactPoint": (
        "ContactPoint",
        "pydantic2_schemaorg.ContactPoint",
        "ContactPoint",
    ),
    "CDCPMDRecord": (
        "CDCPMDRecord",
        "pydantic2_schemaorg.CDCPMDRecord",
        "CDCPMDRecord",
    ),
    "Collection": ("Collection", "pydantic2_schemaorg.Collection", "Collection"),
    "SingleBlindedTrial": (
        "SingleBlindedTrial",
        "pydantic2_schemaorg.SingleBlindedTrial",
        "SingleBlindedTrial",
    ),
    "LaboratoryScience": (
        "LaboratoryScience",
        "pydantic2_schemaorg.LaboratoryScience",
        "LaboratoryScience",
    ),
    "ProductGroup": (
        "ProductGroup",
        "pydantic2_schemaorg.ProductGroup",
        "ProductGroup",
    ),
    "OnlineOnly": ("OnlineOnly", "pydantic2_schemaorg.OnlineOnly", "OnlineOnly"),
    "UnofficialLegalValue": (
        "UnofficialLegalValue",
        "pydantic2_schemaorg.UnofficialLegalValue",
        "UnofficialLegalValue",
    ),
    "VirtualRecordingDigitalSource": (
        "VirtualRecordingDigitalSource",
        "pydantic2_schemaorg.VirtualRecordingDigitalSource",
        "VirtualRecordingDigitalSource",
    ),
    "DepartAction": (
        "DepartAction",
        "pydantic2_schemaorg.DepartAction",
        "DepartAction",
    ),
    "RadioSeason": ("RadioSeason", "pydantic2_schemaorg.RadioSeason", "RadioSeason"),
    "CDFormat": ("CDFormat", "pydantic2_schemaorg.CDFormat", "CDFormat"),
    "PronounceableText": (
        "PronounceableText",
        "pydantic2_schemaorg.PronounceableText",
        "PronounceableText",
    ),
    "GlutenFreeDiet": (
        "GlutenFreeDiet",
        "pydantic2_schemaorg.GlutenFreeDiet",
        "GlutenFreeDiet",
    ),
    "AuthorizeAction": (
        "AuthorizeAction",
        "pydantic2_schemaorg.AuthorizeAction",
        "AuthorizeAction",
    ),
    "SpeechPathology": (
        "SpeechPathology",
        "pydantic2_schemaorg.SpeechPathology",
        "SpeechPathology",
    ),
    "TireShop": ("TireShop", "pydantic2_schemaorg.TireShop", "TireShop"),
    "VinylFormat": ("VinylFormat", "pydantic2_schemaorg.VinylFormat", "VinylFormat"),
    "ResumeAction": (
        "ResumeAction",
        "pydantic2_schemaorg.ResumeAction",
        "ResumeAction",
    ),
    "PositiveFilmDigitalSource": (
        "PositiveFilmDigitalSource",
        "pydantic2_schemaorg.PositiveFilmDigitalSource",
        "PositiveFilmDigitalSource",
    ),
    "DigitalCaptureDigitalSource": (
        "DigitalCaptureDigitalSource",
        "pydantic2_schemaorg.DigitalCaptureDigitalSource",
        "DigitalCaptureDigitalSource",
    ),
    "SingleFamilyResidence": (
        "SingleFamilyResidence",
        "pydantic2_schemaorg.SingleFamilyResidence",
        "SingleFamilyResidence",
    ),
    "AerobicActivity": (
        "AerobicActivity",
        "pydantic2_schemaorg.AerobicActivity",
        "AerobicActivity",
    ),
    "ReimbursementCap": (
        "ReimbursementCap",
        "pydantic2_schemaorg.ReimbursementCap",
        "ReimbursementCap",
    ),
    "ArchiveComponent": (
        "ArchiveComponent",
        "pydantic2_schemaorg.ArchiveComponent",
        "ArchiveComponent",
    ),
    "SaleEvent": ("SaleEvent", "pydantic2_schemaorg.SaleEvent", "SaleEvent"),
    "FundingAgency": (
        "FundingAgency",
        "pydantic2_schemaorg.FundingAgency",
        "FundingAgency",
    ),
    "JoinAction": ("JoinAction", "pydantic2_schemaorg.JoinAction", "JoinAction"),
    "CompleteDataFeed": (
        "CompleteDataFeed",
        "pydantic2_schemaorg.CompleteDataFeed",
        "CompleteDataFeed",
    ),
    "MixtapeAlbum": (
        "MixtapeAlbum",
        "pydantic2_schemaorg.MixtapeAlbum",
        "MixtapeAlbum",
    ),
    "SteeringPositionValue": (
        "SteeringPositionValue",
        "pydantic2_schemaorg.SteeringPositionValue",
        "SteeringPositionValue",
    ),
    "RightHandDriving": (
        "RightHandDriving",
        "pydantic2_schemaorg.RightHandDriving",
        "RightHandDriving",
    ),
    "WearableSizeSystemIT": (
        "WearableSizeSystemIT",
        "pydantic2_schemaorg.WearableSizeSystemIT",
        "WearableSizeSystemIT",
    ),
    "DeactivateAction": (
        "DeactivateAction",
        "pydantic2_schemaorg.DeactivateAction",
        "DeactivateAction",
    ),
    "GatedResidenceCommunity": (
        "GatedResidenceCommunity",
        "pydantic2_schemaorg.GatedResidenceCommunity",
        "GatedResidenceCommunity",
    ),
    "NutritionInformation": (
        "NutritionInformation",
        "pydantic2_schemaorg.NutritionInformation",
        "NutritionInformation",
    ),
    "SymptomsHealthAspect": (
        "SymptomsHealthAspect",
        "pydantic2_schemaorg.SymptomsHealthAspect",
        "SymptomsHealthAspect",
    ),
    "Integer": ("Integer", "pydantic2_schemaorg.Integer", "Integer"),
    "SoldOut": ("SoldOut", "pydantic2_schemaorg.SoldOut", "SoldOut"),
    "Library": ("Library", "pydantic2_schemaorg.Library", "Library"),
    "Question": ("Question", "pydantic2_schemaorg.Question", "Question"),
    "DrugClass": ("DrugClass", "pydantic2_schemaorg.DrugClass", "DrugClass"),
    "TransitMap": ("TransitMap", "pydantic2_schemaorg.TransitMap", "TransitMap"),
    "ShippingRateSettings": (
        "ShippingRateSettings",
        "pydantic2_schemaorg.ShippingRateSettings",
        "ShippingRateSettings",
    ),
    "OnlineBusiness": (
        "OnlineBusiness",
        "pydantic2_schemaorg.OnlineBusiness",
        "OnlineBusiness",
    ),
    "OnlineStore": ("OnlineStore", "pydantic2_schemaorg.OnlineStore", "OnlineStore"),
    "CohortStudy": ("CohortStudy", "pydantic2_schemaorg.CohortStudy", "CohortStudy"),
    "Course": ("Course", "pydantic2_schemaorg.Course", "Course"),
    "BodyMeasurementNeck": (
        "BodyMeasurementNeck",
        "pydantic2_schemaorg.BodyMeasurementNeck",
        "BodyMeasurementNeck",
    ),
    "InteractionCounter": (
        "InteractionCounter",
        "pydantic2_schemaorg.InteractionCounter",
        "InteractionCounter",
    ),
    "WearableSizeGroupExtraShort": (
        "WearableSizeGroupExtraShort",
        "pydantic2_schemaorg.WearableSizeGroupExtraShort",
        "WearableSizeGroupExtraShort",
    ),
    "GraphicNovel": (
        "GraphicNovel",
        "pydantic2_schemaorg.GraphicNovel",
        "GraphicNovel",
    ),
    "IndividualPhysician": (
        "IndividualPhysician",
        "pydantic2_schemaorg.IndividualPhysician",
        "IndividualPhysician",
    ),
    "Quiz": ("Quiz", "pydantic2_schemaorg.Quiz", "Quiz"),
    "Nonprofit501c23": (
        "Nonprofit501c23",
        "pydantic2_schemaorg.Nonprofit501c23",
        "Nonprofit501c23",
    ),
    "InviteAction": (
        "InviteAction",
        "pydantic2_schemaorg.InviteAction",
        "InviteAction",
    ),
    "Nonprofit501c9": (
        "Nonprofit501c9",
        "pydantic2_schemaorg.Nonprofit501c9",
        "Nonprofit501c9",
    ),
    "CommentAction": (
        "CommentAction",
        "pydantic2_schemaorg.CommentAction",
        "CommentAction",
    ),
    "MinorHumanEditsDigitalSource": (
        "MinorHumanEditsDigitalSource",
        "pydantic2_schemaorg.MinorHumanEditsDigitalSource",
        "MinorHumanEditsDigitalSource",
    ),
    "LowCalorieDiet": (
        "LowCalorieDiet",
        "pydantic2_schemaorg.LowCalorieDiet",
        "LowCalorieDiet",
    ),
    "RemixAlbum": ("RemixAlbum", "pydantic2_schemaorg.RemixAlbum", "RemixAlbum"),
    "Chapter": ("Chapter", "pydantic2_schemaorg.Chapter", "Chapter"),
    "UserPlays": ("UserPlays", "pydantic2_schemaorg.UserPlays", "UserPlays"),
    "CompositeWithTrainedAlgorithmicMediaDigitalSource": (
        "CompositeWithTrainedAlgorithmicMediaDigitalSource",
        "pydantic2_schemaorg.CompositeWithTrainedAlgorithmicMediaDigitalSource",
        "CompositeWithTrainedAlgorithmicMediaDigitalSource",
    ),
    "ShoppingCenter": (
        "ShoppingCenter",
        "pydantic2_schemaorg.ShoppingCenter",
        "ShoppingCenter",
    ),
    "WearableSizeSystemContinental": (
        "WearableSizeSystemContinental",
        "pydantic2_schemaorg.WearableSizeSystemContinental",
        "WearableSizeSystemContinental",
    ),
    "CassetteFormat": (
        "CassetteFormat",
        "pydantic2_schemaorg.CassetteFormat",
        "CassetteFormat",
    ),
    "PresentationDigitalDocument": (
        "PresentationDigitalDocument",
        "pydantic2_schemaorg.PresentationDigitalDocument",
        "PresentationDigitalDocument",
    ),
    "Nonprofit501c17": (
        "Nonprofit501c17",
        "pydantic2_schemaorg.Nonprofit501c17",
        "Nonprofit501c17",
    ),
    "ZoneBoardingPolicy": (
        "ZoneBoardingPolicy",
        "pydantic2_schemaorg.ZoneBoardingPolicy",
        "ZoneBoardingPolicy",
    ),
    "LimitedByGuaranteeCharity": (
        "LimitedByGuaranteeCharity",
        "pydantic2_schemaorg.LimitedByGuaranteeCharity",
        "LimitedByGuaranteeCharity",
    ),
    "AutomatedTeller": (
        "AutomatedTeller",
        "pydantic2_schemaorg.AutomatedTeller",
        "AutomatedTeller",
    ),
    "DateTime": ("DateTime", "pydantic2_schemaorg.DateTime", "DateTime"),
    "VenueMap": ("VenueMap", "pydantic2_schemaorg.VenueMap", "VenueMap"),
    "LikeAction": ("LikeAction", "pydantic2_schemaorg.LikeAction", "LikeAction"),
    "MonetaryAmountDistribution": (
        "MonetaryAmountDistribution",
        "pydantic2_schemaorg.MonetaryAmountDistribution",
        "MonetaryAmountDistribution",
    ),
    "Nonprofit501c26": (
        "Nonprofit501c26",
        "pydantic2_schemaorg.Nonprofit501c26",
        "Nonprofit501c26",
    ),
    "Monday": ("Monday", "pydantic2_schemaorg.Monday", "Monday"),
    "GeoShape": ("GeoShape", "pydantic2_schemaorg.GeoShape", "GeoShape"),
    "Taxi": ("Taxi", "pydantic2_schemaorg.Taxi", "Taxi"),
    "SeekToAction": (
        "SeekToAction",
        "pydantic2_schemaorg.SeekToAction",
        "SeekToAction",
    ),
    "Registry": ("Registry", "pydantic2_schemaorg.Registry", "Registry"),
    "ReservationPackage": (
        "ReservationPackage",
        "pydantic2_schemaorg.ReservationPackage",
        "ReservationPackage",
    ),
    "FourWheelDriveConfiguration": (
        "FourWheelDriveConfiguration",
        "pydantic2_schemaorg.FourWheelDriveConfiguration",
        "FourWheelDriveConfiguration",
    ),
    "DirectDebit": ("DirectDebit", "pydantic2_schemaorg.DirectDebit", "DirectDebit"),
    "Lung": ("Lung", "pydantic2_schemaorg.Lung", "Lung"),
    "MedicalWebPage": (
        "MedicalWebPage",
        "pydantic2_schemaorg.MedicalWebPage",
        "MedicalWebPage",
    ),
    "Courthouse": ("Courthouse", "pydantic2_schemaorg.Courthouse", "Courthouse"),
    "PoliticalParty": (
        "PoliticalParty",
        "pydantic2_schemaorg.PoliticalParty",
        "PoliticalParty",
    ),
    "DesktopWebPlatform": (
        "DesktopWebPlatform",
        "pydantic2_schemaorg.DesktopWebPlatform",
        "DesktopWebPlatform",
    ),
    "HardwareStore": (
        "HardwareStore",
        "pydantic2_schemaorg.HardwareStore",
        "HardwareStore",
    ),
    "DeliveryTimeSettings": (
        "DeliveryTimeSettings",
        "pydantic2_schemaorg.DeliveryTimeSettings",
        "DeliveryTimeSettings",
    ),
    "PalliativeProcedure": (
        "PalliativeProcedure",
        "pydantic2_schemaorg.PalliativeProcedure",
        "PalliativeProcedure",
    ),
    "Time": ("Time", "pydantic2_schemaorg.Time", "Time"),
    "Neck": ("Neck", "pydantic2_schemaorg.Neck", "Neck"),
    "SportsOrganization": (
        "SportsOrganization",
        "pydantic2_schemaorg.SportsOrganization",
        "SportsOrganization",
    ),
    "PoliceStation": (
        "PoliceStation",
        "pydantic2_schemaorg.PoliceStation",
        "PoliceStation",
    ),
    "RealEstateAgent": (
        "RealEstateAgent",
        "pydantic2_schemaorg.RealEstateAgent",
        "RealEstateAgent",
    ),
    "DeliveryMethod": (
        "DeliveryMethod",
        "pydantic2_schemaorg.DeliveryMethod",
        "DeliveryMethod",
    ),
    "ParcelService": (
        "ParcelService",
        "pydantic2_schemaorg.ParcelService",
        "ParcelService",
    ),
    "HowToDirection": (
        "HowToDirection",
        "pydantic2_schemaorg.HowToDirection",
        "HowToDirection",
    ),
    "Hotel": ("Hotel", "pydantic2_schemaorg.Hotel", "Hotel"),
    "DatedMoneySpecification": (
        "DatedMoneySpecification",
        "pydantic2_schemaorg.DatedMoneySpecification",
        "DatedMoneySpecification",
    ),
    "GeoCircle": ("GeoCircle", "pydantic2_schemaorg.GeoCircle", "GeoCircle"),
    "SizeSystemMetric": (
        "SizeSystemMetric",
        "pydantic2_schemaorg.SizeSystemMetric",
        "SizeSystemMetric",
    ),
    "UserBlocks": ("UserBlocks", "pydantic2_schemaorg.UserBlocks", "UserBlocks"),
    "EUEnergyEfficiencyCategoryA3Plus": (
        "EUEnergyEfficiencyCategoryA3Plus",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryA3Plus",
        "EUEnergyEfficiencyCategoryA3Plus",
    ),
    "RegisterAction": (
        "RegisterAction",
        "pydantic2_schemaorg.RegisterAction",
        "RegisterAction",
    ),
    "PodcastEpisode": (
        "PodcastEpisode",
        "pydantic2_schemaorg.PodcastEpisode",
        "PodcastEpisode",
    ),
    "DefenceEstablishment": (
        "DefenceEstablishment",
        "pydantic2_schemaorg.DefenceEstablishment",
        "DefenceEstablishment",
    ),
    "WearableMeasurementCollar": (
        "WearableMeasurementCollar",
        "pydantic2_schemaorg.WearableMeasurementCollar",
        "WearableMeasurementCollar",
    ),
    "CssSelectorType": (
        "CssSelectorType",
        "pydantic2_schemaorg.CssSelectorType",
        "CssSelectorType",
    ),
    "EventAttendanceModeEnumeration": (
        "EventAttendanceModeEnumeration",
        "pydantic2_schemaorg.EventAttendanceModeEnumeration",
        "EventAttendanceModeEnumeration",
    ),
    "MixedEventAttendanceMode": (
        "MixedEventAttendanceMode",
        "pydantic2_schemaorg.MixedEventAttendanceMode",
        "MixedEventAttendanceMode",
    ),
    "Nerve": ("Nerve", "pydantic2_schemaorg.Nerve", "Nerve"),
    "DJMixAlbum": ("DJMixAlbum", "pydantic2_schemaorg.DJMixAlbum", "DJMixAlbum"),
    "MedicalCode": ("MedicalCode", "pydantic2_schemaorg.MedicalCode", "MedicalCode"),
    "Female": ("Female", "pydantic2_schemaorg.Female", "Female"),
    "WearableSizeSystemBR": (
        "WearableSizeSystemBR",
        "pydantic2_schemaorg.WearableSizeSystemBR",
        "WearableSizeSystemBR",
    ),
    "TierBenefitLoyaltyPoints": (
        "TierBenefitLoyaltyPoints",
        "pydantic2_schemaorg.TierBenefitLoyaltyPoints",
        "TierBenefitLoyaltyPoints",
    ),
    "SpeakableSpecification": (
        "SpeakableSpecification",
        "pydantic2_schemaorg.SpeakableSpecification",
        "SpeakableSpecification",
    ),
    "TakeAction": ("TakeAction", "pydantic2_schemaorg.TakeAction", "TakeAction"),
    "Substance": ("Substance", "pydantic2_schemaorg.Substance", "Substance"),
    "DietarySupplement": (
        "DietarySupplement",
        "pydantic2_schemaorg.DietarySupplement",
        "DietarySupplement",
    ),
    "SearchResultsPage": (
        "SearchResultsPage",
        "pydantic2_schemaorg.SearchResultsPage",
        "SearchResultsPage",
    ),
    "RecommendedDoseSchedule": (
        "RecommendedDoseSchedule",
        "pydantic2_schemaorg.RecommendedDoseSchedule",
        "RecommendedDoseSchedule",
    ),
    "InStock": ("InStock", "pydantic2_schemaorg.InStock", "InStock"),
    "ImageGallery": (
        "ImageGallery",
        "pydantic2_schemaorg.ImageGallery",
        "ImageGallery",
    ),
    "PublicationVolume": (
        "PublicationVolume",
        "pydantic2_schemaorg.PublicationVolume",
        "PublicationVolume",
    ),
    "WearableSizeGroupPlus": (
        "WearableSizeGroupPlus",
        "pydantic2_schemaorg.WearableSizeGroupPlus",
        "WearableSizeGroupPlus",
    ),
    "AskPublicNewsArticle": (
        "AskPublicNewsArticle",
        "pydantic2_schemaorg.AskPublicNewsArticle",
        "AskPublicNewsArticle",
    ),
    "MolecularEntity": (
        "MolecularEntity",
        "pydantic2_schemaorg.MolecularEntity",
        "MolecularEntity",
    ),
    "MedicalRiskScore": (
        "MedicalRiskScore",
        "pydantic2_schemaorg.MedicalRiskScore",
        "MedicalRiskScore",
    ),
    "OfferForLease": (
        "OfferForLease",
        "pydantic2_schemaorg.OfferForLease",
        "OfferForLease",
    ),
    "DaySpa": ("DaySpa", "pydantic2_schemaorg.DaySpa", "DaySpa"),
    "CheckoutPage": (
        "CheckoutPage",
        "pydantic2_schemaorg.CheckoutPage",
        "CheckoutPage",
    ),
    "PaymentService": (
        "PaymentService",
        "pydantic2_schemaorg.PaymentService",
        "PaymentService",
    ),
    "ProfessionalService": (
        "ProfessionalService",
        "pydantic2_schemaorg.ProfessionalService",
        "ProfessionalService",
    ),
    "FDAcategoryA": (
        "FDAcategoryA",
        "pydantic2_schemaorg.FDAcategoryA",
        "FDAcategoryA",
    ),
    "ArchiveOrganization": (
        "ArchiveOrganization",
        "pydantic2_schemaorg.ArchiveOrganization",
        "ArchiveOrganization",
    ),
    "TouristDestination": (
        "TouristDestination",
        "pydantic2_schemaorg.TouristDestination",
        "TouristDestination",
    ),
    "Homeopathic": ("Homeopathic", "pydantic2_schemaorg.Homeopathic", "Homeopathic"),
    "CategoryCodeSet": (
        "CategoryCodeSet",
        "pydantic2_schemaorg.CategoryCodeSet",
        "CategoryCodeSet",
    ),
    "Pond": ("Pond", "pydantic2_schemaorg.Pond", "Pond"),
    "Appearance": ("Appearance", "pydantic2_schemaorg.Appearance", "Appearance"),
    "CollegeOrUniversity": (
        "CollegeOrUniversity",
        "pydantic2_schemaorg.CollegeOrUniversity",
        "CollegeOrUniversity",
    ),
    "MedicalRiskFactor": (
        "MedicalRiskFactor",
        "pydantic2_schemaorg.MedicalRiskFactor",
        "MedicalRiskFactor",
    ),
    "ConfirmAction": (
        "ConfirmAction",
        "pydantic2_schemaorg.ConfirmAction",
        "ConfirmAction",
    ),
    "MedicalSymptom": (
        "MedicalSymptom",
        "pydantic2_schemaorg.MedicalSymptom",
        "MedicalSymptom",
    ),
    "CookAction": ("CookAction", "pydantic2_schemaorg.CookAction", "CookAction"),
    "Florist": ("Florist", "pydantic2_schemaorg.Florist", "Florist"),
    "AppendAction": (
        "AppendAction",
        "pydantic2_schemaorg.AppendAction",
        "AppendAction",
    ),
    "Pharmacy": ("Pharmacy", "pydantic2_schemaorg.Pharmacy", "Pharmacy"),
    "TierBenefitLoyaltyPrice": (
        "TierBenefitLoyaltyPrice",
        "pydantic2_schemaorg.TierBenefitLoyaltyPrice",
        "TierBenefitLoyaltyPrice",
    ),
    "AlbumRelease": (
        "AlbumRelease",
        "pydantic2_schemaorg.AlbumRelease",
        "AlbumRelease",
    ),
    "AggregateRating": (
        "AggregateRating",
        "pydantic2_schemaorg.AggregateRating",
        "AggregateRating",
    ),
    "LodgingReservation": (
        "LodgingReservation",
        "pydantic2_schemaorg.LodgingReservation",
        "LodgingReservation",
    ),
    "BodyMeasurementHead": (
        "BodyMeasurementHead",
        "pydantic2_schemaorg.BodyMeasurementHead",
        "BodyMeasurementHead",
    ),
    "DoubleBlindedTrial": (
        "DoubleBlindedTrial",
        "pydantic2_schemaorg.DoubleBlindedTrial",
        "DoubleBlindedTrial",
    ),
    "PrognosisHealthAspect": (
        "PrognosisHealthAspect",
        "pydantic2_schemaorg.PrognosisHealthAspect",
        "PrognosisHealthAspect",
    ),
    "AboutPage": ("AboutPage", "pydantic2_schemaorg.AboutPage", "AboutPage"),
    "Guide": ("Guide", "pydantic2_schemaorg.Guide", "Guide"),
    "MusicStore": ("MusicStore", "pydantic2_schemaorg.MusicStore", "MusicStore"),
    "Obstetric": ("Obstetric", "pydantic2_schemaorg.Obstetric", "Obstetric"),
    "Report": ("Report", "pydantic2_schemaorg.Report", "Report"),
    "LoseAction": ("LoseAction", "pydantic2_schemaorg.LoseAction", "LoseAction"),
    "HealthClub": ("HealthClub", "pydantic2_schemaorg.HealthClub", "HealthClub"),
    "LeftHandDriving": (
        "LeftHandDriving",
        "pydantic2_schemaorg.LeftHandDriving",
        "LeftHandDriving",
    ),
    "AutoRental": ("AutoRental", "pydantic2_schemaorg.AutoRental", "AutoRental"),
    "MedicalScholarlyArticle": (
        "MedicalScholarlyArticle",
        "pydantic2_schemaorg.MedicalScholarlyArticle",
        "MedicalScholarlyArticle",
    ),
    "RespiratoryTherapy": (
        "RespiratoryTherapy",
        "pydantic2_schemaorg.RespiratoryTherapy",
        "RespiratoryTherapy",
    ),
    "MusicComposition": (
        "MusicComposition",
        "pydantic2_schemaorg.MusicComposition",
        "MusicComposition",
    ),
    "Pulmonary": ("Pulmonary", "pydantic2_schemaorg.Pulmonary", "Pulmonary"),
    "DeliveryEvent": (
        "DeliveryEvent",
        "pydantic2_schemaorg.DeliveryEvent",
        "DeliveryEvent",
    ),
    "BusReservation": (
        "BusReservation",
        "pydantic2_schemaorg.BusReservation",
        "BusReservation",
    ),
    "MusicPlaylist": (
        "MusicPlaylist",
        "pydantic2_schemaorg.MusicPlaylist",
        "MusicPlaylist",
    ),
    "MusicRelease": (
        "MusicRelease",
        "pydantic2_schemaorg.MusicRelease",
        "MusicRelease",
    ),
    "Syllabus": ("Syllabus", "pydantic2_schemaorg.Syllabus", "Syllabus"),
    "SoundtrackAlbum": (
        "SoundtrackAlbum",
        "pydantic2_schemaorg.SoundtrackAlbum",
        "SoundtrackAlbum",
    ),
    "WearableMeasurementLength": (
        "WearableMeasurementLength",
        "pydantic2_schemaorg.WearableMeasurementLength",
        "WearableMeasurementLength",
    ),
    "HinduTemple": ("HinduTemple", "pydantic2_schemaorg.HinduTemple", "HinduTemple"),
    "TouristInformationCenter": (
        "TouristInformationCenter",
        "pydantic2_schemaorg.TouristInformationCenter",
        "TouristInformationCenter",
    ),
    "CovidTestingFacility": (
        "CovidTestingFacility",
        "pydantic2_schemaorg.CovidTestingFacility",
        "CovidTestingFacility",
    ),
    "Canal": ("Canal", "pydantic2_schemaorg.Canal", "Canal"),
    "SRP": ("SRP", "pydantic2_schemaorg.SRP", "SRP"),
    "SiteNavigationElement": (
        "SiteNavigationElement",
        "pydantic2_schemaorg.SiteNavigationElement",
        "SiteNavigationElement",
    ),
    "SpokenWordAlbum": (
        "SpokenWordAlbum",
        "pydantic2_schemaorg.SpokenWordAlbum",
        "SpokenWordAlbum",
    ),
    "PreventionIndication": (
        "PreventionIndication",
        "pydantic2_schemaorg.PreventionIndication",
        "PreventionIndication",
    ),
    "Book": ("Book", "pydantic2_schemaorg.Book", "Book"),
    "Audiobook": ("Audiobook", "pydantic2_schemaorg.Audiobook", "Audiobook"),
    "Observational": (
        "Observational",
        "pydantic2_schemaorg.Observational",
        "Observational",
    ),
    "WearableSizeGroupGirls": (
        "WearableSizeGroupGirls",
        "pydantic2_schemaorg.WearableSizeGroupGirls",
        "WearableSizeGroupGirls",
    ),
    "Seat": ("Seat", "pydantic2_schemaorg.Seat", "Seat"),
    "SpecialAnnouncement": (
        "SpecialAnnouncement",
        "pydantic2_schemaorg.SpecialAnnouncement",
        "SpecialAnnouncement",
    ),
    "ByBankTransferInAdvance": (
        "ByBankTransferInAdvance",
        "pydantic2_schemaorg.ByBankTransferInAdvance",
        "ByBankTransferInAdvance",
    ),
    "OrderReturned": (
        "OrderReturned",
        "pydantic2_schemaorg.OrderReturned",
        "OrderReturned",
    ),
    "ComputerStore": (
        "ComputerStore",
        "pydantic2_schemaorg.ComputerStore",
        "ComputerStore",
    ),
    "MenuItem": ("MenuItem", "pydantic2_schemaorg.MenuItem", "MenuItem"),
    "Diet": ("Diet", "pydantic2_schemaorg.Diet", "Diet"),
    "PrintDigitalSource": (
        "PrintDigitalSource",
        "pydantic2_schemaorg.PrintDigitalSource",
        "PrintDigitalSource",
    ),
    "LockerDelivery": (
        "LockerDelivery",
        "pydantic2_schemaorg.LockerDelivery",
        "LockerDelivery",
    ),
    "MedicalRiskCalculator": (
        "MedicalRiskCalculator",
        "pydantic2_schemaorg.MedicalRiskCalculator",
        "MedicalRiskCalculator",
    ),
    "MovieRentalStore": (
        "MovieRentalStore",
        "pydantic2_schemaorg.MovieRentalStore",
        "MovieRentalStore",
    ),
    "TreatmentsHealthAspect": (
        "TreatmentsHealthAspect",
        "pydantic2_schemaorg.TreatmentsHealthAspect",
        "TreatmentsHealthAspect",
    ),
    "OrderPickupAvailable": (
        "OrderPickupAvailable",
        "pydantic2_schemaorg.OrderPickupAvailable",
        "OrderPickupAvailable",
    ),
    "JewelryStore": (
        "JewelryStore",
        "pydantic2_schemaorg.JewelryStore",
        "JewelryStore",
    ),
    "VisualArtsEvent": (
        "VisualArtsEvent",
        "pydantic2_schemaorg.VisualArtsEvent",
        "VisualArtsEvent",
    ),
    "Motel": ("Motel", "pydantic2_schemaorg.Motel", "Motel"),
    "OrderProblem": (
        "OrderProblem",
        "pydantic2_schemaorg.OrderProblem",
        "OrderProblem",
    ),
    "MemberProgramTier": (
        "MemberProgramTier",
        "pydantic2_schemaorg.MemberProgramTier",
        "MemberProgramTier",
    ),
    "EventVenue": ("EventVenue", "pydantic2_schemaorg.EventVenue", "EventVenue"),
    "DrugLegalStatus": (
        "DrugLegalStatus",
        "pydantic2_schemaorg.DrugLegalStatus",
        "DrugLegalStatus",
    ),
    "MovieClip": ("MovieClip", "pydantic2_schemaorg.MovieClip", "MovieClip"),
    "State": ("State", "pydantic2_schemaorg.State", "State"),
    "COD": ("COD", "pydantic2_schemaorg.COD", "COD"),
    "CafeOrCoffeeShop": (
        "CafeOrCoffeeShop",
        "pydantic2_schemaorg.CafeOrCoffeeShop",
        "CafeOrCoffeeShop",
    ),
    "MediaReviewItem": (
        "MediaReviewItem",
        "pydantic2_schemaorg.MediaReviewItem",
        "MediaReviewItem",
    ),
    "ReducedRelevanceForChildrenConsideration": (
        "ReducedRelevanceForChildrenConsideration",
        "pydantic2_schemaorg.ReducedRelevanceForChildrenConsideration",
        "ReducedRelevanceForChildrenConsideration",
    ),
    "EmployerAggregateRating": (
        "EmployerAggregateRating",
        "pydantic2_schemaorg.EmployerAggregateRating",
        "EmployerAggregateRating",
    ),
    "BodyMeasurementWaist": (
        "BodyMeasurementWaist",
        "pydantic2_schemaorg.BodyMeasurementWaist",
        "BodyMeasurementWaist",
    ),
    "WearableSizeSystemGS1": (
        "WearableSizeSystemGS1",
        "pydantic2_schemaorg.WearableSizeSystemGS1",
        "WearableSizeSystemGS1",
    ),
    "Nonprofit501c22": (
        "Nonprofit501c22",
        "pydantic2_schemaorg.Nonprofit501c22",
        "Nonprofit501c22",
    ),
    "FundingScheme": (
        "FundingScheme",
        "pydantic2_schemaorg.FundingScheme",
        "FundingScheme",
    ),
    "DigitalArtDigitalSource": (
        "DigitalArtDigitalSource",
        "pydantic2_schemaorg.DigitalArtDigitalSource",
        "DigitalArtDigitalSource",
    ),
    "Fungus": ("Fungus", "pydantic2_schemaorg.Fungus", "Fungus"),
    "WebSite": ("WebSite", "pydantic2_schemaorg.WebSite", "WebSite"),
    "Cardiovascular": (
        "Cardiovascular",
        "pydantic2_schemaorg.Cardiovascular",
        "Cardiovascular",
    ),
    "Distillery": ("Distillery", "pydantic2_schemaorg.Distillery", "Distillery"),
    "Surgical": ("Surgical", "pydantic2_schemaorg.Surgical", "Surgical"),
    "OutOfStock": ("OutOfStock", "pydantic2_schemaorg.OutOfStock", "OutOfStock"),
    "ReceiveAction": (
        "ReceiveAction",
        "pydantic2_schemaorg.ReceiveAction",
        "ReceiveAction",
    ),
    "OfficeEquipmentStore": (
        "OfficeEquipmentStore",
        "pydantic2_schemaorg.OfficeEquipmentStore",
        "OfficeEquipmentStore",
    ),
    "BroadcastRelease": (
        "BroadcastRelease",
        "pydantic2_schemaorg.BroadcastRelease",
        "BroadcastRelease",
    ),
    "DrawAction": ("DrawAction", "pydantic2_schemaorg.DrawAction", "DrawAction"),
    "MathSolver": ("MathSolver", "pydantic2_schemaorg.MathSolver", "MathSolver"),
    "BodyMeasurementHips": (
        "BodyMeasurementHips",
        "pydantic2_schemaorg.BodyMeasurementHips",
        "BodyMeasurementHips",
    ),
    "MenuSection": ("MenuSection", "pydantic2_schemaorg.MenuSection", "MenuSection"),
    "OrderCancelled": (
        "OrderCancelled",
        "pydantic2_schemaorg.OrderCancelled",
        "OrderCancelled",
    ),
    "SendAction": ("SendAction", "pydantic2_schemaorg.SendAction", "SendAction"),
    "Nonprofit501k": (
        "Nonprofit501k",
        "pydantic2_schemaorg.Nonprofit501k",
        "Nonprofit501k",
    ),
    "Casino": ("Casino", "pydantic2_schemaorg.Casino", "Casino"),
    "VitalSign": ("VitalSign", "pydantic2_schemaorg.VitalSign", "VitalSign"),
    "Male": ("Male", "pydantic2_schemaorg.Male", "Male"),
    "UsageOrScheduleHealthAspect": (
        "UsageOrScheduleHealthAspect",
        "pydantic2_schemaorg.UsageOrScheduleHealthAspect",
        "UsageOrScheduleHealthAspect",
    ),
    "TaxiVehicleUsage": (
        "TaxiVehicleUsage",
        "pydantic2_schemaorg.TaxiVehicleUsage",
        "TaxiVehicleUsage",
    ),
    "HowToStep": ("HowToStep", "pydantic2_schemaorg.HowToStep", "HowToStep"),
    "ActionStatusType": (
        "ActionStatusType",
        "pydantic2_schemaorg.ActionStatusType",
        "ActionStatusType",
    ),
    "ActiveActionStatus": (
        "ActiveActionStatus",
        "pydantic2_schemaorg.ActiveActionStatus",
        "ActiveActionStatus",
    ),
    "BrokerageAccount": (
        "BrokerageAccount",
        "pydantic2_schemaorg.BrokerageAccount",
        "BrokerageAccount",
    ),
    "Crematorium": ("Crematorium", "pydantic2_schemaorg.Crematorium", "Crematorium"),
    "HealthCare": ("HealthCare", "pydantic2_schemaorg.HealthCare", "HealthCare"),
    "BedDetails": ("BedDetails", "pydantic2_schemaorg.BedDetails", "BedDetails"),
    "UserComments": (
        "UserComments",
        "pydantic2_schemaorg.UserComments",
        "UserComments",
    ),
    "Pathology": ("Pathology", "pydantic2_schemaorg.Pathology", "Pathology"),
    "Consortium": ("Consortium", "pydantic2_schemaorg.Consortium", "Consortium"),
    "TieAction": ("TieAction", "pydantic2_schemaorg.TieAction", "TieAction"),
    "HowToItem": ("HowToItem", "pydantic2_schemaorg.HowToItem", "HowToItem"),
    "HowToTool": ("HowToTool", "pydantic2_schemaorg.HowToTool", "HowToTool"),
    "CurrencyConversionService": (
        "CurrencyConversionService",
        "pydantic2_schemaorg.CurrencyConversionService",
        "CurrencyConversionService",
    ),
    "AlignmentObject": (
        "AlignmentObject",
        "pydantic2_schemaorg.AlignmentObject",
        "AlignmentObject",
    ),
    "LivingWithHealthAspect": (
        "LivingWithHealthAspect",
        "pydantic2_schemaorg.LivingWithHealthAspect",
        "LivingWithHealthAspect",
    ),
    "VideoObject": ("VideoObject", "pydantic2_schemaorg.VideoObject", "VideoObject"),
    "VideoObjectSnapshot": (
        "VideoObjectSnapshot",
        "pydantic2_schemaorg.VideoObjectSnapshot",
        "VideoObjectSnapshot",
    ),
    "ImagingTest": ("ImagingTest", "pydantic2_schemaorg.ImagingTest", "ImagingTest"),
    "MerchantReturnFiniteReturnWindow": (
        "MerchantReturnFiniteReturnWindow",
        "pydantic2_schemaorg.MerchantReturnFiniteReturnWindow",
        "MerchantReturnFiniteReturnWindow",
    ),
    "AmpStory": ("AmpStory", "pydantic2_schemaorg.AmpStory", "AmpStory"),
    "BusinessSupport": (
        "BusinessSupport",
        "pydantic2_schemaorg.BusinessSupport",
        "BusinessSupport",
    ),
    "WearableSizeGroupMaternity": (
        "WearableSizeGroupMaternity",
        "pydantic2_schemaorg.WearableSizeGroupMaternity",
        "WearableSizeGroupMaternity",
    ),
    "ReservationHold": (
        "ReservationHold",
        "pydantic2_schemaorg.ReservationHold",
        "ReservationHold",
    ),
    "ListPrice": ("ListPrice", "pydantic2_schemaorg.ListPrice", "ListPrice"),
    "Embassy": ("Embassy", "pydantic2_schemaorg.Embassy", "Embassy"),
    "OrderAction": ("OrderAction", "pydantic2_schemaorg.OrderAction", "OrderAction"),
    "ExerciseGym": ("ExerciseGym", "pydantic2_schemaorg.ExerciseGym", "ExerciseGym"),
    "Movie": ("Movie", "pydantic2_schemaorg.Movie", "Movie"),
    "HealthcareConsideration": (
        "HealthcareConsideration",
        "pydantic2_schemaorg.HealthcareConsideration",
        "HealthcareConsideration",
    ),
    "EvidenceLevelA": (
        "EvidenceLevelA",
        "pydantic2_schemaorg.EvidenceLevelA",
        "EvidenceLevelA",
    ),
    "OfflineEventAttendanceMode": (
        "OfflineEventAttendanceMode",
        "pydantic2_schemaorg.OfflineEventAttendanceMode",
        "OfflineEventAttendanceMode",
    ),
    "Nonprofit501q": (
        "Nonprofit501q",
        "pydantic2_schemaorg.Nonprofit501q",
        "Nonprofit501q",
    ),
    "ReadPermission": (
        "ReadPermission",
        "pydantic2_schemaorg.ReadPermission",
        "ReadPermission",
    ),
    "SportsTeam": ("SportsTeam", "pydantic2_schemaorg.SportsTeam", "SportsTeam"),
    "SatiricalArticle": (
        "SatiricalArticle",
        "pydantic2_schemaorg.SatiricalArticle",
        "SatiricalArticle",
    ),
    "Dentistry": ("Dentistry", "pydantic2_schemaorg.Dentistry", "Dentistry"),
    "WinAction": ("WinAction", "pydantic2_schemaorg.WinAction", "WinAction"),
    "Physiotherapy": (
        "Physiotherapy",
        "pydantic2_schemaorg.Physiotherapy",
        "Physiotherapy",
    ),
    "MusculoskeletalExam": (
        "MusculoskeletalExam",
        "pydantic2_schemaorg.MusculoskeletalExam",
        "MusculoskeletalExam",
    ),
    "PerformingArtsTheater": (
        "PerformingArtsTheater",
        "pydantic2_schemaorg.PerformingArtsTheater",
        "PerformingArtsTheater",
    ),
    "Bacteria": ("Bacteria", "pydantic2_schemaorg.Bacteria", "Bacteria"),
    "PaintAction": ("PaintAction", "pydantic2_schemaorg.PaintAction", "PaintAction"),
    "Online": ("Online", "pydantic2_schemaorg.Online", "Online"),
    "Artery": ("Artery", "pydantic2_schemaorg.Artery", "Artery"),
    "OnlineFull": ("OnlineFull", "pydantic2_schemaorg.OnlineFull", "OnlineFull"),
    "WarrantyPromise": (
        "WarrantyPromise",
        "pydantic2_schemaorg.WarrantyPromise",
        "WarrantyPromise",
    ),
    "PayAction": ("PayAction", "pydantic2_schemaorg.PayAction", "PayAction"),
    "GroceryStore": (
        "GroceryStore",
        "pydantic2_schemaorg.GroceryStore",
        "GroceryStore",
    ),
    "ExercisePlan": (
        "ExercisePlan",
        "pydantic2_schemaorg.ExercisePlan",
        "ExercisePlan",
    ),
    "DanceEvent": ("DanceEvent", "pydantic2_schemaorg.DanceEvent", "DanceEvent"),
    "RecyclingCenter": (
        "RecyclingCenter",
        "pydantic2_schemaorg.RecyclingCenter",
        "RecyclingCenter",
    ),
    "Church": ("Church", "pydantic2_schemaorg.Church", "Church"),
    "CatholicChurch": (
        "CatholicChurch",
        "pydantic2_schemaorg.CatholicChurch",
        "CatholicChurch",
    ),
    "CompletedActionStatus": (
        "CompletedActionStatus",
        "pydantic2_schemaorg.CompletedActionStatus",
        "CompletedActionStatus",
    ),
    "TouristTrip": ("TouristTrip", "pydantic2_schemaorg.TouristTrip", "TouristTrip"),
    "PaymentDue": ("PaymentDue", "pydantic2_schemaorg.PaymentDue", "PaymentDue"),
    "TipAction": ("TipAction", "pydantic2_schemaorg.TipAction", "TipAction"),
    "Certification": (
        "Certification",
        "pydantic2_schemaorg.Certification",
        "Certification",
    ),
    "ResearchProject": (
        "ResearchProject",
        "pydantic2_schemaorg.ResearchProject",
        "ResearchProject",
    ),
    "BikeStore": ("BikeStore", "pydantic2_schemaorg.BikeStore", "BikeStore"),
    "Urologic": ("Urologic", "pydantic2_schemaorg.Urologic", "Urologic"),
    "EUEnergyEfficiencyCategoryD": (
        "EUEnergyEfficiencyCategoryD",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryD",
        "EUEnergyEfficiencyCategoryD",
    ),
    "FlightReservation": (
        "FlightReservation",
        "pydantic2_schemaorg.FlightReservation",
        "FlightReservation",
    ),
    "PhysicalTherapy": (
        "PhysicalTherapy",
        "pydantic2_schemaorg.PhysicalTherapy",
        "PhysicalTherapy",
    ),
    "SpreadsheetDigitalDocument": (
        "SpreadsheetDigitalDocument",
        "pydantic2_schemaorg.SpreadsheetDigitalDocument",
        "SpreadsheetDigitalDocument",
    ),
    "PatientExperienceHealthAspect": (
        "PatientExperienceHealthAspect",
        "pydantic2_schemaorg.PatientExperienceHealthAspect",
        "PatientExperienceHealthAspect",
    ),
    "TelevisionStation": (
        "TelevisionStation",
        "pydantic2_schemaorg.TelevisionStation",
        "TelevisionStation",
    ),
    "RealEstateListing": (
        "RealEstateListing",
        "pydantic2_schemaorg.RealEstateListing",
        "RealEstateListing",
    ),
    "Blog": ("Blog", "pydantic2_schemaorg.Blog", "Blog"),
    "ClothingStore": (
        "ClothingStore",
        "pydantic2_schemaorg.ClothingStore",
        "ClothingStore",
    ),
    "Recommendation": (
        "Recommendation",
        "pydantic2_schemaorg.Recommendation",
        "Recommendation",
    ),
    "TVSeason": ("TVSeason", "pydantic2_schemaorg.TVSeason", "TVSeason"),
    "AnaerobicActivity": (
        "AnaerobicActivity",
        "pydantic2_schemaorg.AnaerobicActivity",
        "AnaerobicActivity",
    ),
    "OnlineEventAttendanceMode": (
        "OnlineEventAttendanceMode",
        "pydantic2_schemaorg.OnlineEventAttendanceMode",
        "OnlineEventAttendanceMode",
    ),
    "UnemploymentSupport": (
        "UnemploymentSupport",
        "pydantic2_schemaorg.UnemploymentSupport",
        "UnemploymentSupport",
    ),
    "GeoCoordinates": (
        "GeoCoordinates",
        "pydantic2_schemaorg.GeoCoordinates",
        "GeoCoordinates",
    ),
    "ActivateAction": (
        "ActivateAction",
        "pydantic2_schemaorg.ActivateAction",
        "ActivateAction",
    ),
    "Car": ("Car", "pydantic2_schemaorg.Car", "Car"),
    "Virus": ("Virus", "pydantic2_schemaorg.Virus", "Virus"),
    "ScreeningEvent": (
        "ScreeningEvent",
        "pydantic2_schemaorg.ScreeningEvent",
        "ScreeningEvent",
    ),
    "Nonprofit501a": (
        "Nonprofit501a",
        "pydantic2_schemaorg.Nonprofit501a",
        "Nonprofit501a",
    ),
    "LimitedAvailability": (
        "LimitedAvailability",
        "pydantic2_schemaorg.LimitedAvailability",
        "LimitedAvailability",
    ),
    "Prion": ("Prion", "pydantic2_schemaorg.Prion", "Prion"),
    "UKTrust": ("UKTrust", "pydantic2_schemaorg.UKTrust", "UKTrust"),
    "EditedOrCroppedContent": (
        "EditedOrCroppedContent",
        "pydantic2_schemaorg.EditedOrCroppedContent",
        "EditedOrCroppedContent",
    ),
    "FDAcategoryX": (
        "FDAcategoryX",
        "pydantic2_schemaorg.FDAcategoryX",
        "FDAcategoryX",
    ),
    "FMRadioChannel": (
        "FMRadioChannel",
        "pydantic2_schemaorg.FMRadioChannel",
        "FMRadioChannel",
    ),
    "Installment": ("Installment", "pydantic2_schemaorg.Installment", "Installment"),
    "ScheduleAction": (
        "ScheduleAction",
        "pydantic2_schemaorg.ScheduleAction",
        "ScheduleAction",
    ),
    "EventReservation": (
        "EventReservation",
        "pydantic2_schemaorg.EventReservation",
        "EventReservation",
    ),
    "Endocrine": ("Endocrine", "pydantic2_schemaorg.Endocrine", "Endocrine"),
    "MedicalGuideline": (
        "MedicalGuideline",
        "pydantic2_schemaorg.MedicalGuideline",
        "MedicalGuideline",
    ),
    "MedicalGuidelineContraindication": (
        "MedicalGuidelineContraindication",
        "pydantic2_schemaorg.MedicalGuidelineContraindication",
        "MedicalGuidelineContraindication",
    ),
    "Wholesale": ("Wholesale", "pydantic2_schemaorg.Wholesale", "Wholesale"),
    "FDAnotEvaluated": (
        "FDAnotEvaluated",
        "pydantic2_schemaorg.FDAnotEvaluated",
        "FDAnotEvaluated",
    ),
    "Nonprofit501c8": (
        "Nonprofit501c8",
        "pydantic2_schemaorg.Nonprofit501c8",
        "Nonprofit501c8",
    ),
    "DataFeedItem": (
        "DataFeedItem",
        "pydantic2_schemaorg.DataFeedItem",
        "DataFeedItem",
    ),
    "StrengthTraining": (
        "StrengthTraining",
        "pydantic2_schemaorg.StrengthTraining",
        "StrengthTraining",
    ),
    "MonetaryAmount": (
        "MonetaryAmount",
        "pydantic2_schemaorg.MonetaryAmount",
        "MonetaryAmount",
    ),
    "AnalysisNewsArticle": (
        "AnalysisNewsArticle",
        "pydantic2_schemaorg.AnalysisNewsArticle",
        "AnalysisNewsArticle",
    ),
    "PrimaryCare": ("PrimaryCare", "pydantic2_schemaorg.PrimaryCare", "PrimaryCare"),
    "StagedContent": (
        "StagedContent",
        "pydantic2_schemaorg.StagedContent",
        "StagedContent",
    ),
    "SubscribeAction": (
        "SubscribeAction",
        "pydantic2_schemaorg.SubscribeAction",
        "SubscribeAction",
    ),
    "FoodEstablishmentReservation": (
        "FoodEstablishmentReservation",
        "pydantic2_schemaorg.FoodEstablishmentReservation",
        "FoodEstablishmentReservation",
    ),
    "PetStore": ("PetStore", "pydantic2_schemaorg.PetStore", "PetStore"),
    "WriteAction": ("WriteAction", "pydantic2_schemaorg.WriteAction", "WriteAction"),
    "InForce": ("InForce", "pydantic2_schemaorg.InForce", "InForce"),
    "WearableSizeSystemUS": (
        "WearableSizeSystemUS",
        "pydantic2_schemaorg.WearableSizeSystemUS",
        "WearableSizeSystemUS",
    ),
    "BenefitsHealthAspect": (
        "BenefitsHealthAspect",
        "pydantic2_schemaorg.BenefitsHealthAspect",
        "BenefitsHealthAspect",
    ),
    "BowlingAlley": (
        "BowlingAlley",
        "pydantic2_schemaorg.BowlingAlley",
        "BowlingAlley",
    ),
    "VideoGameClip": (
        "VideoGameClip",
        "pydantic2_schemaorg.VideoGameClip",
        "VideoGameClip",
    ),
    "Festival": ("Festival", "pydantic2_schemaorg.Festival", "Festival"),
    "PaymentAutomaticallyApplied": (
        "PaymentAutomaticallyApplied",
        "pydantic2_schemaorg.PaymentAutomaticallyApplied",
        "PaymentAutomaticallyApplied",
    ),
    "PostalAddress": (
        "PostalAddress",
        "pydantic2_schemaorg.PostalAddress",
        "PostalAddress",
    ),
    "Saturday": ("Saturday", "pydantic2_schemaorg.Saturday", "Saturday"),
    "SkiResort": ("SkiResort", "pydantic2_schemaorg.SkiResort", "SkiResort"),
    "ByInvoice": ("ByInvoice", "pydantic2_schemaorg.ByInvoice", "ByInvoice"),
    "BusTrip": ("BusTrip", "pydantic2_schemaorg.BusTrip", "BusTrip"),
    "WPAdBlock": ("WPAdBlock", "pydantic2_schemaorg.WPAdBlock", "WPAdBlock"),
    "Therapeutic": ("Therapeutic", "pydantic2_schemaorg.Therapeutic", "Therapeutic"),
    "Otolaryngologic": (
        "Otolaryngologic",
        "pydantic2_schemaorg.Otolaryngologic",
        "Otolaryngologic",
    ),
    "Drug": ("Drug", "pydantic2_schemaorg.Drug", "Drug"),
    "MotorcycleDealer": (
        "MotorcycleDealer",
        "pydantic2_schemaorg.MotorcycleDealer",
        "MotorcycleDealer",
    ),
    "OriginalShippingFees": (
        "OriginalShippingFees",
        "pydantic2_schemaorg.OriginalShippingFees",
        "OriginalShippingFees",
    ),
    "HyperTocEntry": (
        "HyperTocEntry",
        "pydantic2_schemaorg.HyperTocEntry",
        "HyperTocEntry",
    ),
    "QAPage": ("QAPage", "pydantic2_schemaorg.QAPage", "QAPage"),
    "WearableSizeGroupJuniors": (
        "WearableSizeGroupJuniors",
        "pydantic2_schemaorg.WearableSizeGroupJuniors",
        "WearableSizeGroupJuniors",
    ),
    "Ultrasound": ("Ultrasound", "pydantic2_schemaorg.Ultrasound", "Ultrasound"),
    "ShortStory": ("ShortStory", "pydantic2_schemaorg.ShortStory", "ShortStory"),
    "ReturnLabelInBox": (
        "ReturnLabelInBox",
        "pydantic2_schemaorg.ReturnLabelInBox",
        "ReturnLabelInBox",
    ),
    "ShoeStore": ("ShoeStore", "pydantic2_schemaorg.ShoeStore", "ShoeStore"),
    "InvestmentFund": (
        "InvestmentFund",
        "pydantic2_schemaorg.InvestmentFund",
        "InvestmentFund",
    ),
    "DrugStrength": (
        "DrugStrength",
        "pydantic2_schemaorg.DrugStrength",
        "DrugStrength",
    ),
    "DepositAccount": (
        "DepositAccount",
        "pydantic2_schemaorg.DepositAccount",
        "DepositAccount",
    ),
    "AlgorithmicMediaDigitalSource": (
        "AlgorithmicMediaDigitalSource",
        "pydantic2_schemaorg.AlgorithmicMediaDigitalSource",
        "AlgorithmicMediaDigitalSource",
    ),
    "Dermatology": ("Dermatology", "pydantic2_schemaorg.Dermatology", "Dermatology"),
    "DepartmentStore": (
        "DepartmentStore",
        "pydantic2_schemaorg.DepartmentStore",
        "DepartmentStore",
    ),
    "TVClip": ("TVClip", "pydantic2_schemaorg.TVClip", "TVClip"),
    "TraditionalChinese": (
        "TraditionalChinese",
        "pydantic2_schemaorg.TraditionalChinese",
        "TraditionalChinese",
    ),
    "EmploymentAgency": (
        "EmploymentAgency",
        "pydantic2_schemaorg.EmploymentAgency",
        "EmploymentAgency",
    ),
    "Nonprofit501c12": (
        "Nonprofit501c12",
        "pydantic2_schemaorg.Nonprofit501c12",
        "Nonprofit501c12",
    ),
    "Protozoa": ("Protozoa", "pydantic2_schemaorg.Protozoa", "Protozoa"),
    "Optometric": ("Optometric", "pydantic2_schemaorg.Optometric", "Optometric"),
    "Atlas": ("Atlas", "pydantic2_schemaorg.Atlas", "Atlas"),
    "DeleteAction": (
        "DeleteAction",
        "pydantic2_schemaorg.DeleteAction",
        "DeleteAction",
    ),
    "School": ("School", "pydantic2_schemaorg.School", "School"),
    "APIReference": (
        "APIReference",
        "pydantic2_schemaorg.APIReference",
        "APIReference",
    ),
    "ScreeningHealthAspect": (
        "ScreeningHealthAspect",
        "pydantic2_schemaorg.ScreeningHealthAspect",
        "ScreeningHealthAspect",
    ),
    "GiveAction": ("GiveAction", "pydantic2_schemaorg.GiveAction", "GiveAction"),
    "Preschool": ("Preschool", "pydantic2_schemaorg.Preschool", "Preschool"),
    "EmployeeRole": (
        "EmployeeRole",
        "pydantic2_schemaorg.EmployeeRole",
        "EmployeeRole",
    ),
    "HowToSupply": ("HowToSupply", "pydantic2_schemaorg.HowToSupply", "HowToSupply"),
    "Playground": ("Playground", "pydantic2_schemaorg.Playground", "Playground"),
    "PotentialActionStatus": (
        "PotentialActionStatus",
        "pydantic2_schemaorg.PotentialActionStatus",
        "PotentialActionStatus",
    ),
    "WearableMeasurementHeight": (
        "WearableMeasurementHeight",
        "pydantic2_schemaorg.WearableMeasurementHeight",
        "WearableMeasurementHeight",
    ),
    "Throat": ("Throat", "pydantic2_schemaorg.Throat", "Throat"),
    "HearingImpairedSupported": (
        "HearingImpairedSupported",
        "pydantic2_schemaorg.HearingImpairedSupported",
        "HearingImpairedSupported",
    ),
    "KosherDiet": ("KosherDiet", "pydantic2_schemaorg.KosherDiet", "KosherDiet"),
    "TextDigitalDocument": (
        "TextDigitalDocument",
        "pydantic2_schemaorg.TextDigitalDocument",
        "TextDigitalDocument",
    ),
    "CableOrSatelliteService": (
        "CableOrSatelliteService",
        "pydantic2_schemaorg.CableOrSatelliteService",
        "CableOrSatelliteService",
    ),
    "AssignAction": (
        "AssignAction",
        "pydantic2_schemaorg.AssignAction",
        "AssignAction",
    ),
    "Brand": ("Brand", "pydantic2_schemaorg.Brand", "Brand"),
    "ReplaceAction": (
        "ReplaceAction",
        "pydantic2_schemaorg.ReplaceAction",
        "ReplaceAction",
    ),
    "EventMovedOnline": (
        "EventMovedOnline",
        "pydantic2_schemaorg.EventMovedOnline",
        "EventMovedOnline",
    ),
    "Nonprofit501c14": (
        "Nonprofit501c14",
        "pydantic2_schemaorg.Nonprofit501c14",
        "Nonprofit501c14",
    ),
    "RadioStation": (
        "RadioStation",
        "pydantic2_schemaorg.RadioStation",
        "RadioStation",
    ),
    "EventSeries": ("EventSeries", "pydantic2_schemaorg.EventSeries", "EventSeries"),
    "RentAction": ("RentAction", "pydantic2_schemaorg.RentAction", "RentAction"),
    "TVEpisode": ("TVEpisode", "pydantic2_schemaorg.TVEpisode", "TVEpisode"),
    "AudiobookFormat": (
        "AudiobookFormat",
        "pydantic2_schemaorg.AudiobookFormat",
        "AudiobookFormat",
    ),
    "HomeGoodsStore": (
        "HomeGoodsStore",
        "pydantic2_schemaorg.HomeGoodsStore",
        "HomeGoodsStore",
    ),
    "KeepProduct": ("KeepProduct", "pydantic2_schemaorg.KeepProduct", "KeepProduct"),
    "ItemListUnordered": (
        "ItemListUnordered",
        "pydantic2_schemaorg.ItemListUnordered",
        "ItemListUnordered",
    ),
    "True_": ("True_", "pydantic2_schemaorg.True_", "True_"),
    "DigitalDocumentPermission": (
        "DigitalDocumentPermission",
        "pydantic2_schemaorg.DigitalDocumentPermission",
        "DigitalDocumentPermission",
    ),
    "MovieTheater": (
        "MovieTheater",
        "pydantic2_schemaorg.MovieTheater",
        "MovieTheater",
    ),
    "SizeSystemImperial": (
        "SizeSystemImperial",
        "pydantic2_schemaorg.SizeSystemImperial",
        "SizeSystemImperial",
    ),
    "False_": ("False_", "pydantic2_schemaorg.False_", "False_"),
    "FurnitureStore": (
        "FurnitureStore",
        "pydantic2_schemaorg.FurnitureStore",
        "FurnitureStore",
    ),
    "OrderPaymentDue": (
        "OrderPaymentDue",
        "pydantic2_schemaorg.OrderPaymentDue",
        "OrderPaymentDue",
    ),
    "AutoWash": ("AutoWash", "pydantic2_schemaorg.AutoWash", "AutoWash"),
    "Answer": ("Answer", "pydantic2_schemaorg.Answer", "Answer"),
    "DamagedCondition": (
        "DamagedCondition",
        "pydantic2_schemaorg.DamagedCondition",
        "DamagedCondition",
    ),
    "NonprofitANBI": (
        "NonprofitANBI",
        "pydantic2_schemaorg.NonprofitANBI",
        "NonprofitANBI",
    ),
    "HowItWorksHealthAspect": (
        "HowItWorksHealthAspect",
        "pydantic2_schemaorg.HowItWorksHealthAspect",
        "HowItWorksHealthAspect",
    ),
    "MadeToOrder": ("MadeToOrder", "pydantic2_schemaorg.MadeToOrder", "MadeToOrder"),
    "RadioBroadcastService": (
        "RadioBroadcastService",
        "pydantic2_schemaorg.RadioBroadcastService",
        "RadioBroadcastService",
    ),
    "WPSideBar": ("WPSideBar", "pydantic2_schemaorg.WPSideBar", "WPSideBar"),
    "PodcastSeason": (
        "PodcastSeason",
        "pydantic2_schemaorg.PodcastSeason",
        "PodcastSeason",
    ),
    "CompilationAlbum": (
        "CompilationAlbum",
        "pydantic2_schemaorg.CompilationAlbum",
        "CompilationAlbum",
    ),
    "DislikeAction": (
        "DislikeAction",
        "pydantic2_schemaorg.DislikeAction",
        "DislikeAction",
    ),
    "NewsMediaOrganization": (
        "NewsMediaOrganization",
        "pydantic2_schemaorg.NewsMediaOrganization",
        "NewsMediaOrganization",
    ),
    "Volcano": ("Volcano", "pydantic2_schemaorg.Volcano", "Volcano"),
    "EventCancelled": (
        "EventCancelled",
        "pydantic2_schemaorg.EventCancelled",
        "EventCancelled",
    ),
    "FailedActionStatus": (
        "FailedActionStatus",
        "pydantic2_schemaorg.FailedActionStatus",
        "FailedActionStatus",
    ),
    "OpeningHoursSpecification": (
        "OpeningHoursSpecification",
        "pydantic2_schemaorg.OpeningHoursSpecification",
        "OpeningHoursSpecification",
    ),
    "StadiumOrArena": (
        "StadiumOrArena",
        "pydantic2_schemaorg.StadiumOrArena",
        "StadiumOrArena",
    ),
    "DemoAlbum": ("DemoAlbum", "pydantic2_schemaorg.DemoAlbum", "DemoAlbum"),
    "Distance": ("Distance", "pydantic2_schemaorg.Distance", "Distance"),
    "ArriveAction": (
        "ArriveAction",
        "pydantic2_schemaorg.ArriveAction",
        "ArriveAction",
    ),
    "UnincorporatedAssociationCharity": (
        "UnincorporatedAssociationCharity",
        "pydantic2_schemaorg.UnincorporatedAssociationCharity",
        "UnincorporatedAssociationCharity",
    ),
    "HousePainter": (
        "HousePainter",
        "pydantic2_schemaorg.HousePainter",
        "HousePainter",
    ),
    "ConstraintNode": (
        "ConstraintNode",
        "pydantic2_schemaorg.ConstraintNode",
        "ConstraintNode",
    ),
    "CaseSeries": ("CaseSeries", "pydantic2_schemaorg.CaseSeries", "CaseSeries"),
    "GolfCourse": ("GolfCourse", "pydantic2_schemaorg.GolfCourse", "GolfCourse"),
    "Menu": ("Menu", "pydantic2_schemaorg.Menu", "Menu"),
    "Nonprofit501c18": (
        "Nonprofit501c18",
        "pydantic2_schemaorg.Nonprofit501c18",
        "Nonprofit501c18",
    ),
    "PostOffice": ("PostOffice", "pydantic2_schemaorg.PostOffice", "PostOffice"),
    "Discontinued": (
        "Discontinued",
        "pydantic2_schemaorg.Discontinued",
        "Discontinued",
    ),
    "SelfStorage": ("SelfStorage", "pydantic2_schemaorg.SelfStorage", "SelfStorage"),
    "ComicSeries": ("ComicSeries", "pydantic2_schemaorg.ComicSeries", "ComicSeries"),
    "Recruiting": ("Recruiting", "pydantic2_schemaorg.Recruiting", "Recruiting"),
    "OutletStore": ("OutletStore", "pydantic2_schemaorg.OutletStore", "OutletStore"),
    "Nonprofit501d": (
        "Nonprofit501d",
        "pydantic2_schemaorg.Nonprofit501d",
        "Nonprofit501d",
    ),
    "LibrarySystem": (
        "LibrarySystem",
        "pydantic2_schemaorg.LibrarySystem",
        "LibrarySystem",
    ),
    "LakeBodyOfWater": (
        "LakeBodyOfWater",
        "pydantic2_schemaorg.LakeBodyOfWater",
        "LakeBodyOfWater",
    ),
    "TVSeries": ("TVSeries", "pydantic2_schemaorg.TVSeries", "TVSeries"),
    "BackgroundNewsArticle": (
        "BackgroundNewsArticle",
        "pydantic2_schemaorg.BackgroundNewsArticle",
        "BackgroundNewsArticle",
    ),
    "ElectronicsStore": (
        "ElectronicsStore",
        "pydantic2_schemaorg.ElectronicsStore",
        "ElectronicsStore",
    ),
    "ItemPage": ("ItemPage", "pydantic2_schemaorg.ItemPage", "ItemPage"),
    "Nonprofit501c27": (
        "Nonprofit501c27",
        "pydantic2_schemaorg.Nonprofit501c27",
        "Nonprofit501c27",
    ),
    "TattooParlor": (
        "TattooParlor",
        "pydantic2_schemaorg.TattooParlor",
        "TattooParlor",
    ),
    "WeaponConsideration": (
        "WeaponConsideration",
        "pydantic2_schemaorg.WeaponConsideration",
        "WeaponConsideration",
    ),
    "ReturnFeesCustomerResponsibility": (
        "ReturnFeesCustomerResponsibility",
        "pydantic2_schemaorg.ReturnFeesCustomerResponsibility",
        "ReturnFeesCustomerResponsibility",
    ),
    "VeterinaryCare": (
        "VeterinaryCare",
        "pydantic2_schemaorg.VeterinaryCare",
        "VeterinaryCare",
    ),
    "Hostel": ("Hostel", "pydantic2_schemaorg.Hostel", "Hostel"),
    "AgreeAction": ("AgreeAction", "pydantic2_schemaorg.AgreeAction", "AgreeAction"),
    "UsedCondition": (
        "UsedCondition",
        "pydantic2_schemaorg.UsedCondition",
        "UsedCondition",
    ),
    "ExchangeRateSpecification": (
        "ExchangeRateSpecification",
        "pydantic2_schemaorg.ExchangeRateSpecification",
        "ExchangeRateSpecification",
    ),
    "DrugCost": ("DrugCost", "pydantic2_schemaorg.DrugCost", "DrugCost"),
    "LinkRole": ("LinkRole", "pydantic2_schemaorg.LinkRole", "LinkRole"),
    "RsvpResponseNo": (
        "RsvpResponseNo",
        "pydantic2_schemaorg.RsvpResponseNo",
        "RsvpResponseNo",
    ),
    "MarryAction": ("MarryAction", "pydantic2_schemaorg.MarryAction", "MarryAction"),
    "MusicAlbum": ("MusicAlbum", "pydantic2_schemaorg.MusicAlbum", "MusicAlbum"),
    "Abdomen": ("Abdomen", "pydantic2_schemaorg.Abdomen", "Abdomen"),
    "MinimumAdvertisedPrice": (
        "MinimumAdvertisedPrice",
        "pydantic2_schemaorg.MinimumAdvertisedPrice",
        "MinimumAdvertisedPrice",
    ),
    "BankOrCreditUnion": (
        "BankOrCreditUnion",
        "pydantic2_schemaorg.BankOrCreditUnion",
        "BankOrCreditUnion",
    ),
    "MediaSubscription": (
        "MediaSubscription",
        "pydantic2_schemaorg.MediaSubscription",
        "MediaSubscription",
    ),
    "CommunityHealth": (
        "CommunityHealth",
        "pydantic2_schemaorg.CommunityHealth",
        "CommunityHealth",
    ),
    "Nonprofit501c1": (
        "Nonprofit501c1",
        "pydantic2_schemaorg.Nonprofit501c1",
        "Nonprofit501c1",
    ),
    "Aquarium": ("Aquarium", "pydantic2_schemaorg.Aquarium", "Aquarium"),
    "PreOrderAction": (
        "PreOrderAction",
        "pydantic2_schemaorg.PreOrderAction",
        "PreOrderAction",
    ),
    "ReadAction": ("ReadAction", "pydantic2_schemaorg.ReadAction", "ReadAction"),
    "BoatReservation": (
        "BoatReservation",
        "pydantic2_schemaorg.BoatReservation",
        "BoatReservation",
    ),
    "OTC": ("OTC", "pydantic2_schemaorg.OTC", "OTC"),
    "Painting": ("Painting", "pydantic2_schemaorg.Painting", "Painting"),
    "BoatTerminal": (
        "BoatTerminal",
        "pydantic2_schemaorg.BoatTerminal",
        "BoatTerminal",
    ),
    "Order": ("Order", "pydantic2_schemaorg.Order", "Order"),
    "MusicVenue": ("MusicVenue", "pydantic2_schemaorg.MusicVenue", "MusicVenue"),
    "FullGameAvailability": (
        "FullGameAvailability",
        "pydantic2_schemaorg.FullGameAvailability",
        "FullGameAvailability",
    ),
    "OwnershipInfo": (
        "OwnershipInfo",
        "pydantic2_schemaorg.OwnershipInfo",
        "OwnershipInfo",
    ),
    "SuperficialAnatomy": (
        "SuperficialAnatomy",
        "pydantic2_schemaorg.SuperficialAnatomy",
        "SuperficialAnatomy",
    ),
    "ComedyClub": ("ComedyClub", "pydantic2_schemaorg.ComedyClub", "ComedyClub"),
    "StatisticalVariable": (
        "StatisticalVariable",
        "pydantic2_schemaorg.StatisticalVariable",
        "StatisticalVariable",
    ),
    "EUEnergyEfficiencyCategoryB": (
        "EUEnergyEfficiencyCategoryB",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryB",
        "EUEnergyEfficiencyCategoryB",
    ),
    "EngineSpecification": (
        "EngineSpecification",
        "pydantic2_schemaorg.EngineSpecification",
        "EngineSpecification",
    ),
    "DrinkAction": ("DrinkAction", "pydantic2_schemaorg.DrinkAction", "DrinkAction"),
    "LandmarksOrHistoricalBuildings": (
        "LandmarksOrHistoricalBuildings",
        "pydantic2_schemaorg.LandmarksOrHistoricalBuildings",
        "LandmarksOrHistoricalBuildings",
    ),
    "AnatomicalSystem": (
        "AnatomicalSystem",
        "pydantic2_schemaorg.AnatomicalSystem",
        "AnatomicalSystem",
    ),
    "BusOrCoach": ("BusOrCoach", "pydantic2_schemaorg.BusOrCoach", "BusOrCoach"),
    "BusStop": ("BusStop", "pydantic2_schemaorg.BusStop", "BusStop"),
    "DataDownload": (
        "DataDownload",
        "pydantic2_schemaorg.DataDownload",
        "DataDownload",
    ),
    "OpinionNewsArticle": (
        "OpinionNewsArticle",
        "pydantic2_schemaorg.OpinionNewsArticle",
        "OpinionNewsArticle",
    ),
    "FloorPlan": ("FloorPlan", "pydantic2_schemaorg.FloorPlan", "FloorPlan"),
    "TierBenefitLoyaltyReturns": (
        "TierBenefitLoyaltyReturns",
        "pydantic2_schemaorg.TierBenefitLoyaltyReturns",
        "TierBenefitLoyaltyReturns",
    ),
    "ReportedDoseSchedule": (
        "ReportedDoseSchedule",
        "pydantic2_schemaorg.ReportedDoseSchedule",
        "ReportedDoseSchedule",
    ),
    "Balance": ("Balance", "pydantic2_schemaorg.Balance", "Balance"),
    "MusicRecording": (
        "MusicRecording",
        "pydantic2_schemaorg.MusicRecording",
        "MusicRecording",
    ),
    "WearableSizeSystemEN13402": (
        "WearableSizeSystemEN13402",
        "pydantic2_schemaorg.WearableSizeSystemEN13402",
        "WearableSizeSystemEN13402",
    ),
    "PlasticSurgery": (
        "PlasticSurgery",
        "pydantic2_schemaorg.PlasticSurgery",
        "PlasticSurgery",
    ),
    "Eye": ("Eye", "pydantic2_schemaorg.Eye", "Eye"),
    "Gastroenterologic": (
        "Gastroenterologic",
        "pydantic2_schemaorg.Gastroenterologic",
        "Gastroenterologic",
    ),
    "Date": ("Date", "pydantic2_schemaorg.Date", "Date"),
    "EBook": ("EBook", "pydantic2_schemaorg.EBook", "EBook"),
    "UserDownloads": (
        "UserDownloads",
        "pydantic2_schemaorg.UserDownloads",
        "UserDownloads",
    ),
    "Retail": ("Retail", "pydantic2_schemaorg.Retail", "Retail"),
    "LegislationObject": (
        "LegislationObject",
        "pydantic2_schemaorg.LegislationObject",
        "LegislationObject",
    ),
    "RejectAction": (
        "RejectAction",
        "pydantic2_schemaorg.RejectAction",
        "RejectAction",
    ),
    "Mosque": ("Mosque", "pydantic2_schemaorg.Mosque", "Mosque"),
    "Oncologic": ("Oncologic", "pydantic2_schemaorg.Oncologic", "Oncologic"),
    "ExhibitionEvent": (
        "ExhibitionEvent",
        "pydantic2_schemaorg.ExhibitionEvent",
        "ExhibitionEvent",
    ),
    "BasicIncome": ("BasicIncome", "pydantic2_schemaorg.BasicIncome", "BasicIncome"),
    "EPRelease": ("EPRelease", "pydantic2_schemaorg.EPRelease", "EPRelease"),
    "CertificationActive": (
        "CertificationActive",
        "pydantic2_schemaorg.CertificationActive",
        "CertificationActive",
    ),
    "SeaBodyOfWater": (
        "SeaBodyOfWater",
        "pydantic2_schemaorg.SeaBodyOfWater",
        "SeaBodyOfWater",
    ),
    "Attorney": ("Attorney", "pydantic2_schemaorg.Attorney", "Attorney"),
    "DefinitiveLegalValue": (
        "DefinitiveLegalValue",
        "pydantic2_schemaorg.DefinitiveLegalValue",
        "DefinitiveLegalValue",
    ),
    "BodyMeasurementHand": (
        "BodyMeasurementHand",
        "pydantic2_schemaorg.BodyMeasurementHand",
        "BodyMeasurementHand",
    ),
    "Mountain": ("Mountain", "pydantic2_schemaorg.Mountain", "Mountain"),
    "FDAcategoryD": (
        "FDAcategoryD",
        "pydantic2_schemaorg.FDAcategoryD",
        "FDAcategoryD",
    ),
    "GroupBoardingPolicy": (
        "GroupBoardingPolicy",
        "pydantic2_schemaorg.GroupBoardingPolicy",
        "GroupBoardingPolicy",
    ),
    "NightClub": ("NightClub", "pydantic2_schemaorg.NightClub", "NightClub"),
    "ExerciseAction": (
        "ExerciseAction",
        "pydantic2_schemaorg.ExerciseAction",
        "ExerciseAction",
    ),
    "GettingAccessHealthAspect": (
        "GettingAccessHealthAspect",
        "pydantic2_schemaorg.GettingAccessHealthAspect",
        "GettingAccessHealthAspect",
    ),
    "Toxicologic": ("Toxicologic", "pydantic2_schemaorg.Toxicologic", "Toxicologic"),
    "Osteopathic": ("Osteopathic", "pydantic2_schemaorg.Osteopathic", "Osteopathic"),
    "BodyMeasurementArm": (
        "BodyMeasurementArm",
        "pydantic2_schemaorg.BodyMeasurementArm",
        "BodyMeasurementArm",
    ),
    "PartiallyInForce": (
        "PartiallyInForce",
        "pydantic2_schemaorg.PartiallyInForce",
        "PartiallyInForce",
    ),
    "MultiPlayer": ("MultiPlayer", "pydantic2_schemaorg.MultiPlayer", "MultiPlayer"),
    "NotInForce": ("NotInForce", "pydantic2_schemaorg.NotInForce", "NotInForce"),
    "WearableSizeGroupRegular": (
        "WearableSizeGroupRegular",
        "pydantic2_schemaorg.WearableSizeGroupRegular",
        "WearableSizeGroupRegular",
    ),
    "HyperToc": ("HyperToc", "pydantic2_schemaorg.HyperToc", "HyperToc"),
    "CheckAction": ("CheckAction", "pydantic2_schemaorg.CheckAction", "CheckAction"),
    "Flexibility": ("Flexibility", "pydantic2_schemaorg.Flexibility", "Flexibility"),
    "ContactPage": ("ContactPage", "pydantic2_schemaorg.ContactPage", "ContactPage"),
    "RsvpAction": ("RsvpAction", "pydantic2_schemaorg.RsvpAction", "RsvpAction"),
    "ClaimReview": ("ClaimReview", "pydantic2_schemaorg.ClaimReview", "ClaimReview"),
    "BodyMeasurementHeight": (
        "BodyMeasurementHeight",
        "pydantic2_schemaorg.BodyMeasurementHeight",
        "BodyMeasurementHeight",
    ),
    "OccupationalExperienceRequirements": (
        "OccupationalExperienceRequirements",
        "pydantic2_schemaorg.OccupationalExperienceRequirements",
        "OccupationalExperienceRequirements",
    ),
    "MovingCompany": (
        "MovingCompany",
        "pydantic2_schemaorg.MovingCompany",
        "MovingCompany",
    ),
    "PharmacySpecialty": (
        "PharmacySpecialty",
        "pydantic2_schemaorg.PharmacySpecialty",
        "PharmacySpecialty",
    ),
    "WholesaleStore": (
        "WholesaleStore",
        "pydantic2_schemaorg.WholesaleStore",
        "WholesaleStore",
    ),
    "EUEnergyEfficiencyCategoryF": (
        "EUEnergyEfficiencyCategoryF",
        "pydantic2_schemaorg.EUEnergyEfficiencyCategoryF",
        "EUEnergyEfficiencyCategoryF",
    ),
    "ParentAudience": (
        "ParentAudience",
        "pydantic2_schemaorg.ParentAudience",
        "ParentAudience",
    ),
    "Museum": ("Museum", "pydantic2_schemaorg.Museum", "Museum"),
    "OnSitePickup": (
        "OnSitePickup",
        "pydantic2_schemaorg.OnSitePickup",
        "OnSitePickup",
    ),
    "URL": ("URL", "pydantic2_schemaorg.URL", "URL"),
    "BeautySalon": ("BeautySalon", "pydantic2_schemaorg.BeautySalon", "BeautySalon"),
    "Joint": ("Joint", "pydantic2_schemaorg.Joint", "Joint"),
    "RsvpResponseYes": (
        "RsvpResponseYes",
        "pydantic2_schemaorg.RsvpResponseYes",
        "RsvpResponseYes",
    ),
    "NegativeFilmDigitalSource": (
        "NegativeFilmDigitalSource",
        "pydantic2_schemaorg.NegativeFilmDigitalSource",
        "NegativeFilmDigitalSource",
    ),
    "ProductCollection": (
        "ProductCollection",
        "pydantic2_schemaorg.ProductCollection",
        "ProductCollection",
    ),
    "Zoo": ("Zoo", "pydantic2_schemaorg.Zoo", "Zoo"),
    "FDAcategoryC": (
        "FDAcategoryC",
        "pydantic2_schemaorg.FDAcategoryC",
        "FDAcategoryC",
    ),
    "PregnancyHealthAspect": (
        "PregnancyHealthAspect",
        "pydantic2_schemaorg.PregnancyHealthAspect",
        "PregnancyHealthAspect",
    ),
    "BroadcastFrequencySpecification": (
        "BroadcastFrequencySpecification",
        "pydantic2_schemaorg.BroadcastFrequencySpecification",
        "BroadcastFrequencySpecification",
    ),
    "BuddhistTemple": (
        "BuddhistTemple",
        "pydantic2_schemaorg.BuddhistTemple",
        "BuddhistTemple",
    ),
    "CT": ("CT", "pydantic2_schemaorg.CT", "CT"),
    "Gene": ("Gene", "pydantic2_schemaorg.Gene", "Gene"),
    "CancelAction": (
        "CancelAction",
        "pydantic2_schemaorg.CancelAction",
        "CancelAction",
    ),
    "Season": ("Season", "pydantic2_schemaorg.Season", "Season"),
    "Terminated": ("Terminated", "pydantic2_schemaorg.Terminated", "Terminated"),
    "Neuro": ("Neuro", "pydantic2_schemaorg.Neuro", "Neuro"),
    "MedicalGuidelineRecommendation": (
        "MedicalGuidelineRecommendation",
        "pydantic2_schemaorg.MedicalGuidelineRecommendation",
        "MedicalGuidelineRecommendation",
    ),
    "WPHeader": ("WPHeader", "pydantic2_schemaorg.WPHeader", "WPHeader"),
    "ParkingMap": ("ParkingMap", "pydantic2_schemaorg.ParkingMap", "ParkingMap"),
    "Dentist": ("Dentist", "pydantic2_schemaorg.Dentist", "Dentist"),
    "TouristAttraction": (
        "TouristAttraction",
        "pydantic2_schemaorg.TouristAttraction",
        "TouristAttraction",
    ),
    "Poster": ("Poster", "pydantic2_schemaorg.Poster", "Poster"),
    "Park": ("Park", "pydantic2_schemaorg.Park", "Park"),
    "Psychiatric": ("Psychiatric", "pydantic2_schemaorg.Psychiatric", "Psychiatric"),
    "NonprofitSBBI": (
        "NonprofitSBBI",
        "pydantic2_schemaorg.NonprofitSBBI",
        "NonprofitSBBI",
    ),
    "EventPostponed": (
        "EventPostponed",
        "pydantic2_schemaorg.EventPostponed",
        "EventPostponed",
    ),
    "ReservationCancelled": (
        "ReservationCancelled",
        "pydantic2_schemaorg.ReservationCancelled",
        "ReservationCancelled",
    ),
    "Ayurvedic": ("Ayurvedic", "pydantic2_schemaorg.Ayurvedic", "Ayurvedic"),
    "EducationEvent": (
        "EducationEvent",
        "pydantic2_schemaorg.EducationEvent",
        "EducationEvent",
    ),
}
