"use strict";(self.webpackChunkjupyter_drives=self.webpackChunkjupyter_drives||[]).push([[707],{707:(e,t,a)=>{a.r(t),a.d(t,{default:()=>A});var i=a(161),r=a(101),n=a(458),s=a(594),l=a(338),o=a(960);const d=new o.LabIcon({name:"jupyter-drives:drive-browser",svgstr:'<svg \n    xmlns="http://www.w3.org/2000/svg"\n    height="34" viewBox="0 -960 960 960"\n    width="34"\n    >\n    <path d="M260-160q-91 0-155.5-63T40-377q0-78 47-139t123-78q25-92 100-149t170-57q117 0 198.5 81.5T760-520q69 8 114.5 59.5T920-340q0 75-52.5 127.5T740-160H260Z"\n    fill = "#616161"\n    />\n</svg>'});var c,m=a(602),u=a(358),h=a(597),p=a(262);!function(e){e.openDrivesDialog="drives:open-drives-dialog",e.openPath="drives:open-path",e.toggleBrowser="drives:toggle-main",e.launcher="launcher:create"}(c||(c={}));const v=new p.Token("jupyter-drives:drives-list-provider");function y(e,t){let a="text",i="text/plain",r="text";return t[e]&&(a=t[e].fileType,i=t[e].fileMimeTypes[0],r=t[e].fileFormat),".ipynb"===e&&(r="text"),[a,i,r]}function w(e,t){return t.filter((t=>t.name===(-1!==e.indexOf("/")?e.substring(0,e.indexOf("/")):e)))[0]}function f(e){return-1!==e.indexOf("/")?e.substring(e.indexOf("/")+1):""}class g extends u.ServerConnection.ResponseError{constructor(e,t=`Invalid response: ${e.status} ${e.statusText}`,a="",i={}){super(e,t),this.traceback=a,this._json=null!=i?i:{}}get json(){return this._json}}async function b(e="",t="GET",a=null,i="jupyter-drives"){const r=u.ServerConnection.makeSettings(),n=h.URLExt.join(r.baseUrl,i,e),s={method:t,body:a?JSON.stringify(a):void 0};let l;try{l=await u.ServerConnection.makeRequest(n,s,r)}catch(e){throw new u.ServerConnection.NetworkError(e)}let o=await l.text(),d=!1;if(o.length>0)try{o=JSON.parse(o),d=!0}catch(e){console.log("Not a JSON response body.",l)}if(!l.ok){if(d){const{message:e,traceback:t,...a}=o;throw new g(l,e||`Invalid response: ${l.status} ${l.statusText}`,t||"",a)}throw new g(l,o)}return o}let E={name:"",path:"",last_modified:"",created:"",content:null,format:null,mimetype:"",size:0,writable:!0,type:""};async function _(e,t){const a=await b("drives/"+e+"/"+t.path,"GET"),i=void 0!==a.data.length;if(a.data)if(i){const i={};a.data.forEach((a=>{var r;if(a.path!==t.path&&a.path!==t.path+"/"){const n=a.path.replace(t.path?t.path+"/":"","").split("/")[0],[s,l,o]=y(h.PathExt.extname(h.PathExt.basename(n)),t.registeredFileTypes);i[n]=null!==(r=i[n])&&void 0!==r?r:{name:n,path:t.path?h.PathExt.join(e,t.path,n):h.PathExt.join(e,n),last_modified:a.last_modified,created:"",content:n.split(".")[1]?null:[],format:o,mimetype:l,size:a.size,writable:!0,type:s}}})),E={name:t.path?h.PathExt.basename(t.path):e,path:h.PathExt.join(e,t.path?t.path+"/":""),last_modified:"",created:"",content:Object.values(i),format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"}}else{const[i,r,n]=y(h.PathExt.extname(h.PathExt.basename(t.path)),t.registeredFileTypes);E={name:h.PathExt.basename(t.path),path:h.PathExt.join(e,a.data.path),last_modified:a.data.last_modified,created:"",content:a.data.content,format:n,mimetype:r,size:a.data.size,writable:!0,type:i}}return E}var x;!function(e){e.renameSingleObject=async function(e,t,a){return await b("drives/"+e+"/"+t,"PATCH",{new_path:a})},e.copySingleObject=async function(e,t,a,i){return await b("drives/"+e+"/"+a,"PUT",{to_path:i,to_drive:t})}}(x||(x={}));let T={name:"",path:"",last_modified:"",created:"",content:[],format:null,mimetype:"",size:0,writable:!0,type:""};class F{constructor(e={}){var t,a;this._drivesList=[],this._name="",this._provider="",this._baseUrl="",this._region="",this._creationDate="",this._fileChanged=new m.Signal(this),this._isDisposed=!1,this._disposed=new m.Signal(this),this._registeredFileTypes={},this._serverSettings=u.ServerConnection.makeSettings(),this._name=null!==(t=e.name)&&void 0!==t?t:"",this._drivesList=null!==(a=e.drivesList)&&void 0!==a?a:[]}get drivesList(){return this._drivesList}set drivesList(e){this._drivesList=e}get baseUrl(){return this._baseUrl}set baseUrl(e){this._baseUrl=e}get name(){return this._name}set name(e){this._name=e}get provider(){return this._provider}set provider(e){this._provider=e}get region(){return this._region}set region(e){this._region=e}get creationDate(){return this._creationDate}set creationDate(e){this._creationDate=e}get serverSettings(){return this._serverSettings}get registeredFileTypes(){return this._registeredFileTypes}set registeredFileTypes(e){this._registeredFileTypes=e}get fileChanged(){return this._fileChanged}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}dispose(){this.isDisposed||(this._isDisposed=!0,this._disposed.emit(),m.Signal.clearData(this))}async getDownloadUrl(e){let t="";if(""!==e){const a=w(e,this._drivesList);t=await(async(e,t)=>(await b("drives/"+e+"/"+t.path,"PUT",{presigned_link:!0})).data.link)(a.name,{path:f(e)})}else console.warn("Operation not supported.");return t}async get(e,t){if(""!==e){const t=w(e,this._drivesList);if(!1===t.mounted)try{await async function(e,t){const a={drive_name:e,provider:t.provider};return await b("drives","POST",a)}(e,{provider:t.provider}),this._drivesList.filter((t=>t.name===e))[0].mounted=!0}catch(e){}T=await _(t.name,{path:f(e),registeredFileTypes:this._registeredFileTypes})}else{const e=[];for(const t of this._drivesList)e.push({name:t.name,path:t.name,last_modified:"",created:t.creationDate,content:[],format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"});T={name:this._name,path:this._name,last_modified:"",created:"",content:e,format:"json",mimetype:"",size:void 0,writable:!0,type:"directory"}}return u.Contents.validateContentsModel(T),T}async newUntitled(e={}){var t;const a=null!==(t=e.path)&&void 0!==t?t:"";if(""!==a){const t=w(a,this._drivesList),i=-1!==a.indexOf("/")?a.substring(a.indexOf("/")+1):"",r=await _(t.name,{path:i,registeredFileTypes:this._registeredFileTypes});if(void 0!==e.type){const a=this.incrementUntitledName(r,e);T=await async function(e,t){const a=t.path?h.PathExt.join(t.path,t.name):t.name,i=await b("drives/"+e+"/"+a,"POST",{type:t.type}),[r,n,s]=y(h.PathExt.extname(t.name),t.registeredFileTypes);return E={name:t.name,path:h.PathExt.join(e,a),last_modified:i.data.last_modified,created:i.data.last_modified,content:i.data.content,format:s,mimetype:n,size:i.data.size,writable:!0,type:r},E}(t.name,{name:a,path:i,type:e.type,registeredFileTypes:this._registeredFileTypes})}else console.warn("Type of new element is undefined")}else console.warn("Operation not supported.");return u.Contents.validateContentsModel(T),this._fileChanged.emit({type:"new",oldValue:null,newValue:T}),T}incrementUntitledName(e,t){const a=e.content;let i="",r=0,n=0,s=0;return"notebook"===t.type&&(t.ext="ipynb"),a.forEach((e=>{void 0!==t.ext?e.name.includes("untitled")&&e.name.includes(".txt")?r+=1:e.name.includes("Untitled")&&e.name.includes(".ipynb")&&(s+=1):e.name.includes("Untitled Folder")&&(n+=1)})),"txt"===t.ext&&(i=0===r?"untitled."+t.ext:"untitled"+r+"."+t.ext),"ipynb"===t.ext?i=0===s?"Untitled."+t.ext:"Untitled"+s+"."+t.ext:"directory"===t.type&&(i=0===n?"Untitled Folder":"Untitled Folder "+n),i}async delete(e){if(""!==e){const t=w(e,this._drivesList);await async function(e,t){await b("drives/"+e+"/"+t.path,"DELETE")}(t.name,{path:f(e)})}else console.warn("Operation not supported.");this._fileChanged.emit({type:"delete",oldValue:{path:e},newValue:null})}async rename(e,t,a={}){if(""!==e){const a=w(e,this._drivesList),i=f(e),r=f(t);let n=h.PathExt.basename(r);try{await async function(e,t){await b("drives/"+e+"/"+t.path,"HEAD")}(a.name,{path:r}),n=await this.incrementName(r,a.name)}catch(e){}finally{T=await async function(e,t){const a=t.newPath.substring(0,t.newPath.lastIndexOf("/")+1)+t.newFileName,[i,r,n]=y(h.PathExt.extname(h.PathExt.basename(t.newFileName)),t.registeredFileTypes),s=await b("drives/"+e+"/"+t.path,"GET");void 0!==s.data.length&&0!==s.data.length&&await Promise.all(s.data.map((async i=>{const r=i.path.substring(t.path.length);x.renameSingleObject(e,h.PathExt.join(t.path,r),h.PathExt.join(a,r))})));try{const s=await x.renameSingleObject(e,t.path,a);E={name:t.newFileName,path:h.PathExt.join(e,a),last_modified:s.data.last_modified,created:"",content:""!==h.PathExt.extname(t.newFileName)?null:[],format:n,mimetype:r,size:s.data.size,writable:!0,type:i}}catch(e){}return E}(a.name,{path:i,newPath:r,newFileName:n,registeredFileTypes:this._registeredFileTypes})}}else console.warn("Operation not supported.");return u.Contents.validateContentsModel(T),this._fileChanged.emit({type:"rename",oldValue:{path:e},newValue:T}),T}async incrementName(e,t){let a="",i="";i=h.PathExt.basename(e),a=h.PathExt.extname(i),i=""!==a?i.split(".")[i.split(".").length-2]:i;const r=await(async(e,t,a)=>{let i={};t=t.substring(0,t.lastIndexOf("/"));const r=await b("drives/"+e+"/"+t,"GET");return r.data&&0!==r.data.length&&r.data.forEach((e=>{const r=e.path.replace(t?t+"/":"","").split("/")[0];r.substring(0,a.length+1).includes(a)&&(i[r]=1)})),Object.values(i).reduce(((e,t)=>e+t),0)})(t,e,i);let n=r?i+r:i;return n=""!==a?n+a:n,n}async save(e,t={}){if(""!==e){const a=w(e,this._drivesList);T=await async function(e,t){const[a,i,r]=y(h.PathExt.extname(h.PathExt.basename(t.path)),t.registeredFileTypes),n=await b("drives/"+e+"/"+t.path,"PUT",{content:t.param.content,options_format:t.param.format,content_format:r,content_type:a});return E={name:h.PathExt.basename(t.path),path:h.PathExt.join(e,t.path),last_modified:n.data.last_modified,created:n.data.last_modified,content:n.data.content,format:r,mimetype:i,size:n.data.size,writable:!0,type:a},E}(a.name,{path:f(e),param:t,registeredFileTypes:this._registeredFileTypes})}else console.warn("Operation not supported.");return u.Contents.validateContentsModel(T),this._fileChanged.emit({type:"save",oldValue:null,newValue:T}),T}async incrementCopyName(e,t,a){const i=h.PathExt.basename(e),r=""===h.PathExt.extname(i)?i+"-Copy":i.split(".")[0]+"-Copy."+i.split(".")[1],n=h.PathExt.join(t,r);return await this.incrementName(n,a)}async copy(e,t,a={}){if(""!==e){const a=w(e,this._drivesList),i=w(t,this._drivesList),r=f(e),n=f(t),s=await this.incrementCopyName(r,n,i.name);T=await async function(e,t){const a=h.PathExt.join(t.toPath,t.newFileName),[i,r,n]=y(h.PathExt.extname(h.PathExt.basename(t.newFileName)),t.registeredFileTypes),s=await b("drives/"+e+"/"+t.path,"GET");void 0!==s.data.length&&0!==s.data.length&&await Promise.all(s.data.map((async i=>{const r=i.path.substring(t.path.length);x.copySingleObject(e,t.toDrive,h.PathExt.join(t.path,r),h.PathExt.join(a,r))})));try{const s=await x.copySingleObject(e,t.toDrive,t.path,a);E={name:t.newFileName,path:h.PathExt.join(t.toDrive,a),last_modified:s.data.last_modified,created:"",content:""!==h.PathExt.extname(t.newFileName)?null:[],format:n,mimetype:r,size:s.data.size,writable:!0,type:i}}catch(e){}return E}(a.name,{path:r,toPath:n,newFileName:s,toDrive:i.name,registeredFileTypes:this._registeredFileTypes})}else console.warn("Operation not supported.");return this._fileChanged.emit({type:"new",oldValue:null,newValue:T}),u.Contents.validateContentsModel(T),T}createCheckpoint(e){return Promise.resolve({id:"",last_modified:""})}listCheckpoints(e){return Promise.resolve([])}restoreCheckpoint(e,t){return Promise.reject("Repository is read only")}deleteCheckpoint(e,t){return Promise.reject("Read only")}getRegisteredFileTypes(e){const t=e.docRegistry.fileTypes();for(const e of t)0===e.extensions.length&&(this._registeredFileTypes[""]={fileType:"directory",fileFormat:"json",fileMimeTypes:["text/directory"]}),e.extensions.forEach((t=>{var a;this._registeredFileTypes[t]||(this._registeredFileTypes[t]={fileType:e.name,fileMimeTypes:[...e.mimeTypes],fileFormat:null!==(a=e.fileFormat)&&void 0!==a?a:""})}))}}const D="DriveBrowser",P={id:"jupyter-drives:drives-list",description:"The drives list provider.",provides:v,activate:async e=>{let t=[];try{t=await async function(){return await b("drives","GET")}()}catch(e){console.log("Failed loading available drives list, with error: ",e)}return t}},C={id:"jupyter-drives:drives-file-browser",description:"The drive file browser factory provider.",autoStart:!0,requires:[r.IFileBrowserFactory,s.IToolbarWidgetRegistry,l.ISettingRegistry,n.ITranslator,v],optional:[i.IRouter,i.JupyterFrontEnd.ITreeResolver,i.ILabShell,i.ILayoutRestorer],activate:async(e,t,a,i,n,l,c,m,u,h)=>{console.log("JupyterLab extension jupyter-drives:drives-file-browser is activated!");const{commands:p}=e,v=new F({name:"s3",drivesList:l});e.serviceManager.contents.addDrive(v),v.getRegisteredFileTypes(e);const y=t.createFileBrowser("drivebrowser",{auto:!1,restore:!1,driveName:v.name});function w(e){!async function(e){await b("drives/config","POST",{new_limit:e})}(e.get("maxFilesListed").composite)}y.node.setAttribute("role","region"),y.node.setAttribute("aria-label","Drive Browser Section"),y.title.icon=d,y.title.caption="Drive File Browser",y.id="drive-file-browser",S.restoreBrowser(y,p,c,m,u),e.shell.add(y,"left",{rank:102,type:"File Browser"}),h&&h.add(y,"drive-file-browser"),a.addFactory(D,"uploader",(e=>new r.Uploader({model:e.model,translator:n}))),a.addFactory(D,"file-name-searcher",(e=>{const t=(0,o.FilenameSearcher)({updateFilter:(t,a)=>{e.model.setFilter((e=>t(e.name.toLowerCase())))},useFuzzyFilter:!0,placeholder:"Filter files by names",forceRefresh:!0});return t.addClass("jp-drive-browser-search-box"),t})),(0,s.setToolbar)(y,(0,s.createToolbarFactory)(a,i,D,C.id,n)),Promise.all([e.restored,i.load(C.id)]).then((([,e])=>{w(e),e.changed.connect(w)})).catch((e=>{console.error(`Something went wrong when reading the settings.\n${e}`)}))}};var S;!function(e){e.restoreBrowser=async function(e,t,a,i,r){const n="jp-mod-restoring";if(e.addClass(n),!a)return await e.model.restore(e.id),await e.model.refresh(),void e.removeClass(n);const s=async()=>{a.routed.disconnect(s);const l=await(null==i?void 0:i.paths);(null==l?void 0:l.file)||(null==l?void 0:l.browser)?(await e.model.restore(e.id,!1),l.file&&await t.execute(c.openPath,{path:l.file,dontShowBrowser:!0}),l.browser&&await t.execute(c.openPath,{path:l.browser,dontShowBrowser:!0})):(await e.model.restore(e.id),await e.model.refresh()),e.removeClass(n),(null==r?void 0:r.isEmpty("main"))&&t.execute("launcher:create")};a.routed.connect(s)}}(S||(S={}));var N=a(727),j=a(345),L=a(180);function O(e){return j.createElement("div",null,j.createElement("div",{className:"row"},j.createElement("div",{className:"column"},j.createElement(L.Search,{className:"drive-search-input",onInput:e.getValue})),j.createElement("div",{className:"column"}),j.createElement(L.Button,{className:"input-add-drive-button",onClick:()=>{e.updateSelectedDrives(e.value,e.isName)}},"add drive")))}function k(e){return j.createElement("div",{className:"drive-search-list"},j.createElement("div",{className:"row"},j.createElement("div",{className:"column"},j.createElement(L.Search,{className:"drive-search-input",onInput:e.filter})),j.createElement("div",{className:"column"})),e.filteredList.map(((t,a)=>j.createElement("li",{key:t},j.createElement("div",{className:"row"},j.createElement("div",{className:"column"},j.createElement("div",null,t," ")),j.createElement("div",{className:"column"},j.createElement(L.Button,{className:"search-add-drive-button",onClick:()=>{e.updateSelectedDrives(t,!0)}},"add drive")))))))}function I(e){return j.createElement("div",{className:"drive-data-grid"},j.createElement(L.DataGrid,{"grid-template-columns":"1f 1fr"},j.createElement(L.DataGridRow,{"row-type":"header"},j.createElement(L.DataGridCell,{className:"data-grid-cell","grid-column":"1"},j.createElement("b",null," name ")),j.createElement(L.DataGridCell,{className:"data-grid-cell","grid-column":"2"},j.createElement("b",null," url "))),e.drives.map(((e,t)=>j.createElement(L.DataGridRow,{key:e.name,"row-type":"default"},j.createElement(L.DataGridCell,{className:"data-grid-cell","grid-column":"1"},e.name),j.createElement(L.DataGridCell,{className:"data-grid-cell","grid-column":"2"},e.url))))))}function U(e){const[t,a]=(0,j.useState)(""),[i,r]=(0,j.useState)("");let n=[...e.model.selectedDrives];const[s,l]=(0,j.useState)(n),o=[];for(const t of e.model.availableDrives)""!==t.name&&o.push(t.name);const[d,c]=(0,j.useState)(o),m=(i,r)=>{let s;n=[...e.model.selectedDrives],r?s={name:i,url:""}:(i!==t&&a(i),s={name:"",url:t});const o=((e,t)=>{const a=[],i=[];let r=!1;return t.forEach((t=>{""!==e.name&&e.name===t.name?a.push(!0):a.push(!1),""!==e.url&&e.url===t.url?i.push(!0):i.push(!1)})),(a.includes(!0)||i.includes(!0))&&(r=!0),r})(s,n);!1===o?n.push(s):console.log("The selected drive is already in the list"),l(n),e.model.setSelectedDrives(n)};return j.createElement(j.Fragment,null,j.createElement("div",{className:"drive-list-manager"},j.createElement("div",null,j.createElement("h3",null," Select drive(s) to be added to your filebrowser ")),j.createElement("div",{className:"row"},j.createElement("div",{className:"column"},j.createElement("div",null," Enter a drive URL"),j.createElement(O,{isName:!1,value:t,getValue:e=>{a(e.target.value)},updateSelectedDrives:(e,t)=>m(e,t)}),j.createElement("div",null," Select drive(s) from list"),j.createElement(k,{isName:!0,value:i,filteredList:d,filter:e=>{const t=e.target.value;let i;i=[...o],i=i.filter((e=>-1!==e.toLowerCase().indexOf(t.toLowerCase()))),c(i),1===d.length&&""!==d[0]&&(r(d[0]),a(""))},updateSelectedDrives:(e,t)=>m(e,t)})),j.createElement("div",{className:"column"},j.createElement("div",{className:"jp-custom-datagrid"},j.createElement("label",null," Selected drives "),j.createElement("label",null," "),j.createElement(I,{drives:s}))))))}class R extends o.VDomModel{constructor(e,t){super(),this.availableDrives=e,this.selectedDrives=t}setSelectedDrives(e){this.selectedDrives=e}}class z extends o.VDomRenderer{constructor(e){super(e),this.model=e}render(){return j.createElement(j.Fragment,null,j.createElement(U,{model:this.model}))}}const B={id:"jupyter-drives:widget",description:"Open a dialog to select drives to be added in the filebrowser.",requires:[r.IFileBrowserFactory,n.ITranslator],autoStart:!0,activate:(e,t,a)=>{(0,N.addJupyterLabThemeChangeListener)();const{commands:i}=e,{tracker:r}=t,n=a.load("jupyter_drives"),l=new Map;let o=[{name:"CoconutDrive",url:"/coconut/url"}];const m=[{name:"CoconutDrive",url:"/coconut/url"},{name:"PearDrive",url:"/pear/url"},{name:"StrawberryDrive",url:"/strawberrydrive/url"},{name:"BlueberryDrive",url:"/blueberrydrive/url"},{name:"",url:"/mydrive/url"},{name:"RaspberryDrive",url:"/raspberrydrive/url"},{name:"PineAppleDrive",url:""},{name:"PomeloDrive",url:"/https://pomelodrive/url"},{name:"OrangeDrive",url:""},{name:"TomatoDrive",url:""},{name:"",url:"superDrive/url"},{name:"AvocadoDrive",url:""}];let u=l.get(o);i.addCommand(c.openDrivesDialog,{execute:e=>{const t=r.currentWidget;u?(o=u.selectedDrives,l.set(o,u)):(u=new R(m,o),l.set(o,u)),t&&u&&(0,s.showDialog)({body:new z(u),buttons:[s.Dialog.cancelButton()]})},icon:d.bindprops({stylesheet:"menuItem"}),caption:n.__("Add drives to filebrowser."),label:n.__("Add Drives To Filebrowser")})}};var M=a(771),V=a(53);const G={activate:function(e,t,a,i,r){const{commands:n,shell:l}=e,d=t.load("jupyter-drives"),m=new M.LauncherModel;if(n.addCommand(c.launcher,{label:d.__("New Launcher"),icon:e=>e.toolbar?o.addIcon:void 0,execute:e=>{var i,c;const u=null==r?void 0:r.tracker.currentWidget,h=null!==(c=null!==(i=e.cwd)&&void 0!==i?i:null==u?void 0:u.model.path)&&void 0!==c?c:"",p="launcher-"+q.id++,v=new M.Launcher({model:m,cwd:h,callback:e=>{(0,V.find)(l.widgets("main"),(t=>t===e))&&(l.add(e,"main",{ref:p}),v.dispose())},commands:n,translator:t});v.model=m,v.title.icon=o.launcherIcon,v.title.label=d.__("Launcher");const y=new s.MainAreaWidget({content:v});if(y.title.closable=!!Array.from(l.widgets("main")).length,y.id=p,l.add(y,"main",{activate:e.activate,ref:e.ref}),a&&a.layoutModified.connect((()=>{y.title.closable=Array.from(a.widgets("main")).length>1}),y),u){const e=e=>{v.cwd=e.path};u.model.pathChanged.connect(e),v.disposed.connect((()=>{u.model.pathChanged.disconnect(e)}))}return y}}),a){const t=null==r?void 0:r.tracker.currentWidget;Promise.all([e.restored,null==t?void 0:t.model.restored]).then((()=>{a.layoutModified.connect((()=>{a.isEmpty("main")&&n.execute(c.launcher)}))}))}return i&&i.addItem({command:c.launcher,category:d.__("Launcher")}),a&&(a.addButtonEnabled=!0,a.addRequested.connect(((e,t)=>{var a;const i=(null===(a=t.currentTitle)||void 0===a?void 0:a.owner.id)||t.titles[t.titles.length-1].owner.id;return n.execute(c.launcher,{ref:i})}))),m},id:"jupyter-drives:launcher-extension-plugin",description:"Provides the launcher tab service for the file browsers.",requires:[n.ITranslator],optional:[i.ILabShell,s.ICommandPalette,r.IFileBrowserFactory],provides:M.ILauncher,autoStart:!0};var q;!function(e){e.id=0}(q||(q={}));const A=[C,P,B,G]}}]);