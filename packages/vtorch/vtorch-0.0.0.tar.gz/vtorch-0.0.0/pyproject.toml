[project]
name = "vtorch"
version = "0.0.0"
description = "NLP research library, built on PyTorch."
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "attrs>=20.3.0",
    "clearml>=0.17.4",
    "fastprogress==0.1.18",
    "jsonpickle==1.5.1",
    "numpy==1.26.4",
    "optuna==2.10.0",
    "pandas<=2.2",
    "pickle5~=0.0.11",
    "plotly==5.3.1",
    "psutil>=5.8.0",
    "requests>=2.25.1",
    "setuptools>=53.0.0",
    "six~=1.15.0",
    "tokenizers>=0.11",
    "torch>=1.9.0",
    "tqdm>=4.46.1",
    "transformers>=4.17",
    "urllib3>=1.26.0",
]

authors = [
    { name = "YouScan Data Science team, NLP guild.", email = "ds@youscan.io" },
]


[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "pytest>=6.2.2",
    "vtorch",
]

[tool.uv.sources]
vtorch = { workspace = true }



[tool.semantic_release]
version_variables = [
    "vtorch/__init__.py:__version__"
]
version_toml = [
    "pyproject.toml:project.version"
]
commit_message = "v{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
branch = "(main|master)"
upload_to_PyPI = false
upload_to_release = true

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    '''chore(?:\([^)]*?\))?: .+''',
    '''ci(?:\([^)]*?\))?: .+''',
    '''refactor(?:\([^)]*?\))?: .+''',
    '''style(?:\([^)]*?\))?: .+''',
    '''test(?:\([^)]*?\))?: .+''',
    '''build\((?!deps\): .+)''',
    '''Merged? .*''',
    '''WIP? .*''',
    '''Initial Commit.*''',
    # Old semantic-release version commits
    '''^\d+\.\d+\.\d+''',
]

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
