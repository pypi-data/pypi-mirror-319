import{B as z}from"./bbi-C59dpStv.js";import{au as D,ar as C,av as H,f as _,i as R,t as $,u as O}from"./rpcWorker-CVTx5FIM.js";import{A as L}from"./AbortablePromiseCache-xs5eyOH3.js";import{O as j}from"./Observable-CILgZKT-.js";import{a as G,m as M}from"./merge-DrBsQLq1.js";import{B as Y,a as J}from"./util-CK2N18We.js";import{B as X}from"./index-P3rx-5SH.js";import{r as K}from"./rxjs-Dgg09m9e.js";function W(U){return U.filter(e=>!!e)}class Z extends z{constructor(){super(...arguments),this.readIndicesCache=new L({cache:new D({maxSize:1}),fill:(e,t)=>this._readIndices({...e,signal:t})})}readIndices(e={}){const{signal:t,...a}=e;return this.readIndicesCache.get(JSON.stringify(a),e,t)}async getView(e,t){return this.getUnzoomedView(t)}async _readIndices(e){const{extHeaderOffset:t,isBigEndian:a}=await this.getHeader(e),{buffer:c}=await this.bbi.read(C.Buffer.alloc(64),0,64,Number(t)),o=!a,p=c,u=new DataView(p.buffer,p.byteOffset,p.length);let s=0;s+=2;const g=u.getUint16(s,o);s+=2;const m=Number(u.getBigUint64(s,o));if(s+=8,g===0)return[];const I=20,b=I*g,{buffer:h}=await this.bbi.read(C.Buffer.alloc(b),0,b,Number(m)),r=[];for(let n=0;n<g;n+=1){const d=h.subarray(n*I),l=new DataView(d.buffer,d.byteOffset,d.length);let f=0;const E=l.getInt16(f,o);f+=2;const V=l.getInt16(f,o);f+=2;const F=Number(l.getBigUint64(f,o));f+=12;const A=l.getInt16(f,o);r.push({type:E,fieldcount:V,offset:Number(F),field:A})}return r}async searchExtraIndexBlocks(e,t={}){const{isBigEndian:a}=await this.getHeader(t),c=await this.readIndices(t);if(c.length===0)return[];const o=c.map(async p=>{const{offset:u,field:s}=p,{buffer:g}=await this.bbi.read(C.Buffer.alloc(32),0,32,u,t),m=!a,I=g,b=new DataView(I.buffer,I.byteOffset,I.length);let h=0;h+=4;const r=b.getInt32(h,m);h+=4;const n=b.getInt32(h,m);h+=4;const d=b.getInt32(h,m);h+=4,h+=8;const l=async E=>{const V=Number(E),F=4+r*(n+d),{buffer:A}=await this.bbi.read(C.Buffer.alloc(F),0,F,V,t),x=A,B=new DataView(x.buffer,x.byteOffset,x.length);let i=0;const P=B.getInt8(i);i+=2;const v=B.getInt16(i,m);i+=2;const T=[];if(P===0){const w=[];for(let S=0;S<v;S++){const k=x.subarray(i,i+n).toString().replaceAll("\0","");i+=n;const N=Number(B.getBigUint64(i,m));i+=8,w.push({key:k,offset:N})}let y=0;for(const{key:S,offset:k}of w){if(e.localeCompare(S)<0&&y)return l(y);y=k}return l(y)}else if(P===1){for(let w=0;w<v;w++){const y=x.subarray(i,i+n).toString().replaceAll("\0","");i+=n;const S=Number(B.getBigUint64(i,m));i+=8;const k=B.getUint32(i,m);i+=4;const N=B.getUint32(i,m);i+=4,T.push({key:y,offset:S,length:k,reserved:N})}for(const w of T)if(w.key===e)return{...w,field:s};return}};return l(u+32)});return W(await Promise.all(o))}async searchExtraIndex(e,t={}){const a=await this.searchExtraIndexBlocks(e,t);if(a.length===0)return[];const c=await this.getUnzoomedView(t),o=a.map(u=>new j(s=>{c.readFeatures(s,[u],t).catch(g=>{s.error(g)})}).pipe(H((s,g)=>s.concat(g)),G(s=>{for(const g of s)g.field=u.field;return s})));return(await _(M(...o))).filter(u=>{var s;return((s=u.rest)===null||s===void 0?void 0:s.split("	")[(u.field||0)-3])===e})}}class oe extends X.BaseFeatureDataAdapter{async configurePre(e){const t=this.pluginManager,a=new Z({filehandle:R.openLocation(this.getConf("bigBedLocation"),t)}),c=await a.getHeader(e),o=new Y({autoSql:c.autoSql});return{bigbed:a,header:c,parser:o}}async configure(e){return this.cachedP||(this.cachedP=this.configurePre(e).catch(t=>{throw this.cachedP=void 0,t})),this.cachedP}async getRefNames(e){const{header:t}=await this.configure(e);return Object.keys(t.refsByName)}async getData(){const e=await this.getRefNames(),t=[];for(const a of e){const c=await _(this.getFeatures({assemblyName:"unknown",refName:a,start:0,end:Number.MAX_SAFE_INTEGER}).pipe($()));t.push(c)}return t.flat()}async getHeader(e){const{parser:t,header:a}=await this.configure(e),{version:c,fileType:o}=a,{fields:p,...u}=t.autoSql;return{version:c,fileType:o,autoSql:{...u},fields:Object.fromEntries(p.map(({name:s,comment:g})=>[s,g]))}}async getFeaturesHelper({query:e,opts:t,observer:a,allowRedispatch:c,originalQuery:o=e}){var p;const{stopToken:u}=t,s=this.getConf("scoreColumn"),g=this.getConf("aggregateField"),{parser:m,bigbed:I}=await this.configure(t),b=await I.getFeatures(e.refName,e.start,e.end,{stopToken:u,basesPerSpan:e.end-e.start});if(c&&b.length){let r=Number.POSITIVE_INFINITY,n=Number.NEGATIVE_INFINITY;for(const d of b)d.start<r&&(r=d.start),d.end>n&&(n=d.end);if(n>e.end||r<e.start){await this.getFeaturesHelper({query:{...e,start:r,end:n},opts:t,observer:a,allowRedispatch:!1,originalQuery:e});return}}const h={};if(b.some(r=>r.uniqueId===void 0))throw new Error("found uniqueId undefined");for(const r of b){const n=[e.refName,`${r.start}`,`${r.end}`,...((p=r.rest)===null||p===void 0?void 0:p.split("	"))||[]],d=m.parseLine(n,{uniqueId:r.uniqueId}),l=d[g];h[l]||(h[l]=[]);const{uniqueId:f,type:E,chrom:V,chromStart:F,chromEnd:A,description:x,chromStarts:B,blockStarts:i,blockSizes:P,score:v,blockCount:T,thickStart:w,thickEnd:y,strand:S,...k}=d,N=J({...k,scoreColumn:s,splitLine:n,parser:m,uniqueId:f,start:r.start,end:r.end,refName:e.refName});l?h[l].push(N):O.doesIntersect2(N.start,N.end,o.start,o.end)&&a.next(new O.SimpleFeature({id:`${this.id}-${f}`,data:N}))}Object.entries(h).map(([r,n])=>{const d=O.min(n.map(f=>f.start)),l=O.max(n.map(f=>f.end));if(O.doesIntersect2(d,l,o.start,o.end)){const{uniqueId:f,strand:E}=n[0];a.next(new O.SimpleFeature({id:`${this.id}-${f}-parent`,data:{type:"gene",subfeatures:n,strand:E,name:r,start:d,end:l,refName:e.refName}}))}}),a.complete()}getFeatures(e,t={}){return K.ObservableCreate(async a=>{try{await this.getFeaturesHelper({query:e,opts:t,observer:a,allowRedispatch:!0})}catch(c){a.error(c)}},t.stopToken)}freeResources(){}}export{oe as default};
