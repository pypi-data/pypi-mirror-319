# Generated from txt2musicxml/grammer/Chords.g4 by ANTLR 4.13.2
import sys
from io import StringIO

from antlr4 import *

if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,
        0,
        11,
        85,
        6,
        -1,
        2,
        0,
        7,
        0,
        2,
        1,
        7,
        1,
        2,
        2,
        7,
        2,
        2,
        3,
        7,
        3,
        2,
        4,
        7,
        4,
        2,
        5,
        7,
        5,
        2,
        6,
        7,
        6,
        2,
        7,
        7,
        7,
        2,
        8,
        7,
        8,
        2,
        9,
        7,
        9,
        2,
        10,
        7,
        10,
        1,
        0,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        2,
        4,
        2,
        29,
        8,
        2,
        11,
        2,
        12,
        2,
        30,
        1,
        2,
        4,
        2,
        34,
        8,
        2,
        11,
        2,
        12,
        2,
        35,
        3,
        2,
        38,
        8,
        2,
        1,
        3,
        4,
        3,
        41,
        8,
        3,
        11,
        3,
        12,
        3,
        42,
        1,
        3,
        1,
        3,
        4,
        3,
        47,
        8,
        3,
        11,
        3,
        12,
        3,
        48,
        1,
        4,
        1,
        4,
        1,
        4,
        3,
        4,
        54,
        8,
        4,
        1,
        4,
        5,
        4,
        57,
        8,
        4,
        10,
        4,
        12,
        4,
        60,
        9,
        4,
        1,
        5,
        1,
        5,
        1,
        6,
        1,
        6,
        1,
        6,
        1,
        6,
        1,
        7,
        1,
        7,
        1,
        7,
        1,
        8,
        1,
        8,
        1,
        9,
        3,
        9,
        74,
        8,
        9,
        1,
        9,
        4,
        9,
        77,
        8,
        9,
        11,
        9,
        12,
        9,
        78,
        1,
        10,
        4,
        10,
        82,
        8,
        10,
        11,
        10,
        12,
        10,
        83,
        0,
        0,
        11,
        1,
        1,
        3,
        2,
        5,
        3,
        7,
        4,
        9,
        5,
        11,
        6,
        13,
        7,
        15,
        8,
        17,
        9,
        19,
        10,
        21,
        11,
        1,
        0,
        5,
        1,
        0,
        65,
        71,
        1,
        0,
        48,
        57,
        12,
        0,
        43,
        43,
        45,
        45,
        49,
        49,
        53,
        55,
        57,
        57,
        94,
        94,
        97,
        97,
        100,
        100,
        109,
        109,
        111,
        111,
        115,
        115,
        248,
        248,
        13,
        0,
        35,
        35,
        43,
        45,
        48,
        57,
        94,
        94,
        97,
        98,
        100,
        100,
        103,
        103,
        105,
        106,
        109,
        109,
        111,
        111,
        115,
        115,
        117,
        117,
        248,
        248,
        2,
        0,
        9,
        9,
        32,
        32,
        94,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        3,
        1,
        0,
        0,
        0,
        0,
        5,
        1,
        0,
        0,
        0,
        0,
        7,
        1,
        0,
        0,
        0,
        0,
        9,
        1,
        0,
        0,
        0,
        0,
        11,
        1,
        0,
        0,
        0,
        0,
        13,
        1,
        0,
        0,
        0,
        0,
        15,
        1,
        0,
        0,
        0,
        0,
        17,
        1,
        0,
        0,
        0,
        0,
        19,
        1,
        0,
        0,
        0,
        0,
        21,
        1,
        0,
        0,
        0,
        1,
        23,
        1,
        0,
        0,
        0,
        3,
        25,
        1,
        0,
        0,
        0,
        5,
        37,
        1,
        0,
        0,
        0,
        7,
        40,
        1,
        0,
        0,
        0,
        9,
        53,
        1,
        0,
        0,
        0,
        11,
        61,
        1,
        0,
        0,
        0,
        13,
        63,
        1,
        0,
        0,
        0,
        15,
        67,
        1,
        0,
        0,
        0,
        17,
        70,
        1,
        0,
        0,
        0,
        19,
        76,
        1,
        0,
        0,
        0,
        21,
        81,
        1,
        0,
        0,
        0,
        23,
        24,
        5,
        37,
        0,
        0,
        24,
        2,
        1,
        0,
        0,
        0,
        25,
        26,
        7,
        0,
        0,
        0,
        26,
        4,
        1,
        0,
        0,
        0,
        27,
        29,
        5,
        98,
        0,
        0,
        28,
        27,
        1,
        0,
        0,
        0,
        29,
        30,
        1,
        0,
        0,
        0,
        30,
        28,
        1,
        0,
        0,
        0,
        30,
        31,
        1,
        0,
        0,
        0,
        31,
        38,
        1,
        0,
        0,
        0,
        32,
        34,
        5,
        35,
        0,
        0,
        33,
        32,
        1,
        0,
        0,
        0,
        34,
        35,
        1,
        0,
        0,
        0,
        35,
        33,
        1,
        0,
        0,
        0,
        35,
        36,
        1,
        0,
        0,
        0,
        36,
        38,
        1,
        0,
        0,
        0,
        37,
        28,
        1,
        0,
        0,
        0,
        37,
        33,
        1,
        0,
        0,
        0,
        38,
        6,
        1,
        0,
        0,
        0,
        39,
        41,
        7,
        1,
        0,
        0,
        40,
        39,
        1,
        0,
        0,
        0,
        41,
        42,
        1,
        0,
        0,
        0,
        42,
        40,
        1,
        0,
        0,
        0,
        42,
        43,
        1,
        0,
        0,
        0,
        43,
        44,
        1,
        0,
        0,
        0,
        44,
        46,
        5,
        47,
        0,
        0,
        45,
        47,
        7,
        1,
        0,
        0,
        46,
        45,
        1,
        0,
        0,
        0,
        47,
        48,
        1,
        0,
        0,
        0,
        48,
        46,
        1,
        0,
        0,
        0,
        48,
        49,
        1,
        0,
        0,
        0,
        49,
        8,
        1,
        0,
        0,
        0,
        50,
        54,
        7,
        2,
        0,
        0,
        51,
        52,
        5,
        35,
        0,
        0,
        52,
        54,
        5,
        53,
        0,
        0,
        53,
        50,
        1,
        0,
        0,
        0,
        53,
        51,
        1,
        0,
        0,
        0,
        54,
        58,
        1,
        0,
        0,
        0,
        55,
        57,
        7,
        3,
        0,
        0,
        56,
        55,
        1,
        0,
        0,
        0,
        57,
        60,
        1,
        0,
        0,
        0,
        58,
        56,
        1,
        0,
        0,
        0,
        58,
        59,
        1,
        0,
        0,
        0,
        59,
        10,
        1,
        0,
        0,
        0,
        60,
        58,
        1,
        0,
        0,
        0,
        61,
        62,
        5,
        47,
        0,
        0,
        62,
        12,
        1,
        0,
        0,
        0,
        63,
        64,
        5,
        58,
        0,
        0,
        64,
        65,
        5,
        124,
        0,
        0,
        65,
        66,
        5,
        124,
        0,
        0,
        66,
        14,
        1,
        0,
        0,
        0,
        67,
        68,
        5,
        124,
        0,
        0,
        68,
        69,
        5,
        124,
        0,
        0,
        69,
        16,
        1,
        0,
        0,
        0,
        70,
        71,
        5,
        124,
        0,
        0,
        71,
        18,
        1,
        0,
        0,
        0,
        72,
        74,
        5,
        13,
        0,
        0,
        73,
        72,
        1,
        0,
        0,
        0,
        73,
        74,
        1,
        0,
        0,
        0,
        74,
        75,
        1,
        0,
        0,
        0,
        75,
        77,
        5,
        10,
        0,
        0,
        76,
        73,
        1,
        0,
        0,
        0,
        77,
        78,
        1,
        0,
        0,
        0,
        78,
        76,
        1,
        0,
        0,
        0,
        78,
        79,
        1,
        0,
        0,
        0,
        79,
        20,
        1,
        0,
        0,
        0,
        80,
        82,
        7,
        4,
        0,
        0,
        81,
        80,
        1,
        0,
        0,
        0,
        82,
        83,
        1,
        0,
        0,
        0,
        83,
        81,
        1,
        0,
        0,
        0,
        83,
        84,
        1,
        0,
        0,
        0,
        84,
        22,
        1,
        0,
        0,
        0,
        11,
        0,
        30,
        35,
        37,
        42,
        48,
        53,
        58,
        73,
        78,
        83,
        0,
    ]


class ChordsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [DFA(ds, i) for i, ds in enumerate(atn.decisionToState)]

    MEASURE_REPEAT = 1
    NOTE = 2
    ALTERATION = 3
    TIME_SIGNATURE = 4
    SUFFIX = 5
    SLASH = 6
    REPEAT_BARLINE = 7
    DOUBLE_BARLINE = 8
    BARLINE = 9
    NEWLINE = 10
    WHITESPACE = 11

    channelNames = ["DEFAULT_TOKEN_CHANNEL", "HIDDEN"]

    modeNames = ["DEFAULT_MODE"]

    literalNames = ["<INVALID>", "'%'", "'/'", "':||'", "'||'", "'|'"]

    symbolicNames = [
        "<INVALID>",
        "MEASURE_REPEAT",
        "NOTE",
        "ALTERATION",
        "TIME_SIGNATURE",
        "SUFFIX",
        "SLASH",
        "REPEAT_BARLINE",
        "DOUBLE_BARLINE",
        "BARLINE",
        "NEWLINE",
        "WHITESPACE",
    ]

    ruleNames = [
        "MEASURE_REPEAT",
        "NOTE",
        "ALTERATION",
        "TIME_SIGNATURE",
        "SUFFIX",
        "SLASH",
        "REPEAT_BARLINE",
        "DOUBLE_BARLINE",
        "BARLINE",
        "NEWLINE",
        "WHITESPACE",
    ]

    grammarFileName = "Chords.g4"

    def __init__(self, input=None, output: TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(
            self, self.atn, self.decisionsToDFA, PredictionContextCache()
        )
        self._actions = None
        self._predicates = None
