import importlib.resources as pkg_resources

teor = {
    "1": "присвоение по ссылке и",
    "2": "специфика типизации в языках",
    "3": "булев тип данных булевы",
    "4": "условные операторы",
    "5": "циклы в работа и",
    "6": "цикл бесконечные цикл операторы",
    "7": "строки в срезы с",
    "8": "строки в методы и",
    "9": "строки в методы форматирования",
    "10": "регулярные выражения модуль",
    "11": "списки в обращение к",
    "12": "списки в двумерные массивы ",
    "13": "словари в итерирование по",
    "14": "операции со словарями учитывающие",
    "15": "множества в основные способы",
    "16": "кортежи в отличия",
    "17": "выражения генераторы и генераторы",
    "18": "объявление и вызов функции",
    "19": "передача переменного количества параметров",
    "20": "работа с файлами функция",
    "21": "синтаксис и семантика обработки",
    "22": "базовые операции для работы",
    "23": "модули в и их",
    "24": "создание пакета способы импорта",
    "25": "функции стандартной библиотеки для"
}

content = ''


def write_teor(name):
    global content

    resource_package = 'pechenegi.t'

    keys = [key for key, val in teor.items() if val == name]

    resource_path = f'{keys[0]}.txt'
    with pkg_resources.open_text(resource_package, resource_path) as file:
        content = file.read()
    return content
