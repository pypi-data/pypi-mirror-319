{"version":3,"file":"pages_index._zBLzbRS.js","sources":["../../../../pages/index/+Page.tsx"],"sourcesContent":["import React, { Suspense, useEffect, useMemo, useState } from 'react';\nimport { Helmet, HelmetProvider } from '@vuer-ai/react-helmet-async';\n// import { ClickAwayListener, useSnackbar } from '@mui/base';\n// import {\n//   InfoSnackbar,\n//   Snackbars,\n//   SuccessSnackbar,\n//   WarningSnackbar,\n// } from './_components/snackbars';\nimport style from './index.module.scss';\nimport {\n  VuerRoot,\n  AppProvider,\n  WebSocketProvider,\n  Grid,\n  AmbientLight,\n  Hands,\n  PointLight,\n} from '@vuer-ai/vuer';\n\ntype MTypes = 'error' | 'warning' | 'success' | 'info';\ntype StateT = {\n  message?: string | null;\n  mtype?: MTypes | null;\n};\n\nfunction AppView() {\n  return (\n    // <MuJoCoProvider>\n    <VuerRoot\n      bgChildren={[\n        <Grid key=\"default-grid\" />,\n        <AmbientLight intensity={1} key=\"default-ambient-light\" />,\n        <PointLight\n          intensity={1}\n          position={[0, 1, 1]}\n          key=\"default-point-light\"\n        />,\n      ]}\n    >\n      <Hands key=\"hands\" />\n    </VuerRoot>\n    // </MuJoCoProvider>\n  );\n}\n\nfunction Page() {\n  const isSSR = typeof window === 'undefined';\n  const [{ message, mtype }, setState] = useState({\n    message: null,\n    mtype: null,\n  } as StateT);\n\n  // const { getRootProps, onClickAway } = useSnackbar({\n  //   onClose: () => {\n  //     setState({ message: null, mtype: null });\n  //   },\n  //   open: !!message,\n  //   autoHideDuration: 5000,\n  // });\n\n  useEffect(() => {\n    const oldError = console.error;\n    // console.error = (err) => {\n    //   setTimeout(() => {\n    //     setState({ message: err, mtype: \"error\" });\n    //     console.log(err);\n    //   }, 1)\n    // };\n    return () => {\n      console.error = oldError;\n    };\n  }, []);\n\n  useEffect(() => {\n    const oldWarn = console.warn;\n    console.warn = (err) => {\n      setTimeout(() => {\n        setState({ message: err, mtype: 'warning' });\n        console.log(err);\n      }, 1);\n    };\n    return () => {\n      console.warn = oldWarn;\n    };\n  }, []);\n\n  const context = useMemo(() => ({\n    showError: (message: string) =>\n      setTimeout(() => setState({ message, mtype: 'error' }), 1),\n    showSuccess: (message: string) =>\n      setTimeout(() => setState({ message, mtype: 'success' }), 1),\n    showWarning: (message: string) =>\n      setTimeout(() => setState({ message, mtype: 'warning' }), 1),\n    showInfo: (message: string) =>\n      setTimeout(() => setState({ message, mtype: 'info' }), 1),\n    showModal: (message: string) => {\n      console.log(message);\n    },\n  }), []);\n\n  // function render({ message, mtype }: StateT) {\n  //   switch (mtype) {\n  //     case 'error':\n  //       return <Snackbars {...getRootProps()}>ERROR: {message}</Snackbars>;\n  //     case 'warning':\n  //       return (\n  //         <WarningSnackbar {...getRootProps()}>\n  //           WARNING: {message}\n  //         </WarningSnackbar>\n  //       );\n  //     case 'success':\n  //       return (\n  //         <SuccessSnackbar {...getRootProps()}>\n  //           SUCCESS: {message}\n  //         </SuccessSnackbar>\n  //       );\n  //     case 'info':\n  //     default:\n  //       return <InfoSnackbar {...getRootProps()}>INFO: {message}</InfoSnackbar>;\n  //   }\n  // }\n\n  // if (isSSR) return null;\n  return (\n    <>\n      <Helmet>\n        <title>Vuer (Technical Preview)</title>\n      </Helmet>\n      <main className={style.main}>\n        {/*{message ? (*/}\n        {/*  <ClickAwayListener onClickAway={onClickAway}>*/}\n        {/*    {render({ message, mtype })}*/}\n        {/*  </ClickAwayListener>*/}\n        {/*) : null}*/}\n        {/*<Suspense fallback={<div>Loading...</div>}>*/}\n        <AppProvider value={context}>\n          {!isSSR ? (\n            <WebSocketProvider>\n              <AppView />\n            </WebSocketProvider>\n          ) : null}\n        </AppProvider>\n        {/*</Suspense>*/}\n      </main>\n    </>\n  );\n}\n\nexport default Page;\n"],"names":["AppView","jsx","VuerRoot","Grid","AmbientLight","PointLight","Hands","Page","isSSR","message","mtype","setState","useState","useEffect","oldError","oldWarn","err","context","useMemo","jsxs","Fragment","Helmet","style","AppProvider","WebSocketProvider"],"mappings":"iQA0BA,SAASA,GAAU,CACjB,OAEEC,EAAA,IAACC,EAAA,CACC,WAAY,CACVD,MAACE,KAAS,cAAe,EACxBF,EAAAA,IAAAG,EAAA,CAAa,UAAW,CAAA,EAAO,uBAAwB,EACxDH,EAAA,IAACI,EAAA,CACC,UAAW,EACX,SAAU,CAAC,EAAG,EAAG,CAAC,CAAA,EACd,qBACN,CACF,EAEA,SAAAJ,EAAA,IAACK,KAAU,OAAQ,CAAA,CACrB,CAGJ,CAEA,SAASC,GAAO,CACR,MAAAC,EAAQ,OAAO,OAAW,IAC1B,CAAC,CAAE,QAAAC,EAAS,MAAAC,CAAS,EAAAC,CAAQ,EAAIC,EAAAA,SAAS,CAC9C,QAAS,KACT,MAAO,IAAA,CACE,EAUXC,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAW,QAAQ,MAOzB,MAAO,IAAM,CACX,QAAQ,MAAQA,CAAA,CAEpB,EAAG,CAAE,CAAA,EAELD,EAAAA,UAAU,IAAM,CACd,MAAME,EAAU,QAAQ,KAChB,eAAA,KAAQC,GAAQ,CACtB,WAAW,IAAM,CACfL,EAAS,CAAE,QAASK,EAAK,MAAO,SAAW,CAAA,EAC3C,QAAQ,IAAIA,CAAG,GACd,CAAC,CAAA,EAEC,IAAM,CACX,QAAQ,KAAOD,CAAA,CAEnB,EAAG,CAAE,CAAA,EAEC,MAAAE,EAAUC,EAAAA,QAAQ,KAAO,CAC7B,UAAYT,GACV,WAAW,IAAME,EAAS,CAAE,QAAAF,EAAS,MAAO,OAAS,CAAA,EAAG,CAAC,EAC3D,YAAcA,GACZ,WAAW,IAAME,EAAS,CAAE,QAAAF,EAAS,MAAO,SAAW,CAAA,EAAG,CAAC,EAC7D,YAAcA,GACZ,WAAW,IAAME,EAAS,CAAE,QAAAF,EAAS,MAAO,SAAW,CAAA,EAAG,CAAC,EAC7D,SAAWA,GACT,WAAW,IAAME,EAAS,CAAE,QAAAF,EAAS,MAAO,MAAQ,CAAA,EAAG,CAAC,EAC1D,UAAYA,GAAoB,CAC9B,QAAQ,IAAIA,CAAO,CACrB,CAAA,GACE,CAAE,CAAA,EAyBN,OAEIU,EAAA,KAAAC,WAAA,CAAA,SAAA,CAAAnB,MAACoB,EACC,CAAA,SAAApB,EAAA,IAAC,QAAM,CAAA,SAAA,0BAAwB,CAAA,EACjC,QACC,OAAK,CAAA,UAAWqB,EAAM,KAOrB,SAAArB,MAACsB,GAAY,MAAON,EACjB,SAACT,EAIE,WAHDgB,EACC,CAAA,SAAAvB,EAAA,IAACD,IAAQ,CACX,CAAA,EAEJ,CAEF,CAAA,CACF,CAAA,CAAA,CAEJ"}