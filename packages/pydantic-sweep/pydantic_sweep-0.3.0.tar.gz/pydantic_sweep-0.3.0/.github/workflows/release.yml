name: Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "~=0.5.10"

      - name: Check tag
        shell: bash
        run: |
            PACKAGE_VERSION=$(uv run --quiet --script src/pydantic_sweep/_version.py)
            RELEASE_VERSION=${GITHUB_REF#refs/*/}

            if [ "$RELEASE_VERSION" != "v$PACKAGE_VERSION" ];
            then
              echo "Tag '${RELEASE_VERSION}' does not match the package version '${PACKAGE_VERSION}'!";
              exit 1;
            fi

      - name: Build Wheel
        run: uv build --out-dir ./dist .

      - uses: actions/upload-artifact@v4
        with:
          name: 'pypi-dist'
          path: './dist'
          if-no-files-found: 'error'

      - name: Build Documentation
        run: |
          uv run --group doc \
            sphinx-build \
              --jobs 2 \
              --fail-on-warning \
              -b html \
              docs \
              docs/_build/html

      - name: Upload static files as artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/_build/html

  deploy-pypi:
    runs-on: ubuntu-latest
    needs: ["build"]
    environment: pypi
    permissions:
      # This permission is mandatory for Trusted Publishing
      # https://docs.pypi.org/trusted-publishers/using-a-publisher/
      id-token: write

    steps:
      - name: Download dist
        uses: actions/download-artifact@v4
        with:
          name: 'pypi-dist'
          path: './dist'

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          # repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          print-hash: true

  deploy-docs:
    runs-on: ubuntu-latest
    needs: ["build"]
    permissions:
      pages: write      # permissions to deploy to Pages
      id-token: write   # verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
