# Copyright (c) 2022 Phase Advanced Sensor Systems, Inc.
from psdb.devices import AReg32
from .cortex_subdevice import CortexSubDevice


class DWT(CortexSubDevice):
    '''
    Driver for the Data Watchpoint and Trace (DWT) variant found on the
    Cortex-M4.
    '''
    REGS = [AReg32('CTRL',          0x000, [('CYCCNTENA',       0),
                                            ('POSTPRESET',      1,  4),
                                            ('POSTINIT',        5,  8),
                                            ('CYCTAP',          9),
                                            ('SYNCTAP',         10, 11),
                                            ('PCSAMPLENA',      12),
                                            ('EXCTRCENA',       16),
                                            ('CPIEVTENA',       17),
                                            ('EXCEVTENA',       18),
                                            ('SLEEPEVTENA',     19),
                                            ('LSUEVTENA',       20),
                                            ('FOLDEVTENA',      21),
                                            ('CYCEVTENA',       22),
                                            ('NOPRFCNT',        24),
                                            ('NOCYCCNT',        25),
                                            ('NOEXTTRIG',       26),
                                            ('NOTRCPKT',        27),
                                            ('NUMCOMP',         28, 31),
                                            ]),
            AReg32('CYCCNT',        0x004, [('CYCCNT',          0,  31),
                                            ]),
            AReg32('CPICNT',        0x008, [('CPICNT',          0,  7),
                                            ]),
            AReg32('EXCCNT',        0x00C, [('EXCCNT',          0,  7),
                                            ]),
            AReg32('SLEEPCNT',      0x010, [('SLEEPCNT',        0,  7),
                                            ]),
            AReg32('LSUCNT',        0x014, [('LSUCNT',          0,  7),
                                            ]),
            AReg32('FOLDCNT',       0x018, [('FOLDNCT',         0,  7),
                                            ]),
            AReg32('PCSR',          0x01C, [('EIASAMPLE',       0,  31),
                                            ]),
            AReg32('COMP0',         0x020, [('COMP',            0,  31),
                                            ]),
            AReg32('MASK0',         0x024, [('MASK',            0,  4),
                                            ]),
            AReg32('FUNCTION0',     0x028, [('FUNCTION',        0,  3),
                                            ('EMITRANGE',       5),
                                            ('CYCMATCH',        7),
                                            ('DATAVMATCH',      8),
                                            ('LNK1ENA',         9),
                                            ('DATAVSIZE',       10, 11),
                                            ('DATAVADDR0',      12, 15),
                                            ('DATAVADDR1',      16, 19),
                                            ('MATCHED',         24),
                                            ]),
            AReg32('COMP1',         0x020, [('COMP',            0,  31),
                                            ]),
            AReg32('MASK1',         0x024, [('MASK',            0,  4),
                                            ]),
            AReg32('FUNCTION1',     0x028, [('FUNCTION',        0,  3),
                                            ('EMITRANGE',       5),
                                            ('DATAVMATCH',      8),
                                            ('LNK1ENA',         9),
                                            ('DATAVSIZE',       10, 11),
                                            ('DATAVADDR0',      12, 15),
                                            ('DATAVADDR1',      16, 19),
                                            ('MATCHED',         24),
                                            ]),
            AReg32('COMP2',         0x020, [('COMP',            0,  31),
                                            ]),
            AReg32('MASK2',         0x024, [('MASK',            0,  4),
                                            ]),
            AReg32('FUNCTION2',     0x028, [('FUNCTION',        0,  3),
                                            ('EMITRANGE',       5),
                                            ('DATAVMATCH',      8),
                                            ('LNK1ENA',         9),
                                            ('DATAVSIZE',       10, 11),
                                            ('DATAVADDR0',      12, 15),
                                            ('DATAVADDR1',      16, 19),
                                            ('MATCHED',         24),
                                            ]),
            AReg32('COMP3',         0x020, [('COMP',            0,  31),
                                            ]),
            AReg32('MASK3',         0x024, [('MASK',            0,  4),
                                            ]),
            AReg32('FUNCTION3',     0x028, [('FUNCTION',        0,  3),
                                            ('EMITRANGE',       5),
                                            ('DATAVMATCH',      8),
                                            ('LNK1ENA',         9),
                                            ('DATAVSIZE',       10, 11),
                                            ('DATAVADDR0',      12, 15),
                                            ('DATAVADDR1',      16, 19),
                                            ('MATCHED',         24),
                                            ]),
            ]

    def __init__(self, component, subtype):
        super().__init__('DWT', DWT.REGS, component, subtype)
