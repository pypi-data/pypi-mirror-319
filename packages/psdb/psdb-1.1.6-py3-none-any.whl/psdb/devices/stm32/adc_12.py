# Copyright (c) 2019-2021 Phase Advanced Sensor Systems, Inc.
from builtins import range

from ..device import Device, AReg32, AReg32R


class ADC12(Device):
    '''
    Driver for the STM32U5 12-bit ADC.
    '''
    PER_ADC_REGS = [(AReg32,  'ISR',      0x00, [('ADRDY',         0),
                                                 ('EOSMP',         1),
                                                 ('EOC',           2),
                                                 ('EOS',           3),
                                                 ('OVR',           4),
                                                 ('AWD1',          7),
                                                 ('AWD2',          8),
                                                 ('AWD3',          9),
                                                 ('EOCAL',        11),
                                                 ('LDORDY',       12),
                                                 ]),
                    (AReg32,  'IER',      0x04, [('ADRDYIE',       0),
                                                 ('EOSMPIE',       1),
                                                 ('EOCIE',         2),
                                                 ('EOSIE',         3),
                                                 ('OVRIE',         4),
                                                 ('AWD1IE',        7),
                                                 ('AWD2IE',        8),
                                                 ('AWD3IE',        9),
                                                 ('EOCALIE',      11),
                                                 ('LDORDYIE',     12),
                                                 ]),
                    (AReg32,  'CR',       0x08, [('ADEN',          0),
                                                 ('ADDIS',         1),
                                                 ('ADSTART',       2),
                                                 ('ADSTP',         4),
                                                 ('ADVREGEN',     28),
                                                 ('ADCAL',        31),
                                                 ]),
                    (AReg32,  'CFGR1',    0x0C, [('DMAEN',         0),
                                                 ('DMACFG',        1),
                                                 ('RES',           2,  3),
                                                 ('SCANDIR',       4),
                                                 ('ALIGN',         5),
                                                 ('EXTSEL',        6,  8),
                                                 ('EXTEN',        10, 11),
                                                 ('OVRMOD',       12),
                                                 ('CONT',         13),
                                                 ('WAIT',         14),
                                                 ('DISCEN',       16),
                                                 ('CHSELRMOD',    21),
                                                 ('AWD1SGL',      22),
                                                 ('AWD1EN',       23),
                                                 ('AWD1CH',       26, 30),
                                                 ]),
                    (AReg32,  'CFGR2',    0x10, [('OVSE',          0),
                                                 ('OVSR',          2,  4),
                                                 ('OVSS',          5,  8),
                                                 ('TOVS',          9),
                                                 ('LFTRIG',       29),
                                                 ]),
                    (AReg32,  'SMPR',     0x14, [('SMP1',          0,  2),
                                                 ('SMP2',          4,  6),
                                                 ('SMPSEL0',       8),
                                                 ('SMPSEL1',       9),
                                                 ('SMPSEL2',      10),
                                                 ('SMPSEL3',      11),
                                                 ('SMPSEL4',      12),
                                                 ('SMPSEL5',      13),
                                                 ('SMPSEL6',      14),
                                                 ('SMPSEL7',      15),
                                                 ('SMPSEL8',      16),
                                                 ('SMPSEL9',      17),
                                                 ('SMPSEL10',     18),
                                                 ('SMPSEL11',     19),
                                                 ('SMPSEL12',     20),
                                                 ('SMPSEL13',     21),
                                                 ('SMPSEL14',     22),
                                                 ('SMPSEL15',     23),
                                                 ('SMPSEL16',     24),
                                                 ('SMPSEL17',     25),
                                                 ('SMPSEL18',     26),
                                                 ('SMPSEL19',     27),
                                                 ('SMPSEL20',     28),
                                                 ('SMPSEL21',     29),
                                                 ('SMPSEL22',     30),
                                                 ('SMPSEL23',     31),
                                                 ]),
                    (AReg32,  'AWD1TR',   0x20, [('LT1',           0, 11),
                                                 ('HT1',          16, 27),
                                                 ]),
                    (AReg32,  'AWD2TR',   0x24, [('LT2',           0, 11),
                                                 ('HT2',          16, 27),
                                                 ]),
                    (AReg32,  'CHSELRa',  0x28, [('CHSEL0',        0),
                                                 ('CHSEL1',        1),
                                                 ('CHSEL2',        2),
                                                 ('CHSEL3',        3),
                                                 ('CHSEL4',        4),
                                                 ('CHSEL5',        5),
                                                 ('CHSEL6',        6),
                                                 ('CHSEL7',        7),
                                                 ('CHSEL8',        8),
                                                 ('CHSEL9',        9),
                                                 ('CHSEL10',      10),
                                                 ('CHSEL11',      11),
                                                 ('CHSEL12',      12),
                                                 ('CHSEL13',      13),
                                                 ('CHSEL14',      14),
                                                 ('CHSEL15',      15),
                                                 ('CHSEL16',      16),
                                                 ('CHSEL17',      17),
                                                 ('CHSEL18',      18),
                                                 ('CHSEL19',      19),
                                                 ('CHSEL20',      20),
                                                 ('CHSEL21',      21),
                                                 ('CHSEL22',      22),
                                                 ('CHSEL23',      23),
                                                 ]),
                    (AReg32,  'CHSELRb',  0x28, [('SQ1',           0,  3),
                                                 ('SQ2',           4,  7),
                                                 ('SQ3',           8, 11),
                                                 ('SQ4',          12, 15),
                                                 ('SQ5',          16, 19),
                                                 ('SQ6',          20, 23),
                                                 ('SQ7',          24, 27),
                                                 ('SQ8',          28, 31),
                                                 ]),
                    (AReg32,  'AWD3TR',   0x2C, [('LT3',           0, 11),
                                                 ('HT3',          16, 27),
                                                 ]),
                    (AReg32R, 'DR',       0x40, [('DATA',          0, 15),
                                                 ]),
                    (AReg32,  'PWRR',     0x44, [('AUTOFF',        0),
                                                 ('DPD',           1),
                                                 ('VREFPROT',      2),
                                                 ('VREFSECSMP',    3),
                                                 ]),
                    (AReg32,  'AWD2CR',   0xA0, [('AWD2CH',        0, 23)]),
                    (AReg32,  'AWD3CR',   0xA4, [('AWD3CH',        0, 23)]),
                    (AReg32,  'CALFACT',  0xC4, [('CALFACT',       0,  6),
                                                 ]),
                    (AReg32,  'OR',       0xD0, [('CHN21SEL',      0),
                                                 ]),
                    ]
    COM_ADC_REGS = [AReg32 ('CCR',  0x308,     [('PRESC',        18, 21),
                                                ('VREFEN',       22),
                                                ('VSENSESEL',    23),
                                                ('VBATEN',       24),
                                                ]),
                    ]

    def __init__(self, target, ap, name, addr, first_adc, nadcs, **kwargs):
        regs = []
        for i in range(nadcs):
            base = 0x100*i
            regs += [cls(_name + ('_%u' % (first_adc + i)), base + offset,
                         fields)
                     for cls, _name, offset, fields in ADC12.PER_ADC_REGS]
        regs += ADC12.COM_ADC_REGS

        super().__init__(target, ap, addr, name, regs, **kwargs)
