# Copyright (c) 2020-2021 Phase Advanced Sensor Systems, Inc.
from ..device import Device, AReg32


class DBGMCU(Device):
    '''
    Driver for the STM32U5 MCU debug component (DBGMCU).
    '''
    REGS = [AReg32('IDCODE',    0x000, [('DEV_ID',            0, 11),
                                        ('REV_ID',           16, 31),
                                        ]),
            AReg32('CR',        0x004, [('DBG_STOP',          1),
                                        ('DBG_STANDBY',       2),
                                        ('TRACE_IOEN',        4),
                                        ('TRACE_EN',          5),
                                        ('TRACE_MODE',        6,  7),
                                        ]),
            AReg32('APB1LFZR1', 0x008, [('DBG_TIM2_STOP',     0),
                                        ('DBG_TIM3_STOP',     1),
                                        ('DBG_TIM4_STOP',     2),
                                        ('DBG_TIM5_STOP',     3),
                                        ('DBG_TIM6_STOP',     4),
                                        ('DBG_TIM7_STOP',     5),
                                        ('DBG_WWDG_STOP',    11),
                                        ('DBG_IWDG_STOP',    12),
                                        ('DBG_I2C1_STOP',    21),
                                        ('DBG_I2C2_STOP',    22),
                                        ]),
            AReg32('APB1HFZR2', 0x00C, [('DBG_I2C4_STOP',     1),
                                        ('DBG_LPTIM2_STOP',   5),
                                        ]),
            AReg32('APB2FZR',   0x010, [('DBG_TIM1_STOP',    11),
                                        ('DBG_TIM8_STOP',    13),
                                        ('DBG_TIM15_STOP',   16),
                                        ('DBG_TIM16_STOP',   17),
                                        ('DBG_TIM17_STOP',   18),
                                        ]),
            AReg32('APB3FZR',   0x014, [('DBG_I2C3_STOP',    10),
                                        ('DBG_LPTIM1_STOP',  17),
                                        ('DBG_LPTIM3_STOP',  18),
                                        ('DBG_LPTIM4_STOP',  19),
                                        ('DBG_RTC_STOP',     30),
                                        ]),
            AReg32('AHB1FZR',   0x020, [('DBG_GPDMA0_STOP',   0),
                                        ('DBG_GPDMA1_STOP',   1),
                                        ('DBG_GPDMA2_STOP',   2),
                                        ('DBG_GPDMA3_STOP',   3),
                                        ('DBG_GPDMA4_STOP',   4),
                                        ('DBG_GPDMA5_STOP',   5),
                                        ('DBG_GPDMA6_STOP',   6),
                                        ('DBG_GPDMA7_STOP',   7),
                                        ('DBG_GPDMA8_STOP',   8),
                                        ('DBG_GPDMA9_STOP',   9),
                                        ('DBG_GPDMA10_STOP', 10),
                                        ('DBG_GPDMA11_STOP', 11),
                                        ('DBG_GPDMA12_STOP', 12),
                                        ('DBG_GPDMA13_STOP', 13),
                                        ('DBG_GPDMA14_STOP', 14),
                                        ('DBG_GPDMA15_STOP', 15),
                                        ]),
            AReg32('AHB3FZR',   0x028, [('DBG_LPDMA0_STOP',   0),
                                        ('DBG_LPDMA1_STOP',   1),
                                        ('DBG_LPDMA2_STOP',   2),
                                        ('DBG_LPDMA3_STOP',   3),
                                        ]),
            AReg32('SR',        0x0FC, [('AP_PRESENT',        0, 15),
                                        ('AP_ENABLED',       16, 31),
                                        ]),
            AReg32('AUTH_HOST', 0x100, [('AUTH_KEY',          0, 31),
                                        ]),
            ]

    def __init__(self, target, ap, name, addr, **kwargs):
        super().__init__(target, ap, addr, name, DBGMCU.REGS, **kwargs)
