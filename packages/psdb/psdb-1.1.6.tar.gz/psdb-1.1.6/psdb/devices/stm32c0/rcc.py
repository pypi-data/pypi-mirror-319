# Copyright (c) 2024 Phase Advanced Sensor Systems, Inc.
from ..device import Device, AReg32


ENABLE_BITS = {
    # IOPORT
    'GPIOA'         : (0x34,  0),
    'GPIOB'         : (0x34,  1),
    'GPIOC'         : (0x34,  2),
    'GPIOD'         : (0x34,  3),
    'GPIOF'         : (0x34,  5),

    # AHB
    'DMA1'          : (0x38,  0),
    'FLASH'         : (0x38,  8),
    'CRC'           : (0x38, 12),

    # APB1.1
    'TIM3'          : (0x3C,  1),
    'RTCAPB'        : (0x3C, 10),
    'WWDG'          : (0x3C, 11),
    'USART2'        : (0x3C, 17),
    'I2C1'          : (0x3C, 21),
    'DBG'           : (0x3C, 27),
    'PWR'           : (0x3C, 28),

    # APB1.2
    'SYSCFG'        : (0x40,  0),
    'TIM1'          : (0x40, 11),
    'SPI1'          : (0x40, 12),
    'USART1'        : (0x40, 14),
    'TIM14'         : (0x40, 15),
    'TIM16'         : (0x40, 17),
    'TIM17'         : (0x40, 18),
    'ADC'           : (0x40, 20),
}


class RCC(Device):
    '''
    Driver for the STM32C0 Reset and Clock Control (RCC) device.
    '''
    REGS = [AReg32('CR',            0x000, [('HSIKERDIV',       5,  7),
                                            ('HSION',           8),
                                            ('HSIKERON',        9),
                                            ('HSIRDY',          10),
                                            ('HSIDIV',          11, 13),
                                            ('HSEON',           16),
                                            ('HSERDY',          17),
                                            ('HSEBYP',          18),
                                            ('CSSON',           19),
                                            ]),
            AReg32('ICSCR',         0x004, [('HSICAL',          0,  7),
                                            ('HSITRIM',         8,  14),
                                            ]),
            AReg32('CFGR',          0x008, [('SW',              0,  2),
                                            ('SWS',             3,  5),
                                            ('HPRE',            8,  11),
                                            ('PPRE',            12, 14),
                                            ('MCO2SEL',         16, 18),
                                            ('MCO2PRE',         20, 22),
                                            ('MCOSEL',          24, 26),
                                            ('MCOPRE',          28, 30),
                                            ]),
            AReg32('CIER',          0x018, [('LSIRDYIE',        0),
                                            ('LSERDYIE',        1),
                                            ('HSIRDYIE',        3),
                                            ('HSERDYIE',        4),
                                            ]),
            AReg32('CIFR',          0x01C, [('LSIRDYF',         0),
                                            ('LSERDYF',         1),
                                            ('HSIRDYF',         3),
                                            ('HSERDYF',         4),
                                            ('CSSF',            8),
                                            ('LSECSSF',         9),
                                            ]),
            AReg32('CICR',          0x020, [('LSIRDYC',         0),
                                            ('LSERDYC',         1),
                                            ('HSIRDYC',         3),
                                            ('HSERDYC',         4),
                                            ('CSSC',            8),
                                            ('LSECSSC',         9),
                                            ]),
            AReg32('IOPRSTR',       0x024, [('GPIOARST',        0),
                                            ('GPIOBRST',        1),
                                            ('GPIOCRST',        2),
                                            ('GPIODRST',        3),
                                            ('GPIOFRST',        5),
                                            ]),
            AReg32('AHBRSTR',       0x028, [('DMA1RST',         0),
                                            ('FLASHRST',        8),
                                            ('CRCRST',          12),
                                            ]),
            AReg32('APBRSTR1',      0x02C, [('TIM3RST',         1),
                                            ('USART2RST',       17),
                                            ('I2C1RST',         21),
                                            ('DBGRST',          27),
                                            ('PWRRST',          28),
                                            ]),
            AReg32('APBRSTR2',      0x030, [('SYSCFGRST',       0),
                                            ('TIM1RST',         11),
                                            ('SPI1RST',         12),
                                            ('USART1RST',       14),
                                            ('TIM14RST',        15),
                                            ('TIM16RST',        17),
                                            ('TIM17RST',        18),
                                            ('ADCRST',          20),
                                            ]),
            AReg32('IOPENR',        0x034, [('GPIOAEN',         0),
                                            ('GPIOBEN',         1),
                                            ('GPIOCEN',         2),
                                            ('GPIODEN',         3),
                                            ('GPIOFEN',         5),
                                            ]),
            AReg32('AHBENR',        0x038, [('DMA1EN',          0),
                                            ('FLASHEN',         8),
                                            ('CRCEN',           12),
                                            ]),
            AReg32('APBENR1',       0x03C, [('TIM3EN',          1),
                                            ('RTCAPBEN',        10),
                                            ('WWDGEN',          11),
                                            ('USART2EN',        17),
                                            ('I2C1EN',          21),
                                            ('DBGEN',           27),
                                            ('PWREN',           28),
                                            ]),
            AReg32('APBENR2',       0x040, [('SYSCFGEN',        0),
                                            ('TIM1EN',          11),
                                            ('SPI1EN',          12),
                                            ('USART1EN',        14),
                                            ('TIM14EN',         15),
                                            ('TIM16EN',         17),
                                            ('TIM17EN',         18),
                                            ('ADCEN',           20),
                                            ]),
            AReg32('IOPSMENR',      0x044, [('GPIOASMEN',       0),
                                            ('GPIOBSMEN',       1),
                                            ('GPIOCSMEN',       2),
                                            ('GPIODSMEN',       3),
                                            ('GPIOFSMEN',       5),
                                            ]),
            AReg32('AHBSMENR',      0x048, [('DMA1SMEN',        0),
                                            ('FLASHSMEN',       8),
                                            ('SRAMSMEN',        9),
                                            ('CRCSMEN',         12),
                                            ]),
            AReg32('APBSMENR1',     0x04C, [('TIM3SMEN',        1),
                                            ('RTCAPBSMEN',      10),
                                            ('WWDGSMEN',        11),
                                            ('USART2SMEN',      17),
                                            ('I2C1SMEN',        21),
                                            ('DBGSMEN',         27),
                                            ('PWRSMEN',         28),
                                            ]),
            AReg32('APBSMENR2',     0x050, [('SYSCFGSMEN',      0),
                                            ('TIM1SMEN',        11),
                                            ('SPI1SMEN',        12),
                                            ('USART1SMEN',      14),
                                            ('TIM14SMEN',       15),
                                            ('TIM16SMEN',       17),
                                            ('TIM17SMEN',       18),
                                            ('ADCSMEN',         20),
                                            ]),
            AReg32('CCIPR',         0x054, [('USART1SEL',       0,  1),
                                            ('I2C1SEL',         12, 13),
                                            ('I2S1SEL',         14, 15),
                                            ('ADCSEL',          30, 31),
                                            ]),
            AReg32('CSR1',          0x05C, [('LSEON',           0),
                                            ('LSERDY',          1),
                                            ('LSEBYP',          2),
                                            ('LSEDRV',          3),
                                            ('LSECSSON',        5),
                                            ('LSECSSD',         6),
                                            ('RTCSEL',          8,  9),
                                            ('RTCEN',           15),
                                            ('RTCRST',          16),
                                            ('LSCOEN',          24),
                                            ('LSCOSEL',         25),
                                            ]),
            AReg32('CSR2',          0x060, [('LSION',           0),
                                            ('LSIRDY',          1),
                                            ('RMVF',            23),
                                            ('OBLRSTF',         25),
                                            ('PINRSTF',         26),
                                            ('PWRRSTF',         27),
                                            ('SFTRSTF',         28),
                                            ('IWDGRSTF',        29),
                                            ('WWDGRSTF',        30),
                                            ('LPWRRSTF',        31),
                                            ]),
            ]

    def __init__(self, target, ap, name, addr, **kwargs):
        super().__init__(target, ap, addr, name, RCC.REGS, **kwargs)

    def enable_device(self, name):
        offset, bit = ENABLE_BITS[name]
        if self._get_field(1, bit, offset) == 0:
            self._set_field(1, 1, bit, offset)
