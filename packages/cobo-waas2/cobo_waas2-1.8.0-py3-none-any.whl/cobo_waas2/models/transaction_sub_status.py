# coding: utf-8

"""
    Cobo Wallet as a Service 2.0

    Contact: help@cobo.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class TransactionSubStatus(str, Enum):
    """
    The transaction sub-status. Possible values include:    - `PendingDoubleCheck`: The transaction is pending a double check.    - `RejectedDoubleCheck`: The transaction is rejected because it failed a double check.   - `PendingSpenderCheck`: The transaction is pending a spender check.   - `RejectedSpenderAuth`: The transaction is rejected by the spender.   - `PendingTravelRuleCheck`: The transaction is undergoing a Travel Rule check.   - `PendingTravelRuleInfo`: The transaction is awaiting users to provide information related to the Travel Rule.   - `RejectedTravelRule`: The transaction is rejected because it failed to comply with the Travel Rule.   - `RejectedTravelRuleDueToCompliance`: The transaction is rejected because it failed the cross-check of the Travel Rule.    - `RejectedTravelRuleDueToUnsupportedToken`: The transaction is rejected because the token is not supported by the Travel Rule.   - `PendingRiskControlCheck`: The transaction is pending for a Risk Control check.   - `PendingApproverCheck`: The transaction is pending approval from the approver.   - `RejectedApproverAuth`: The transaction is rejected by the approver.   - `RejectedbyMobileCosigner`: The transaction is rejected by a mobile cosigner.   - `RejectedCoboCheck`: The transaction is rejected because it failed the internal check by Cobo.   - `RejectedWhiteList`: The transaction is rejected because the sender or receiver is not included in a whitelist.   - `PendingWaitSigner`: The transaction is pending signature.   - `PendingApprovalStart`: The transaction approval is waiting to be started.           - For [MPC Wallets (User-Controlled Wallets)](https://manuals.cobo.com/en/portal/mpc-wallets/ucw/introduction), you need to use the Client App and call the UCW SDK to start the transaction approval process.     - For [MPC Wallets (Organization-Controlled Wallets](https://manuals.cobo.com/en/portal/mpc-wallets/ocw/introduction)):       - If you are using the [server co-signer](https://manuals.cobo.com/en/portal/mpc-wallets/ocw/create-key-share-groups), this status indicates that the TSS Node will soon request the callback server to start the [risk controls](https://manuals.cobo.com/en/portal/risk-controls/introduction) check. No further action is required from you at this stage.       - If you are using the [mobile co-signer](https://manuals.cobo.com/en/portal/mpc-wallets/ocw/create-key-share-groups), key share holders need to use their [Cobo Guard](https://manuals.cobo.com/en/guard/introduction) to approve the transaction and participate in the signing process.   - `FailedBySigner`: The transaction failed during the signing process.   - `SignatureVerificationSuccess`: The transaction's signature has been successfully verified.   - `SignatureVerificationFailed`: The transaction's signature failed verification.   - `FailedBroadcasting`: The transaction failed to be broadcast to the blockchain network.   - `CanceledBySpender`: The transaction is canceled by a Spender.   - `CanceledByAPI`: The transaction is canceled by a [Cancel transaction](https://www.cobo.com/developers/v2/api-references/transactions/cancel-transaction) operation.   - `Queue`: The transaction is queued to be processed by Cobo Portal.   - `Reverting`: The transaction is being reverted due to failure on the blockchain.   - `OnchainRejection`: The transaction is rejected from being added to the blockchain.   - `FailedOnChain`: The transaction failed on the blockchain.   - `PendingBlockConfirmations`: The transaction is awaiting the required number of confirmations.   - `ReplacedByNewTransaction`: The transaction has been replaced by a new transaction. 
    """

    """
    allowed enum values
    """
    REJECTEDKYT = 'RejectedKYT'
    PENDINGDOUBLECHECK = 'PendingDoubleCheck'
    PENDINGSPENDERCHECK = 'PendingSpenderCheck'
    PENDINGRISKCONTROLCHECK = 'PendingRiskControlCheck'
    PENDINGAPPROVERCHECK = 'PendingApproverCheck'
    REJECTEDCOBOCHECK = 'RejectedCoboCheck'
    REJECTEDWHITELIST = 'RejectedWhiteList'
    REJECTEDDOUBLECHECK = 'RejectedDoubleCheck'
    REJECTEDSPENDERAUTH = 'RejectedSpenderAuth'
    REJECTEDRISKCONTROLCHECK = 'RejectedRiskControlCheck'
    REJECTEDAPPROVERAUTH = 'RejectedApproverAuth'
    REJECTEDBYMOBILECOSIGNER = 'RejectedbyMobileCosigner'
    PENDINGWAITSIGNER = 'PendingWaitSigner'
    PENDINGAPPROVALSTART = 'PendingApprovalStart'
    FAILEDBYSIGNER = 'FailedBySigner'
    FAILEDBROADCASTING = 'FailedBroadcasting'
    FAILEDONCHAIN = 'FailedOnChain'
    REVERTING = 'Reverting'
    QUEUE = 'Queue'
    PENDINGBLOCKCONFIRMATIONS = 'PendingBlockConfirmations'
    REPLACEDBYNEWTRANSACTION = 'ReplacedByNewTransaction'
    CANCELEDBYSPENDER = 'CanceledBySpender'
    CANCELEDBYAPI = 'CanceledByAPI'
    ONCHAINREJECTION = 'OnchainRejection'
    REJECTEDTRAVELRULE = 'RejectedTravelRule'
    REJECTEDTRAVELRULEDUETOCOMPLIANCE = 'RejectedTravelRuleDueToCompliance'
    PENDINGTRAVELRULEINFO = 'PendingTravelRuleInfo'
    PENDINGTRAVELRULECHECK = 'PendingTravelRuleCheck'
    REJECTEDTRAVELRULEDUETOUNSUPPORTEDTOKEN = 'RejectedTravelRuleDueToUnsupportedToken'
    SIGNATUREVERIFICATIONSUCCESS = 'SignatureVerificationSuccess'
    SIGNATUREVERIFICATIONFAILED = 'SignatureVerificationFailed'

    UNKNOWN = None

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TransactionSubStatus from a JSON string"""
        return cls(json.loads(json_str))

    @classmethod
    def _missing_(cls, value):
        return cls.UNKNOWN


