# coding: utf-8

"""
    Bluefin API

    Bluefin API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bluefin_pro_api_client.models.market_stream_message_payload import MarketStreamMessagePayload

class TestMarketStreamMessagePayload(unittest.TestCase):
    """MarketStreamMessagePayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MarketStreamMessagePayload:
        """Test MarketStreamMessagePayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MarketStreamMessagePayload`
        """
        model = MarketStreamMessagePayload()
        if include_optional:
            return MarketStreamMessagePayload(
                updated_at_utc_millis = 56,
                market_address = '1193046',
                bids_e9 = [
                    [[10000000000, 10000000000], [9000000000, 9000000000]]
                    ],
                asks_e9 = [
                    [[10000000000, 10000000000], [9000000000, 9000000000]]
                    ],
                first_update_id = 56,
                last_update_id = 56,
                orderbook_update_id = 56,
                depth_level = 5,
                start_time = 56,
                end_time = 56,
                interval = '',
                open_price_e9 = '',
                close_price_e9 = '',
                high_price_e9 = '',
                low_price_e9 = '',
                volume_e9 = '',
                quote_volume_e9 = '',
                num_trades = 56,
                price_e9 = '',
                recent_trades = [
                    bluefin_pro_api_client.models.recent_trade_update.RecentTradeUpdate(
                        id = 56, 
                        market_address = '', 
                        price_e9 = '', 
                        quantity_e9 = '', 
                        quote_quantity_e9 = '', 
                        side = 'LONG', 
                        updated_at_utc_millis = 56, )
                    ],
                last_quantity_e9 = '10000000000',
                last_time_at_utc_millis = 1724121094751,
                last_price_e9 = '5000000000000',
                last_funding_rate_e9 = '10000000',
                next_funding_time_at_utc_millis = 1724121094751,
                avg_funding_rate8hr_e9 = '10000000',
                oracle_price_e9 = '50000000000000',
                oracle_price_direction = 56,
                mark_price_e9 = '50000000000000',
                mark_price_direction = 56,
                market_price_e9 = '5000000000000',
                market_price_direction = 56,
                best_bid_price_e9 = '12345678901',
                best_bid_quantity_e9 = '10000000',
                best_ask_price_e9 = '42345678901',
                best_ask_quantity_e9 = '100000000',
                open_interest_e9 = '100000000',
                high_price24hr_e9 = '5000000000000',
                low_price24hr_e9 = '50000000000',
                volume24hr_e9 = '100000000',
                quote_volume24hr_e9 = '5000000000000',
                close_price24hr_e9 = '5000000000000',
                open_price24hr_e9 = '5000000000000',
                close_time24hr_at_utc_millis = 1724121094751,
                open_time24hr_at_utc_millis = 1724121094751,
                first_id24hr = 56,
                last_id24hr = 56,
                count24hr = '123456',
                price_change24hr_e9 = '50000000000',
                price_change_percent24hr_e9 = '5000000000',
                last_updated_at_utc_millis = 1724121094751,
                ticker_all = [
                    bluefin_pro_api_client.models.ticker_update.TickerUpdate(
                        market_address = '1193046', 
                        last_quantity_e9 = '10000000000', 
                        last_time_at_utc_millis = 1724121094751, 
                        last_price_e9 = '5000000000000', 
                        last_funding_rate_e9 = '10000000', 
                        next_funding_time_at_utc_millis = 1724121094751, 
                        avg_funding_rate8hr_e9 = '10000000', 
                        oracle_price_e9 = '50000000000000', 
                        oracle_price_direction = 56, 
                        mark_price_e9 = '50000000000000', 
                        mark_price_direction = 56, 
                        market_price_e9 = '5000000000000', 
                        market_price_direction = 56, 
                        best_bid_price_e9 = '12345678901', 
                        best_bid_quantity_e9 = '10000000', 
                        best_ask_price_e9 = '42345678901', 
                        best_ask_quantity_e9 = '100000000', 
                        open_interest_e9 = '100000000', 
                        high_price24hr_e9 = '5000000000000', 
                        low_price24hr_e9 = '50000000000', 
                        volume24hr_e9 = '100000000', 
                        quote_volume24hr_e9 = '5000000000000', 
                        close_price24hr_e9 = '5000000000000', 
                        open_price24hr_e9 = '5000000000000', 
                        close_time24hr_at_utc_millis = 1724121094751, 
                        open_time24hr_at_utc_millis = 1724121094751, 
                        first_id24hr = 56, 
                        last_id24hr = 56, 
                        count24hr = '123456', 
                        price_change24hr_e9 = '50000000000', 
                        price_change_percent24hr_e9 = '5000000000', 
                        last_updated_at_utc_millis = 1724121094751, )
                    ]
            )
        else:
            return MarketStreamMessagePayload(
                updated_at_utc_millis = 56,
                market_address = '1193046',
                bids_e9 = [
                    [[10000000000, 10000000000], [9000000000, 9000000000]]
                    ],
                asks_e9 = [
                    [[10000000000, 10000000000], [9000000000, 9000000000]]
                    ],
                first_update_id = 56,
                last_update_id = 56,
                orderbook_update_id = 56,
                depth_level = 5,
                start_time = 56,
                end_time = 56,
                interval = '',
                open_price_e9 = '',
                close_price_e9 = '',
                high_price_e9 = '',
                low_price_e9 = '',
                volume_e9 = '',
                quote_volume_e9 = '',
                num_trades = 56,
                price_e9 = '',
                recent_trades = [
                    bluefin_pro_api_client.models.recent_trade_update.RecentTradeUpdate(
                        id = 56, 
                        market_address = '', 
                        price_e9 = '', 
                        quantity_e9 = '', 
                        quote_quantity_e9 = '', 
                        side = 'LONG', 
                        updated_at_utc_millis = 56, )
                    ],
                last_quantity_e9 = '10000000000',
                last_time_at_utc_millis = 1724121094751,
                last_price_e9 = '5000000000000',
                last_funding_rate_e9 = '10000000',
                next_funding_time_at_utc_millis = 1724121094751,
                avg_funding_rate8hr_e9 = '10000000',
                oracle_price_e9 = '50000000000000',
                oracle_price_direction = 56,
                mark_price_e9 = '50000000000000',
                mark_price_direction = 56,
                market_price_e9 = '5000000000000',
                market_price_direction = 56,
                best_bid_price_e9 = '12345678901',
                best_bid_quantity_e9 = '10000000',
                best_ask_price_e9 = '42345678901',
                best_ask_quantity_e9 = '100000000',
                open_interest_e9 = '100000000',
                high_price24hr_e9 = '5000000000000',
                low_price24hr_e9 = '50000000000',
                volume24hr_e9 = '100000000',
                quote_volume24hr_e9 = '5000000000000',
                close_price24hr_e9 = '5000000000000',
                open_price24hr_e9 = '5000000000000',
                close_time24hr_at_utc_millis = 1724121094751,
                open_time24hr_at_utc_millis = 1724121094751,
                first_id24hr = 56,
                last_id24hr = 56,
                count24hr = '123456',
                price_change24hr_e9 = '50000000000',
                price_change_percent24hr_e9 = '5000000000',
                last_updated_at_utc_millis = 1724121094751,
                ticker_all = [
                    bluefin_pro_api_client.models.ticker_update.TickerUpdate(
                        market_address = '1193046', 
                        last_quantity_e9 = '10000000000', 
                        last_time_at_utc_millis = 1724121094751, 
                        last_price_e9 = '5000000000000', 
                        last_funding_rate_e9 = '10000000', 
                        next_funding_time_at_utc_millis = 1724121094751, 
                        avg_funding_rate8hr_e9 = '10000000', 
                        oracle_price_e9 = '50000000000000', 
                        oracle_price_direction = 56, 
                        mark_price_e9 = '50000000000000', 
                        mark_price_direction = 56, 
                        market_price_e9 = '5000000000000', 
                        market_price_direction = 56, 
                        best_bid_price_e9 = '12345678901', 
                        best_bid_quantity_e9 = '10000000', 
                        best_ask_price_e9 = '42345678901', 
                        best_ask_quantity_e9 = '100000000', 
                        open_interest_e9 = '100000000', 
                        high_price24hr_e9 = '5000000000000', 
                        low_price24hr_e9 = '50000000000', 
                        volume24hr_e9 = '100000000', 
                        quote_volume24hr_e9 = '5000000000000', 
                        close_price24hr_e9 = '5000000000000', 
                        open_price24hr_e9 = '5000000000000', 
                        close_time24hr_at_utc_millis = 1724121094751, 
                        open_time24hr_at_utc_millis = 1724121094751, 
                        first_id24hr = 56, 
                        last_id24hr = 56, 
                        count24hr = '123456', 
                        price_change24hr_e9 = '50000000000', 
                        price_change_percent24hr_e9 = '5000000000', 
                        last_updated_at_utc_millis = 1724121094751, )
                    ],
        )
        """

    def testMarketStreamMessagePayload(self):
        """Test MarketStreamMessagePayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
