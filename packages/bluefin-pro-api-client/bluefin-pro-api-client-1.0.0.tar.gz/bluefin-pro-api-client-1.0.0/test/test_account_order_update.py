# coding: utf-8

"""
    Bluefin API

    Bluefin API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bluefin_pro_api_client.models.account_order_update import AccountOrderUpdate

class TestAccountOrderUpdate(unittest.TestCase):
    """AccountOrderUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountOrderUpdate:
        """Test AccountOrderUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountOrderUpdate`
        """
        model = AccountOrderUpdate()
        if include_optional:
            return AccountOrderUpdate(
                order_hash = '',
                client_order_id = '',
                market_address = '',
                account_address = '',
                price_e9 = '',
                quantity_e9 = '',
                side = 'LONG',
                leverage_e9 = '',
                is_isolated = True,
                salt = '',
                expires_at_utc_millis = 56,
                signed_at_utc_millis = 56,
                type = 'LIMIT',
                reduce_only = True,
                post_only = True,
                time_in_force = 'GTT',
                trigger_price_e9 = '',
                status = 'OPEN',
                self_trade_prevention_type = 'TAKER',
                created_at_utc_millis = 56,
                updated_at_utc_millis = 56,
                cancellation_reason = 'USER_CANCELLED',
                failure_to_cancel_reason = 'ORDER_NOT_FOUND',
                remaining_quantity_e9 = ''
            )
        else:
            return AccountOrderUpdate(
                order_hash = '',
                market_address = '',
                account_address = '',
                price_e9 = '',
                quantity_e9 = '',
                side = 'LONG',
                leverage_e9 = '',
                is_isolated = True,
                salt = '',
                expires_at_utc_millis = 56,
                signed_at_utc_millis = 56,
                type = 'LIMIT',
                reduce_only = True,
                post_only = True,
                time_in_force = 'GTT',
                status = 'OPEN',
                self_trade_prevention_type = 'TAKER',
                created_at_utc_millis = 56,
                updated_at_utc_millis = 56,
                cancellation_reason = 'USER_CANCELLED',
                remaining_quantity_e9 = '',
        )
        """

    def testAccountOrderUpdate(self):
        """Test AccountOrderUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
