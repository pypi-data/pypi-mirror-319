# coding: utf-8

"""
    Bluefin API

    Bluefin API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from bluefin_pro_api_client.models.orderbook_diff_depth_update import OrderbookDiffDepthUpdate

class TestOrderbookDiffDepthUpdate(unittest.TestCase):
    """OrderbookDiffDepthUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderbookDiffDepthUpdate:
        """Test OrderbookDiffDepthUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderbookDiffDepthUpdate`
        """
        model = OrderbookDiffDepthUpdate()
        if include_optional:
            return OrderbookDiffDepthUpdate(
                updated_at_utc_millis = 56,
                market_address = '',
                bids_e9 = [
                    [["10000000000","10000000000"],["9000000000","9000000000"]]
                    ],
                asks_e9 = [
                    [["10000000000","10000000000"],["9000000000","9000000000"]]
                    ],
                first_update_id = 56,
                last_update_id = 56
            )
        else:
            return OrderbookDiffDepthUpdate(
                updated_at_utc_millis = 56,
                market_address = '',
                bids_e9 = [
                    [["10000000000","10000000000"],["9000000000","9000000000"]]
                    ],
                asks_e9 = [
                    [["10000000000","10000000000"],["9000000000","9000000000"]]
                    ],
                first_update_id = 56,
                last_update_id = 56,
        )
        """

    def testOrderbookDiffDepthUpdate(self):
        """Test OrderbookDiffDepthUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
