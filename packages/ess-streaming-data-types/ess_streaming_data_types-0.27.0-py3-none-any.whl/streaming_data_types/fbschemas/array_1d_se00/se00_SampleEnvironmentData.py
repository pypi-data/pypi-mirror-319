# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class se00_SampleEnvironmentData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = se00_SampleEnvironmentData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsse00_SampleEnvironmentData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def se00_SampleEnvironmentDataBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x73\x65\x30\x30", size_prefixed=size_prefixed)

    # se00_SampleEnvironmentData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # se00_SampleEnvironmentData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # se00_SampleEnvironmentData
    def Channel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # se00_SampleEnvironmentData
    def PacketTimestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # se00_SampleEnvironmentData
    def TimeDelta(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # se00_SampleEnvironmentData
    def TimestampLocation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # se00_SampleEnvironmentData
    def ValuesType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # se00_SampleEnvironmentData
    def Values(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # se00_SampleEnvironmentData
    def Timestamps(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # se00_SampleEnvironmentData
    def TimestampsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int64Flags, o)
        return 0

    # se00_SampleEnvironmentData
    def TimestampsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # se00_SampleEnvironmentData
    def TimestampsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # se00_SampleEnvironmentData
    def MessageCounter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

def se00_SampleEnvironmentDataStart(builder): builder.StartObject(9)
def Start(builder):
    return se00_SampleEnvironmentDataStart(builder)
def se00_SampleEnvironmentDataAddName(builder, name): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return se00_SampleEnvironmentDataAddName(builder, name)
def se00_SampleEnvironmentDataAddChannel(builder, channel): builder.PrependInt32Slot(1, channel, 0)
def AddChannel(builder, channel):
    return se00_SampleEnvironmentDataAddChannel(builder, channel)
def se00_SampleEnvironmentDataAddPacketTimestamp(builder, packetTimestamp): builder.PrependInt64Slot(2, packetTimestamp, 0)
def AddPacketTimestamp(builder, packetTimestamp):
    return se00_SampleEnvironmentDataAddPacketTimestamp(builder, packetTimestamp)
def se00_SampleEnvironmentDataAddTimeDelta(builder, timeDelta): builder.PrependFloat64Slot(3, timeDelta, 0.0)
def AddTimeDelta(builder, timeDelta):
    return se00_SampleEnvironmentDataAddTimeDelta(builder, timeDelta)
def se00_SampleEnvironmentDataAddTimestampLocation(builder, timestampLocation): builder.PrependInt8Slot(4, timestampLocation, 0)
def AddTimestampLocation(builder, timestampLocation):
    return se00_SampleEnvironmentDataAddTimestampLocation(builder, timestampLocation)
def se00_SampleEnvironmentDataAddValuesType(builder, valuesType): builder.PrependUint8Slot(5, valuesType, 0)
def AddValuesType(builder, valuesType):
    return se00_SampleEnvironmentDataAddValuesType(builder, valuesType)
def se00_SampleEnvironmentDataAddValues(builder, values): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(values), 0)
def AddValues(builder, values):
    return se00_SampleEnvironmentDataAddValues(builder, values)
def se00_SampleEnvironmentDataAddTimestamps(builder, timestamps): builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(timestamps), 0)
def AddTimestamps(builder, timestamps):
    return se00_SampleEnvironmentDataAddTimestamps(builder, timestamps)
def se00_SampleEnvironmentDataStartTimestampsVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def StartTimestampsVector(builder, numElems):
    return se00_SampleEnvironmentDataStartTimestampsVector(builder, numElems)
def se00_SampleEnvironmentDataAddMessageCounter(builder, messageCounter): builder.PrependInt64Slot(8, messageCounter, 0)
def AddMessageCounter(builder, messageCounter):
    return se00_SampleEnvironmentDataAddMessageCounter(builder, messageCounter)
def se00_SampleEnvironmentDataEnd(builder): return builder.EndObject()
def End(builder):
    return se00_SampleEnvironmentDataEnd(builder)