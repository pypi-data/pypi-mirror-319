# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: functional_api.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

from . import common_pb2
from . import functional_api_pb2


class FunctionalServiceBase(abc.ABC):

    @abc.abstractmethod
    async def OpenPassWindow(self, stream: 'grpclib.server.Stream[common_pb2.ClientId, common_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def ClosePassWindow(self, stream: 'grpclib.server.Stream[common_pb2.ClientId, common_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SetFanSpeed(self, stream: 'grpclib.server.Stream[functional_api_pb2.SenderInfo, common_pb2.Empty]') -> None:
        pass

    @abc.abstractmethod
    async def SubscribeToFanSpeed(self, stream: 'grpclib.server.Stream[functional_api_pb2.SubscriberRequest, functional_api_pb2.Value]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/base.FunctionalService/OpenPassWindow': grpclib.const.Handler(
                self.OpenPassWindow,
                grpclib.const.Cardinality.UNARY_UNARY,
                common_pb2.ClientId,
                common_pb2.Empty,
            ),
            '/base.FunctionalService/ClosePassWindow': grpclib.const.Handler(
                self.ClosePassWindow,
                grpclib.const.Cardinality.UNARY_UNARY,
                common_pb2.ClientId,
                common_pb2.Empty,
            ),
            '/base.FunctionalService/SetFanSpeed': grpclib.const.Handler(
                self.SetFanSpeed,
                grpclib.const.Cardinality.UNARY_UNARY,
                functional_api_pb2.SenderInfo,
                common_pb2.Empty,
            ),
            '/base.FunctionalService/SubscribeToFanSpeed': grpclib.const.Handler(
                self.SubscribeToFanSpeed,
                grpclib.const.Cardinality.UNARY_STREAM,
                functional_api_pb2.SubscriberRequest,
                functional_api_pb2.Value,
            ),
        }


class FunctionalServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.OpenPassWindow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/base.FunctionalService/OpenPassWindow',
            common_pb2.ClientId,
            common_pb2.Empty,
        )
        self.ClosePassWindow = grpclib.client.UnaryUnaryMethod(
            channel,
            '/base.FunctionalService/ClosePassWindow',
            common_pb2.ClientId,
            common_pb2.Empty,
        )
        self.SetFanSpeed = grpclib.client.UnaryUnaryMethod(
            channel,
            '/base.FunctionalService/SetFanSpeed',
            functional_api_pb2.SenderInfo,
            common_pb2.Empty,
        )
        self.SubscribeToFanSpeed = grpclib.client.UnaryStreamMethod(
            channel,
            '/base.FunctionalService/SubscribeToFanSpeed',
            functional_api_pb2.SubscriberRequest,
            functional_api_pb2.Value,
        )
