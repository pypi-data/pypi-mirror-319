from datetime import timedelta
from typing import Optional, Tuple

class ManagerClient:
    def __init__(self, addr: str, timeout: timedelta) -> None: ...
    def quorum(
        self, room_id: str, rank: int, step: int, checkpoint_server_addr: str
    ) -> Tuple[int, int, int, str, str, int, Optional[int], int, bool]: ...
    def checkpoint_address(self, rank: int) -> str: ...
    def should_commit(self, rank: int, step: int, should_commit: bool) -> bool: ...

class Manager:
    def __init__(
        self,
        replica_id: str,
        lighthouse_addr: str,
        address: str,
        bind: str,
        store_addr: str,
        world_size: int,
    ) -> None: ...
    def address(self) -> str: ...
    def shutdown(self) -> None: ...

class Lighthouse:
    def __init__(self, bind: str, min_replicas: int) -> None: ...
    def address(self) -> str: ...
    def shutdown(self) -> None: ...
