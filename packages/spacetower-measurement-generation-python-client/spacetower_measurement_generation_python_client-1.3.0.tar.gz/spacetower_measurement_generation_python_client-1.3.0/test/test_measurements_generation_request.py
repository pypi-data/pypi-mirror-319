# coding: utf-8

"""
    Measurements Generation API

    Measurements Generation API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_measurement_generation_python_client.models.measurements_generation_request import MeasurementsGenerationRequest

class TestMeasurementsGenerationRequest(unittest.TestCase):
    """MeasurementsGenerationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MeasurementsGenerationRequest:
        """Test MeasurementsGenerationRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MeasurementsGenerationRequest`
        """
        model = MeasurementsGenerationRequest()
        if include_optional:
            return MeasurementsGenerationRequest(
                orbit_ephemeris_data = None,
                seed_id = 'A',
                measurements_requests = [
                    spacetower_measurement_generation_python_client.models.measurement_request.MeasurementRequest(
                        measurement_type = 'POSITION', )
                    ],
                data = {
                    'key' : ''
                    }
            )
        else:
            return MeasurementsGenerationRequest(
                orbit_ephemeris_data = None,
                measurements_requests = [
                    spacetower_measurement_generation_python_client.models.measurement_request.MeasurementRequest(
                        measurement_type = 'POSITION', )
                    ],
        )
        """

    def testMeasurementsGenerationRequest(self):
        """Test MeasurementsGenerationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
