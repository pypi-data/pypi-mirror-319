# coding: utf-8

"""
    Measurements Generation API

    Measurements Generation API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_measurement_generation_python_client.models.position_velocity_measurements_request import PositionVelocityMeasurementsRequest

class TestPositionVelocityMeasurementsRequest(unittest.TestCase):
    """PositionVelocityMeasurementsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PositionVelocityMeasurementsRequest:
        """Test PositionVelocityMeasurementsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PositionVelocityMeasurementsRequest`
        """
        model = PositionVelocityMeasurementsRequest()
        if include_optional:
            return PositionVelocityMeasurementsRequest(
                frame_id = 'EME2000',
                position_standard_deviation = spacetower_measurement_generation_python_client.models.position_standard_deviation.PositionStandardDeviation(
                    position_x_standard_deviation = 1.337, 
                    position_y_standard_deviation = 1.337, 
                    position_z_standard_deviation = 1.337, ),
                position_correlation_coefficients = spacetower_measurement_generation_python_client.models.position_correlation_coefficients.PositionCorrelationCoefficients(
                    position_xy_correlation = 1.337, 
                    position_xz_correlation = 1.337, 
                    position_yz_correlation = 1.337, ),
                velocity_standard_deviation = spacetower_measurement_generation_python_client.models.velocity_standard_deviation.VelocityStandardDeviation(
                    velocity_x_standard_deviation = 1.337, 
                    velocity_y_standard_deviation = 1.337, 
                    velocity_z_standard_deviation = 1.337, ),
                velocity_correlation_coefficients = spacetower_measurement_generation_python_client.models.velocity_correlation_coefficients.VelocityCorrelationCoefficients(
                    velocity_xy_correlation = 1.337, 
                    velocity_xz_correlation = 1.337, 
                    velocity_yz_correlation = 1.337, ),
                position_velocity_correlation_coefficients = spacetower_measurement_generation_python_client.models.position_velocity_correlation_coefficients.PositionVelocityCorrelationCoefficients(
                    position_x_velocity_x_correlation = 1.337, 
                    position_x_velocity_y_correlation = 1.337, 
                    position_x_velocity_z_correlation = 1.337, 
                    position_y_velocity_x_correlation = 1.337, 
                    position_y_velocity_y_correlation = 1.337, 
                    position_y_velocity_z_correlation = 1.337, 
                    position_z_velocity_x_correlation = 1.337, 
                    position_z_velocity_y_correlation = 1.337, 
                    position_z_velocity_z_correlation = 1.337, ),
                noise_frame_id = 'GLOBAL'
            )
        else:
            return PositionVelocityMeasurementsRequest(
                frame_id = 'EME2000',
        )
        """

    def testPositionVelocityMeasurementsRequest(self):
        """Test PositionVelocityMeasurementsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
