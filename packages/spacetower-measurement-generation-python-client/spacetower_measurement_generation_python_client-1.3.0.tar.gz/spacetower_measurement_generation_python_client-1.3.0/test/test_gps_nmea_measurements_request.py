# coding: utf-8

"""
    Measurements Generation API

    Measurements Generation API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_measurement_generation_python_client.models.gps_nmea_measurements_request import GpsNmeaMeasurementsRequest

class TestGpsNmeaMeasurementsRequest(unittest.TestCase):
    """GpsNmeaMeasurementsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GpsNmeaMeasurementsRequest:
        """Test GpsNmeaMeasurementsRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GpsNmeaMeasurementsRequest`
        """
        model = GpsNmeaMeasurementsRequest()
        if include_optional:
            return GpsNmeaMeasurementsRequest(
                geodetic_latitude_standard_deviation = 1.337,
                longitude_standard_deviation = 1.337,
                geodetic_altitude_standard_deviation = 1.337,
                ecf_velocity_norm_standard_deviation = 1.337,
                earth_ellipsoid_configuration = spacetower_measurement_generation_python_client.models.earth_ellipsoid_configuration.EarthEllipsoidConfiguration(
                    earth_fixed_frame_id = 'ITRF2020', 
                    ellipsoid_id = 'WGS84', 
                    include_tidal_effects_in_eop_interpolation = True, )
            )
        else:
            return GpsNmeaMeasurementsRequest(
        )
        """

    def testGpsNmeaMeasurementsRequest(self):
        """Test GpsNmeaMeasurementsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
