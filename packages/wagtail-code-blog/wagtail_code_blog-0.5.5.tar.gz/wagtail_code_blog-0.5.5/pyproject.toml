[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "wagtail-code-blog"
version = "0.5.5"
license = "MIT"
description = "A wagtail code blog"
authors = ["Dani Hodovic <dani.hodovic@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/honeylogic-io/wagtail-code-blog"
repository = "https://github.com/honeylogic-io/wagtail-code-blog"
documentation = "https://github.com/honeylogic-io/wagtail-code-blog"
include = ["wagtail_code_blog/static/wagtail_code_blog/output.css"]
keywords = ["wagtail", "django", "blog", "cms"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 5.0",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
wagtail = "5.* || 6.* || 7.*"
wagtail-metadata = "4.* || 5.* || 6.*"
readtime = "1.* || 2.* || 3.*"
beautifulsoup4 = "4.*"
django-json-ld = "0.*"
django-model-utils = "4.* || 5.*"
django = "3.* || 4.* || 5.*"

[tool.poetry.group.dev.dependencies]
pudb = "2022.1.2"
pytest = "^8.0.2"
pytest-django = "^4.8.0"
pytest-gitignore = "^1.3"
pytest-cov = "^4.1.0"
coverage = "^7.4.3"
django-stubs = "^4.2.7"
black = "^24.2.0"
mypy = "^1.8.0"
beautifulsoup4 = "^4.12.3"
django-extensions = "^3.2.3"
isort = "^5.13.2"
pylint = "^3.1.0"
pylint-django = "^2.5.5"
werkzeug = "^3.0.1"
wagtail-markdown = "^0.10.0"
tox = "^4.13.0"
django-browser-reload = "^1.12.1"

[tool.pytest.ini_options]
addopts = "--ds=tests.settings --reuse-db --pdbcls=pudb.debugger:Debugger"
python_files = "tests.py test_*.py"
norecursedirs = ".git */migrations/* */static/* venv .venv .poetry .virtualenv node_modules"

[tool.black]
exclude = ".*(venv|virtualenv|.poetry|migrations|node_modules|.tox)"

[tool.isort]
skip_glob = "**/migrations/*.py,**/fixtures/*.py,infra/**/*.py"
# https://github.com/psf/black/issues/251#issuecomment-535187912
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]
exclude = [".venv", "migrations.*"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.pylint.'MASTER']
load-plugins = "pylint_django"
ignore = "manage.py"

[tool.pylint.'FORMAT']
max-line-length = 150

[tool.pylint.'MESSAGES CONTROL']
disable = "missing-docstring,invalid-name,logging-fstring-interpolation,fixme,duplicate-code"

[tool.pylint.'DESIGN']
max-parents = 13

[tool.pylint.'SIMILARITIES']
# Minimum lines number of a similarity.
min-similarity-lines = 4
# Ignore comments when computing similarities.
ignore-comments = "yes"
# Ignore docstrings when computing similarities.
ignore-docstrings = "yes"
# Ignore imports when computing similarities.
ignore-imports = "yes"

[tool.djlint]
ignore = "H006,H030,H031"
profile = "django"
preserve_blank_lines = true
use_gitignore = true
format_css = true
format_js = true
