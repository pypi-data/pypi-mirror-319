Metadata-Version: 2.1
Name: pysparta
Version: 0.5.6
Summary: Library to help ETL using pyspark
Home-page: https://github.com/jcpsantos/sparta
Author: Juan Caio
Author-email: juancaiops@gmail.com
License: GNU General Public License v2.0
Project-URL: Source code, https://github.com/jcpsantos/sparta
Project-URL: Documentation, https://jcpsantos.github.io/sparta/
Keywords: spark etl data sparta
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Internationalization
Requires-Python: >= 3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: azure-storage-blob>=12.12.0
Requires-Dist: boto3>=1.20.24
Requires-Dist: chispa>=0.9.2
Requires-Dist: pyspark>=3.2.1
Requires-Dist: pytest>=3.2.2
Requires-Dist: PyYAML>=6.0
Requires-Dist: smart-open>=6.0.0
Requires-Dist: delta-spark>=3.2.1
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-cov>=3.0.0; extra == "dev"
Requires-Dist: mypy>=0.942; extra == "dev"
Requires-Dist: types-pyyaml>=6.0.7; extra == "dev"
Requires-Dist: flake8>=4.0.1; extra == "dev"
Requires-Dist: docstr-coverage>=2.2.0; extra == "dev"

# Sparta

Library to help ETL using Pyspark.

Sparta is a simple library to help you work on ETL builds using PySpark.

## Important Sources

- <a href="https://spark.apache.org/">Apache Spark</a>
- <a href="https://pypi.org/project/smart-open/">Smart Open</a>
- <a href="https://github.com/MrPowers/chispa">Chispa</a>

## Installation

Install the latest version with ```pip install pysparta```

## Documentation

<a href="https://jcpsantos.github.io/sparta/">Sparta</a>

## Modules

### Extract

This is a module with functions for extracting and reading data.

**Example**

```python
from sparta.extract import read_with_schema

schema = 'epidemiological_week LONG, date DATE, order_for_place INT, state STRING, city STRING, city_ibge_code LONG, place_type STRING, last_available_confirmed INT'
path = '/content/sample_data/covid19-e0534be4ad17411e81305aba2d9194d9.csv'
df = read_with_schema(path, schema, {'header': 'true'}, 'csv')
```

### Transformation

This is a module with data transformation functions

**Example**

```python
from sparta.transformation import drop_duplicates

cols = ['longitude','latitude']
df = drop_duplicates(df, 'population', cols)
```

### Load

This is a module with load and write functions.

**Example**

```python
from sparta.load import create_hive_table

create_hive_table(df, "table_name", 5, "col1", "col2", "col3")
```

### Others

This is a module with several functions that can help in ETL work.

**Example**

```python
from sparta.secret import get_secret_aws

get_secret_aws('Nome_Secret', 'sa-east-1')
```

## Supported PySpark / Python versions

Sparta currently supports PySpark 3.0+ and Python 3.7+.
