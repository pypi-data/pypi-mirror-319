# pyproject.toml
[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"


[project]
name = "shell-themer"
description = "Use consistent color themes for a variety of command line tools."
readme = "README.md"
authors = [
    {name = "Jared Crapo", email = "jared@kotfu.net"},
]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Topic :: Utilities",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["shell", "bash", "theme", "command line"]
requires-python = ">=3.9"
dependencies = [
    "rich",
    "rich_argparse",
    "tomlkit",
]
dynamic = ["version"]


[project.optional-dependencies]
dev = [
    "build",
    "pytest",
    "pytest-mock",
    "pytest-cov",
    "codecov",
    "pylint",
    "ruff",
    "wheel",
    "twine",
    "rope",
    "invoke",
]


[tool.setuptools_scm]
# empty section is the equivilent of setuptools_scm=True in setup.py


[tool.setuptools.packages.find]
where = ["src"]


[project.scripts]
shell-themer = "shell_themer.themer:Themer.main"


[project.urls]
homepage = "https://github.com/kotfu/shell-themer"
repository = "https://github.com/kotfu/shell-themer"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov-report=term-missing --cov=src/shell_themer"


[tool.pylint."MESSAGES CONTROL"]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence = ''

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable = '''duplicate-code,
'''

[tool.ruff]
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]
