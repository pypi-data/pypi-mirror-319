[tool.poetry]
name = "mvbc"
version = "0.1.0"
description = "This is a Python package to directly interact with the Meetnet Vlaamse Banken api and get the publically available weather data in the Belgian North Sea directly."
authors = ["Maximillian Weil <maximillian.f.weil@gmail.com>"]
repository = "https://github.com/WEILMAX/mvbc"
documentation = "https://WEILMAX.github.io/mvbc/"
readme = "README.md"
packages = [
  {include = "mvbc"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = ">=1.19.4"
pandas = ">=1.15"
geopy = "^2.4.1"
pydantic = "<2.0"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.16.2"
mypy = "^1.5.1"
pre-commit = "^3.4.0"
tox = "^4.11.1"
hypothesis = "^6.112.1"
pytest-mock = "^3.14.0"
types-pytz = "^2024.2.0.20240913"
types-requests = "^2.32.0.20240914"
pandas-stubs = { version = "^2.2.2.240909", python = ">=3.10" }
notebook = "^7.2.2"
ipykernel = "^6.29.5"
python-dotenv = "^1.0.1"
toml = "^0.10.2"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["mvbc"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "geopy"
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py39"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["mvbc"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
