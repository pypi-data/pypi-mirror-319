"""
OCR-related constants for handling common OCR character recognition mistakes,
correcting OCR errors in text data, or other OCR-related tasks.
"""

# imports
from typing import Dict, List, Tuple

# common OCR character confusion pairs (derived from ocr_confusions)
ocr_confusions = {
    # (Previous definition of ocr_confusions from above goes here)
    "vertical_similarity": {
        "i": ["l", "I", "1", "!", "|", "¦"],
        "l": ["i", "I", "1", "!", "|", "¦"],
        "I": ["i", "l", "1", "!", "|", "¦"],
        "1": ["i", "l", "I", "!", "|", "¦"],
        "!": ["i", "l", "I", "1", "|", "¦"],
        "|": ["i", "l", "I", "1", "!", "¦"],
        "¦": ["i", "l", "I", "1", "!", "|"],
        "t": ["f", "†"],
        "f": ["t", "†"],
        "†": ["t", "f"],
        "r": ["n", "v"],
        "n": ["r", "u"],
        "k": ["K"],
        "K": ["k"],
    },
    "horizontal_similarity": {
        "c": ["e", "<", "(", "{", "‹"],
        "e": ["c", "s"],
        "s": ["e", "z", "5"],
        "o": ["a", "c"],
        "a": ["o"],
        "u": ["n"],
        "n": ["u"],
        "-": ["_", "–", "—", "=", "~", "≈", "≡"],
        "_": ["-", "–", "—"],
        "–": ["-", "_", "—"],
        "—": ["-", "_", "–"],
        "=": ["≡", "≈", "≠"],
        "≡": ["=", "~"],
        "~": ["-", "≈", "∼"],
        "≈": ["-", "=", "~", "∼"],
        "∼": ["-", "~", "≈"],
        "≠": ["="],
        "m": ["w"],
        "w": ["m"],
        "H": ["=", "–", "—"],
        "x": ["×"],
        "×": ["x"],
        "z": ["s"],
    },
    "closed_loop_similarity": {
        "o": ["O", "0", "Q", "a", "d", "p", "D"],
        "O": ["o", "0", "Q", "D"],
        "0": ["o", "O", "Q", "D"],
        "Q": ["o", "O", "0"],
        "D": ["O", "0", "P", "R", "B"],
        "P": ["R", "D", "F"],
        "R": ["P", "D", "A"],
        "B": ["8", "D", "E"],
        "8": ["B", "3"],
        "g": ["q", "9", "y", "a"],
        "q": ["g", "9", "p", "b", "d"],
        "9": ["g", "q", "a"],
        "a": ["g", "9"],
        "p": ["q", "b"],
        "b": ["p", "d", "q", "6"],
        "d": ["p", "b"],
        "6": ["b"],
    },
    "angle_and_curve_similarity": {
        "v": ["u", "y", "V", "U", "Y"],
        "u": ["v", "n", "U"],
        "y": ["v", "g", "Y", "V", "q"],
        "z": ["2", "s", "Z"],
        "2": ["z", "s"],
        "s": ["z", "2", "5"],
        "5": ["S", "s"],
        "S": ["5", "s"],
        "n": ["h", "r", "u"],
        "h": ["n", "b", "li"],
        "b": ["h"],
        "li": ["h"],
        "A": ["R", "H"],
        "R": ["A"],
        "w": ["vv", "v", "u"],
        "vv": ["w"],
        "g": ["y"],
        "q": ["y"],
        "7": ["r"],
        "r": ["7"],
        "K": ["X"],
        "X": ["K"],
        "Y": ["V"],
        "V": ["Y", "U"],
        "U": ["V"],
        "<": ["(", "{", "[", "‹"],
        "(": ["<", "{", "[", "‹"],
        "{": ["<", "(", "[", "‹"],
        "[": ["<", "(", "{", "‹"],
        "‹": ["<", "(", "{", "["],
    },
    "dot_similarity": {
        "i": [":", ";", "!", "í", "ì", "ï", "î"],
        ":": ["i", ";"],
        ";": ["i", ":", "j"],
        "j": ["i", ";", "]", "}"],
        "í": ["i"],
        "ì": ["i"],
        "ï": ["i"],
        "î": ["i"],
        "%": ["8"],
        "8": ["%"],
    },
    "broken_character_similarity": {
        "m": ["rn", "nn", "iii", "in", "w"],
        "rn": ["m"],
        "nn": ["m"],
        "iii": ["m"],
        "cl": ["d", "e"],
        "d": ["cl"],
        "w": ["vv", "uu"],
        "vv": ["w"],
        "uu": ["w"],
        "in": ["m"],
        "ri": ["n"],
        "n": ["ri"],
        "cj": ["g"],
        "g": ["cj"],
        "li": ["h"],
        "h": ["li", "b", "n"],
        "E": ["F", "L", "C"],
        "F": ["E", "P"],
        "L": ["E"],
        "C": ["E"],
        "B": ["E", "D"],
        "P": ["F"],
        "H": ["N", "M"],
        "N": ["H"],
        "M": ["H"],
        "b": ["h"],
        "]": ["}"],
        "}": ["]"],
    },
    "near_identical_uppercase_lowercase": {
        "c": ["C"],
        "C": ["c"],
        "o": ["O"],
        "O": ["o"],
        "p": ["P"],
        "P": ["p"],
        "s": ["S"],
        "S": ["s"],
        "u": ["U"],
        "U": ["u"],
        "v": ["V"],
        "V": ["v"],
        "w": ["W"],
        "W": ["w"],
        "x": ["X"],
        "X": ["x"],
        "z": ["Z"],
        "Z": ["z"],
        "k": ["K"],
        "K": ["k"],
    },
    "context_dependent": {
        "rn": ["m"],
        "m": ["rn"],
        "vv": ["w"],
        "w": ["vv"],
        "cl": ["d"],
        "d": ["cl"],
    },
    "punctuation_and_symbol_confusion": {
        ".": [",", "'", "`", "’", "”", "“"],
        ",": [".", "'", "`", "’"],
        "'": [",", ".", "`", "’"],
        "`": [",", ".", "'", "’"],
        "’": [",", ".", "'", "`"],
        '"': ["“", "”", "``", "''", "”"],
        "“": ['"', "”"],
        "”": ['"', "“"],
        "``": ['"'],
        "''": ['"'],
        "-": ["–", "—", "_"],
        "–": ["-", "—", "_"],
        "—": ["-", "–", "_"],
        "_": ["-", "–", "—"],
        "/": ["\\", "1", "7", "l"],
        "\\": ["/"],
        "(": [")", "{", "}", "[", "]", "c", "C", "<", ">"],
        ")": ["(", "{", "}", "[", "]", "c", "C", "<", ">"],
        "{": ["(", ")", "}", "[", "]", "c", "C", "<", ">"],
        "}": ["(", ")", "{", "[", "]", "c", "C", "<", ">"],
        "[": ["(", ")", "{", "}", "]", "c", "C", "<", ">"],
        "]": ["(", ")", "{", "}", "[", "c", "C", "<", ">"],
        "<": ["(", ")", "{", "}", "[", "]", "c", "C", ">", "‹"],
        ">": ["(", ")", "{", "}", "[", "]", "c", "C", "<", "›"],
        "*": ["+", "x", "×"],
        "+": ["*", "t", "†"],
        "=": ["≈", "≡", "≠"],
        "%": ["°", "‰"],
        "°": ["%"],
        "‰": ["%"],
        "$": ["S", "5", "s"],
        "&": ["8"],
        "8": ["&"],
        "@": ["a"],
        "a": ["@"],
    },
    "special_character_confusion": {
        "©": ["(c)", "(C)"],
        "(c)": ["©"],
        "(C)": ["©"],
        "®": ["(r)", "(R)"],
        "(r)": ["®"],
        "(R)": ["®"],
        "™": ["TM", "tm"],
        "TM": ["™"],
        "tm": ["™"],
        "§": ["S", "5"],
        "S": ["§"],
        "5": ["§"],
    },
}

OCR_PAIRS: List[Tuple[str, str]] = []
for char_set in ocr_confusions.values():
    for char, similar_chars in char_set.items():
        for similar_char in similar_chars:
            OCR_PAIRS.append((char, similar_char))

# Create a reverse mapping
REVERSE_OCR_PAIRS: List[Tuple[str, str]] = [(b, a) for a, b in OCR_PAIRS]

# Combine both directions for a complete set of possible substitutions
ALL_OCR_PAIRS: Tuple[Tuple[str, str], ...] = tuple(OCR_PAIRS + REVERSE_OCR_PAIRS)

# Map each character to its possible OCR mistakes
OCR_ERROR_MAPPING: Dict[str, Tuple[str, ...]] = {}
for a in set(a for a, _ in ALL_OCR_PAIRS):
    OCR_ERROR_MAPPING[a] = tuple({b for a_, b in ALL_OCR_PAIRS if a_ == a})
