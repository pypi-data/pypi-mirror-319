[tool.poetry]
name = "annofabapi-3dpc-extensions"
version = "0.3.0"  # `poetry-dynamic-versioning`を使ってGitHubのバージョンタグを取得している。変更不要
description = "annofabapiの3DPC Editor用の拡張機能です。"
authors = ["Kurusugawa Computer Inc."]
packages = [
    { include = "annofab_3dpc" }
]
readme="README.md"
repository="https://github.com/kurusugawa-computer/annofabapi-3dpc-extensions"
classifiers = [
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "Topic :: Utilities",
        "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = "^3.9"
dataclasses-json="*"
numpy = "*"


[tool.poetry.group.test.dependencies]
pytest = "^8"
pytest-xdist = "*"
# テストコードで利用するため
annofabapi = ">=0.47.0"


[tool.poetry.group.linter.dependencies]
# pythonバージョンを指定している理由：Python3.11（開発環境）でしかlintを実行していないため
ruff = {version="^0.8", python=">=3.11"}
mypy = {version="^1", python=">=3.11"}
pylint = {version="^3", python=">=3.11"}


[tool.poetry.group.documentation.dependencies]
# ドキュメント生成用のライブラリ
# `python=">=3.11"`を指定している理由：Pytyhon3.11を利用している開発環境かReadTheDocsでしかドキュメントを生成しないため
sphinx = {version="^8", python=">=3.11"}
pydata-sphinx-theme = {version=">=0.13", python=">=3.11"}


[tool.poetry.group.dev-only.dependencies]
# wheelファイルをビルドすると時間がかかるため、python3.13のwheelファイルが存在するバージョンを明示する
numpy = {version = ">=2.1", python = ">=3.13"}


[tool.mypy]
ignore_missing_imports = true

check_untyped_defs = true

plugins = "numpy.typing.mypy_plugin"

[tool.ruff]
target-version = "py39"
line-length = 120


[tool.ruff.lint]
ignore = [
    "G004", # `logging-f-string` : loggingでf-stringを使いたいので無視する
    "PD901", #すでに`df`という変数をいろんなところで使っているため
    "PD002", #すでにpandasで`inplace=True`はいろんなところで使っているため
    "RUF001", # 全角記号など`ambiguous unicode character`も使いたいため
    "RUF002",# 全角記号など`ambiguous unicode character`も使いたいため
    "RUF003",# 全角記号など`ambiguous unicode character`も使いたいため
    "PLC1901", # compare-to-empty-string : `if a == "`のように空文字列で直接比較したいときがあるため
    "PLR2004", # magic-value-comparison: listのサイズで判定するときがよくあるため
    "ERA", # : 役立つこともあるが、コメントアウトしていないコードも警告されるので無視する
    "PERF203", # try-except-in-loop: ループ内でtry-exceptを使うこともあるため無視する。
    "FIX", # TODOやFIXMEを使うため無視する
    "TD", # TODOコメントの書き方に気にしていないので無視する

    # 以下のルールはプロジェクトのコードに合っていないので無効化した
    "RSE", # flake8-raise
    "D", # pydocstyle, Docstringを中途半端にしか書いていないので、除外する
    "C90", # mccabe
    "T20", # flake8-print
    "SLF", #  flake8-self
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "TRY", # tryceratops
    "COM", # flake8-commas
    "S", # flake8-bandit
    "EM",#flake8-errmsg
    "EXE", # flake8-executable
    "ICN", # flake8-import-conventions
    "RET",#flake8-return
    "SIM",#flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", #pathlibを使わないコードが多いので、除外する
    "ISC", #flake8-implicit-str-concat
    "N", # pep8-naming
    "PT", # flake8-pytest-style
]

select = [
    "ALL"
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pyupgrade]
# `typing.Optional`を使っているため、UP007のルールを無視する
# https://beta.ruff.rs/docs/settings/#keep-runtime-typing
# Python 3.9のサポートを終了したら、この設定を除去する
keep-runtime-typing = true

[tool.ruff.lint.pylint]
max-args = 10

[tool.poetry-dynamic-versioning]
enable = false

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

