Metadata-Version: 2.1
Name: icdcodex
Version: 0.5.2
Summary: graphical and continuous representations of ICD-9 and ICD-10 codes
Home-page: https://github.com/icd-codex/icd-codex
Author: Jeremy Fisher
Author-email: jeremy@adamsfisher.me
License: MIT license
Keywords: icdcodex
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Description-Content-Type: text/markdown
License-File: LICENSE

[![PyPI version fury.io](https://badge.fury.io/py/icdcodex.svg)](https://pypi.python.org/pypi/icdcodex/)
[![Documentation Status](https://readthedocs.org/projects/icd-codex/badge/?version=latest)](http://icd-codex.readthedocs.io/?badge=latest)
[![Downloads](https://pepy.tech/badge/icdcodex)](https://pepy.tech/project/icdcodex)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.4300935.svg)](https://doi.org/10.5281/zenodo.4300935)

```{admonition} Maintenance mode
Thank you for your interest in ICD codex! I (Jeremy) wrote this in 2020 as part of class project and it has gotten quite a few downloads. However, since then, sequence representation has significantly improved. At this point, **I would not recommend using node2vec to represent ICD codes.** Instead, use a [language model](https://platform.openai.com/docs/guides/embeddings). The node2vec functionality is provided for compatibility with existing projects.

The `networkx` hierarchy should still remains useful.

If there is interest in extending this library for use with modern sequence learning algorithms, please reach out.
```
## What is it?
A python library for building vector representations of ICD-9 and ICD-10 codes. (2025 comment: the vector representations here are constructed using outdated algorithms.) Because it takes advantage of the hierarchical nature of ICD codes, it also provides these hierarchies in a [`networkx`](https://networkx.github.io) format. (2025 comment: this data structure should still remain useful.)

## Motivation
`icdcodex` was the first prize winner in the Data Driven Healthcare Track of John Hopkins' [MedHacks 2020](https://medhacks2020.devpost.com). It was hacked together to address the problem of [ICD](https://en.wikipedia.org/wiki/ICD-10) miscodes, which is a major issue for health insurance in the United States. Indeed, while ICD coding is tedious and labour intensive, it is not obvious how to automate because the output space is enourmous. For example, ICD-10 CM (clinical modification) has over 70,000 codes and growing.

There are [many strategies](https://maxhalford.github.io/blog/target-encoding/) for target encoding that address these issues. `icdcodex` has two features that make ICD classification more amenable to modeling:
- Access to a `networkx` tree representation of the ICD-9 and ICD-10 hierarchies
- Vector embeddings of ICD codes using the [node2vec](https://arxiv.org/abs/1607.00653) algorithm (including pre-computed embeddings and an interface to create new embeddings)

## Example Code
```python
from icdcodex import icd2vec, hierarchy
embedder = icd2vec.Icd2Vec(num_embedding_dimensions=64)
embedder.fit(*hierarchy.icd9())
X = get_patient_covariates()
y = embedder.to_vec(["0010"])  # Cholera due to vibrio cholerae
```
In this case, `y` is a 64-dimensional vector close to other `Infectious And Parasitic Diseases` codes. 

## Related Work
- node2vec [Paper](https://cs.stanford.edu/people/jure/pubs/node2vec-kdd16.pdf), [Website](https://snap.stanford.edu/node2vec/), [Code](https://github.com/snap-stanford/snap/tree/master/examples/node2vec), [Alternate Code](https://github.com/eliorc/node2vec)
- Learning Low-Dimensional Representations of Medical Concepts: [Paper](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5001761/), [Code](https://github.com/clinicalml/embeddings)

## The Hackathon Team
- Jeremy Fisher (Maintainer)
- Alhusain Abdalla
- Natasha Nehra
- Tejas Patel
- Hamrish Saravanakumar

## Documentation

See the full documentation: [https://icd-codex.readthedocs.io/en/latest/](https://icd-codex.readthedocs.io/en/latest/)

## Contributions

[Contributions are always welcome!](https://icd-codex.readthedocs.io/en/latest/contributing.html)


# History

## 0.5.2 (2025-01-05)

- Added 2025 ICD-10-CM
- Bumped deps
- Removed EOL python's from CI
- Fix bug where 2024 codes are being pulled from 2023
- Fixed some flake8 bugs
- Fixed use of deprecated field in [networkx](https://networkx.org/documentation/networkx-2.8.7/reference/readwrite/generated/networkx.readwrite.json_graph.tree_graph.html)

## 0.4.9, 0.5.0 and 0.5.1 (2024-01-08)

- Added 2024 ICD-10-CM
- Fixed a bug where the node descriptions were being discarded
- Regenerated the hierarchy files with the descriptions

## 0.4.8 (2023-05-02)

- Use the newer scikit-learn PyPI location
- Deprecate the Python 3.6 version
- Add 2023 ICD-10-CM

## 0.4.6 (2022-10-13)

- Add 2022 ICD-10-CM (thank you @keithcallenberg!)

## 0.4.4 and 0.4.5 (2020-10-18)

- Add the code descriptions for ICD9
- Add usage on how to recapitulate functionality of sirrice/icd9
- Make the hierarchy directed to allow simpler and more intuitive traversal
- Fix issue where edges were not being formed between "Diseases Of The Blood And Blood-Forming Organs" and "Congenital Anomalies" and their children

## 0.4.3 (2020-10-04)

- Fix issue where hierarchy jsons were not being shipped with the pypi distribution

## 0.4.2 (2020-10-03)

- Add support for python <= 3.8 in the `hierarchy` module by using the `importlib.resources` backport

## 0.4.1 (2020-09-11)

- Update PyPI metadata

## 0.4.0 (2020-09-11)

- ICD-10-CM (2019 to 2020) codes are now fully present (whereas hackathon version missed certain codes)
- Versions of the ICD 9 and ICD-10-CM hierarchies are now cached to the `data` module
- Changed the hierarchy API: `hierarchy.icd9hierarchy()` is now `hierarchy.icd9()`. Ditto for ICD-10-CM.

## 0.3.0 (2020-09-05)

- Finesse API, now consistent between documentation and implementation

## 0.1.0 (2020-09-04)

- First release on PyPI, testing the waters during hackathon
