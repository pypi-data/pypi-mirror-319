[tool.poetry]
name = "fastapi-cache2-fork"
version = "0.7.1"
description = "Cache for FastAPI. An opinionated fork of fastapi-cache library that uses msgspec for json encoding/decoding where possible"
authors = ["long2ice <long2ice@gmail.com>", "Yolley <comingreal@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/Yolley/fastapi-cache"
repository = "https://github.com/Yolley/fastapi-cache.git"
documentation = "https://github.com/Yolley/fastapi-cache"
keywords = ["fastapi", "cache", "caching"]
packages = [{ include = "fastapi_cache" }]
include = ["LICENSE", "README.md"]

[tool.poetry.dependencies]
python = "^3.11"
aiomcache = { version = "^0", optional = true }
aiobotocore = {version = "^2.13.1", optional = true}
fastapi = "*"
msgspec = "^0"
pydantic = "^2.5.2"
redis = { version = ">=5,<6", optional = true }

[tool.poetry.group.dev.dependencies]
asgi-lifespan = "*"
anyio = "*"
coverage = ">=6.5,<8.0"
httpx = "*"
pendulum = "^3.0.0"
pytest = "*"
requests = "*"
tox = "^4.11.3"
towncrier = "^22.12.0"
uvicorn = "*"

[tool.poetry.group.linting.dependencies]
mypy = "^1.5.1"
pyright = "^1.1.306"
ruff = "^0.1.5"
types-aiobotocore = { extras = ["dynamodb"], version = "^2.7.0" }
types-redis = "^4.6.0.10"

[tool.poetry.group.distributing]
optional = true

[tool.poetry.group.distributing.dependencies]
twine = "^5.1.1"

[tool.poetry.extras]
redis = ["redis"]
memcache = ["aiomcache"]
dynamodb = ["aiobotocore"]
all = ["redis", "aiomcache", "aiobotocore"]

[tool.mypy]
files = ["."]
python_version = "3.11"
# equivalent of --strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = "examples.*.main"
ignore_errors = true

[tool.towncrier]
directory = "changelog.d"
filename = "CHANGELOG.md"
package = "fastapi_cache"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/changelog_template.jinja"
title_format = "## [{version}](https://github.com/Yolley/fastapi-cache/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/Yolley/fastapi-cache/issues/{issue})"

[tool.pyright]
strict = ["fastapi_cache", "tests"]
pythonVersion = "3.11"

[tool.pytest.ini_options]
addopts = "-p no:warnings"

[tool.ruff]
ignore = ["E501"]
line-length = 120
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
    "S",  # flake8-bandit
    "W",  # pycodestyle warnings
    "UP", # pyupgrade
]
target-version = "py311"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
