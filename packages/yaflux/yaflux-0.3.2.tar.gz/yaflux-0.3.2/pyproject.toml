[project]
name = "yaflux"
version = "0.3.2"
description = "A lightweight, declarative framework for python analysis workflows."
readme = "README.md"
authors = [
    { name = "noam teyssier", email = "22600644+noamteyssier@users.noreply.github.com" },
]
dependencies = []
requires-python = ">=3.10"

[project.optional-dependencies]
viz = ["graphviz>=0.20.3"]
anndata = ["anndata>=0.7.6"]
numpy = ["numpy>=1.24.0"]
pandas = ["pandas>=2.0.0", "pyarrow>=18.0.0"]
io = ["yaflux[anndata,numpy,pandas]"]
full = ["yaflux[viz,io]"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
docs = [
    "myst-parser>=4.0.0",
    "numpydoc>=1.8.0",
    "pydata-sphinx-theme>=0.16.0",
    "sphinx-autodoc-typehints>=2.5.0",
    "sphinx>=8.1.3",
]
testing = [
    "pytest>=8.3.4",
    "yaflux[io]",    # for testing serialization
]
linting = ["ruff>=0.8.2"]
type-checking = ["pyright>=1.1.390"]
dev = [
    { include-group = "testing" },
    { include-group = "linting" },
    { include-group = "type-checking" },
    { include-group = "docs" },
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # flake8
    "W",   # pyflakes
    "C90", # complexity
    "I",   # isort
    "N",   # naming
    "B",   # bugbear
    "D",   # docstring
    "UP",  # pyupgrade
    "RUF", # ruff-specific
    "SIM", # simplify
]
ignore = [
    "D100", # undocumented-public-module
    "D104", # undocumented-public-package
    "D105", # undocumented-magic-method
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D", # docstring
]
