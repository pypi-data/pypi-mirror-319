[project]
name = "llms-txt-action"
version = "1.0.2"
description = "GitHub Action to make documentation more accessible to LLMs."
authors = [
    {name = "DemoDrive AI", email = "founders@demodrive.tech"}
]
license = {text = "MIT"}
readme = "README.md"
keywords = ["llm", "documentation", "github-action"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation"
]
requires-python = ">=3.9"
dependencies = [
    "requests>=2.31.0",
    "firecrawl-py>=1.6.8",
    "rich>=13.9.4",
    "docling>=2.14.0",
    "defusedxml>=0.7.1",
    "litellm>=1.56.8"
]

[project.urls]
Homepage = "https://github.com/demodrive-ai/llms-txt-action"
Repository = "https://github.com/demodrive-ai/llms-txt-action"

[project.scripts]
llms-txt = "llms_txt_action.entrypoint:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "ruff>=0.8.4",
    "pre-commit>=3.6.0",
    "pytest-cov>=4.1.0",
    "bandit>=1.7.8",
    "safety>=3.0.1"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "S",   # bandit
    "BLE", # blind-except
    "FBT", # boolean-trap
    "A",   # builtins
    "COM", # commas
    "C4",  # comprehensions
    "DTZ", # datetimez
    "T10", # debugger
    "EM",  # errmsg
    "G",   # logging-format
    "ISC", # implicit-str-concat
    "ICN", # import-conventions
    "PIE", # misc
    "PT",  # pytest
    "Q",   # quotes
    "RSE", # raise
    "RET", # return
    "SLF", # self
    "SIM", # simplify
    "TID", # tidy-imports
    "ARG", # unused-arguments
    "PTH", # use-pathlib
    "ERA", # eradicate
    "PD",  # pandas-vet
    "PGH", # pygrep-hooks
    "PL",  # pylint
    "TRY", # tryceratops
    "RUF", # ruff
]
ignore = []

[tool.ruff.isort]
known-first-party = ["docs_actions"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.pytest.ini_options]
addopts = "--cov=docs_actions --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["docs_actions"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]
