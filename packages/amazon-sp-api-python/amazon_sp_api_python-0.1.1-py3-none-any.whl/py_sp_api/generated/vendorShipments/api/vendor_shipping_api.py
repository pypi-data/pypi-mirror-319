# coding: utf-8

"""
    Selling Partner API for Retail Procurement Shipments

    The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from datetime import datetime
from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from py_sp_api.generated.vendorShipments.models.get_shipment_details_response import GetShipmentDetailsResponse
from py_sp_api.generated.vendorShipments.models.get_shipment_labels import GetShipmentLabels
from py_sp_api.generated.vendorShipments.models.submit_shipment_confirmations_request import SubmitShipmentConfirmationsRequest
from py_sp_api.generated.vendorShipments.models.submit_shipment_confirmations_response import SubmitShipmentConfirmationsResponse
from py_sp_api.generated.vendorShipments.models.submit_shipments import SubmitShipments

from py_sp_api.generated.vendorShipments.api_client import ApiClient, RequestSerialized
from py_sp_api.generated.vendorShipments.api_response import ApiResponse
from py_sp_api.generated.vendorShipments.rest import RESTResponseType


class VendorShippingApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_shipment_details(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort in ascending or descending order by purchase order creation date.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="Used for pagination when there are more shipments than the specified result size limit.")] = None,
        created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        current_shipment_status: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Current shipment status.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Vendor Shipment ID")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing buyer Reference ID")] = None,
        buyer_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetShipmentDetailsResponse:
        """GetShipmentDetails

        Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort in ascending or descending order by purchase order creation date.
        :type sort_order: str
        :param next_token: Used for pagination when there are more shipments than the specified result size limit.
        :type next_token: str
        :param created_after: Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_after: datetime
        :param created_before: Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_before: datetime
        :param shipment_confirmed_before: Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_before: datetime
        :param shipment_confirmed_after: Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_after: datetime
        :param package_label_created_before: Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_before: datetime
        :param package_label_created_after: Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_after: datetime
        :param shipped_before: Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_before: datetime
        :param shipped_after: Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_after: datetime
        :param estimated_delivery_before: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_before: datetime
        :param estimated_delivery_after: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_after: datetime
        :param shipment_delivery_before: Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_before: datetime
        :param shipment_delivery_after: Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_after: datetime
        :param requested_pick_up_before: Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_before: datetime
        :param requested_pick_up_after: Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_after: datetime
        :param scheduled_pick_up_before: Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_before: datetime
        :param scheduled_pick_up_after: Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_after: datetime
        :param current_shipment_status: Get Shipment Details by passing Current shipment status.
        :type current_shipment_status: str
        :param vendor_shipment_identifier: Get Shipment Details by passing Vendor Shipment ID
        :type vendor_shipment_identifier: str
        :param buyer_reference_number: Get Shipment Details by passing buyer Reference ID
        :type buyer_reference_number: str
        :param buyer_warehouse_code: Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.
        :type buyer_warehouse_code: str
        :param seller_warehouse_code: Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_details_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            created_after=created_after,
            created_before=created_before,
            shipment_confirmed_before=shipment_confirmed_before,
            shipment_confirmed_after=shipment_confirmed_after,
            package_label_created_before=package_label_created_before,
            package_label_created_after=package_label_created_after,
            shipped_before=shipped_before,
            shipped_after=shipped_after,
            estimated_delivery_before=estimated_delivery_before,
            estimated_delivery_after=estimated_delivery_after,
            shipment_delivery_before=shipment_delivery_before,
            shipment_delivery_after=shipment_delivery_after,
            requested_pick_up_before=requested_pick_up_before,
            requested_pick_up_after=requested_pick_up_after,
            scheduled_pick_up_before=scheduled_pick_up_before,
            scheduled_pick_up_after=scheduled_pick_up_after,
            current_shipment_status=current_shipment_status,
            vendor_shipment_identifier=vendor_shipment_identifier,
            buyer_reference_number=buyer_reference_number,
            buyer_warehouse_code=buyer_warehouse_code,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentDetailsResponse",
            '400': "GetShipmentDetailsResponse",
            '401': "GetShipmentDetailsResponse",
            '403': "GetShipmentDetailsResponse",
            '404': "GetShipmentDetailsResponse",
            '415': "GetShipmentDetailsResponse",
            '429': "GetShipmentDetailsResponse",
            '500': "GetShipmentDetailsResponse",
            '503': "GetShipmentDetailsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_shipment_details_with_http_info(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort in ascending or descending order by purchase order creation date.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="Used for pagination when there are more shipments than the specified result size limit.")] = None,
        created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        current_shipment_status: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Current shipment status.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Vendor Shipment ID")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing buyer Reference ID")] = None,
        buyer_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetShipmentDetailsResponse]:
        """GetShipmentDetails

        Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort in ascending or descending order by purchase order creation date.
        :type sort_order: str
        :param next_token: Used for pagination when there are more shipments than the specified result size limit.
        :type next_token: str
        :param created_after: Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_after: datetime
        :param created_before: Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_before: datetime
        :param shipment_confirmed_before: Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_before: datetime
        :param shipment_confirmed_after: Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_after: datetime
        :param package_label_created_before: Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_before: datetime
        :param package_label_created_after: Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_after: datetime
        :param shipped_before: Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_before: datetime
        :param shipped_after: Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_after: datetime
        :param estimated_delivery_before: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_before: datetime
        :param estimated_delivery_after: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_after: datetime
        :param shipment_delivery_before: Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_before: datetime
        :param shipment_delivery_after: Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_after: datetime
        :param requested_pick_up_before: Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_before: datetime
        :param requested_pick_up_after: Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_after: datetime
        :param scheduled_pick_up_before: Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_before: datetime
        :param scheduled_pick_up_after: Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_after: datetime
        :param current_shipment_status: Get Shipment Details by passing Current shipment status.
        :type current_shipment_status: str
        :param vendor_shipment_identifier: Get Shipment Details by passing Vendor Shipment ID
        :type vendor_shipment_identifier: str
        :param buyer_reference_number: Get Shipment Details by passing buyer Reference ID
        :type buyer_reference_number: str
        :param buyer_warehouse_code: Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.
        :type buyer_warehouse_code: str
        :param seller_warehouse_code: Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_details_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            created_after=created_after,
            created_before=created_before,
            shipment_confirmed_before=shipment_confirmed_before,
            shipment_confirmed_after=shipment_confirmed_after,
            package_label_created_before=package_label_created_before,
            package_label_created_after=package_label_created_after,
            shipped_before=shipped_before,
            shipped_after=shipped_after,
            estimated_delivery_before=estimated_delivery_before,
            estimated_delivery_after=estimated_delivery_after,
            shipment_delivery_before=shipment_delivery_before,
            shipment_delivery_after=shipment_delivery_after,
            requested_pick_up_before=requested_pick_up_before,
            requested_pick_up_after=requested_pick_up_after,
            scheduled_pick_up_before=scheduled_pick_up_before,
            scheduled_pick_up_after=scheduled_pick_up_after,
            current_shipment_status=current_shipment_status,
            vendor_shipment_identifier=vendor_shipment_identifier,
            buyer_reference_number=buyer_reference_number,
            buyer_warehouse_code=buyer_warehouse_code,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentDetailsResponse",
            '400': "GetShipmentDetailsResponse",
            '401': "GetShipmentDetailsResponse",
            '403': "GetShipmentDetailsResponse",
            '404': "GetShipmentDetailsResponse",
            '415': "GetShipmentDetailsResponse",
            '429': "GetShipmentDetailsResponse",
            '500': "GetShipmentDetailsResponse",
            '503': "GetShipmentDetailsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_shipment_details_without_preload_content(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort in ascending or descending order by purchase order creation date.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="Used for pagination when there are more shipments than the specified result size limit.")] = None,
        created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_confirmed_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        package_label_created_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipped_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        estimated_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        shipment_delivery_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        requested_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_before: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        scheduled_pick_up_after: Annotated[Optional[datetime], Field(description="Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.")] = None,
        current_shipment_status: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Current shipment status.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing Vendor Shipment ID")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment Details by passing buyer Reference ID")] = None,
        buyer_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """GetShipmentDetails

        Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort in ascending or descending order by purchase order creation date.
        :type sort_order: str
        :param next_token: Used for pagination when there are more shipments than the specified result size limit.
        :type next_token: str
        :param created_after: Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_after: datetime
        :param created_before: Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type created_before: datetime
        :param shipment_confirmed_before: Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_before: datetime
        :param shipment_confirmed_after: Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_confirmed_after: datetime
        :param package_label_created_before: Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_before: datetime
        :param package_label_created_after: Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type package_label_created_after: datetime
        :param shipped_before: Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_before: datetime
        :param shipped_after: Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipped_after: datetime
        :param estimated_delivery_before: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_before: datetime
        :param estimated_delivery_after: Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type estimated_delivery_after: datetime
        :param shipment_delivery_before: Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_before: datetime
        :param shipment_delivery_after: Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type shipment_delivery_after: datetime
        :param requested_pick_up_before: Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_before: datetime
        :param requested_pick_up_after: Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type requested_pick_up_after: datetime
        :param scheduled_pick_up_before: Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_before: datetime
        :param scheduled_pick_up_after: Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
        :type scheduled_pick_up_after: datetime
        :param current_shipment_status: Get Shipment Details by passing Current shipment status.
        :type current_shipment_status: str
        :param vendor_shipment_identifier: Get Shipment Details by passing Vendor Shipment ID
        :type vendor_shipment_identifier: str
        :param buyer_reference_number: Get Shipment Details by passing buyer Reference ID
        :type buyer_reference_number: str
        :param buyer_warehouse_code: Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.
        :type buyer_warehouse_code: str
        :param seller_warehouse_code: Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_details_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            created_after=created_after,
            created_before=created_before,
            shipment_confirmed_before=shipment_confirmed_before,
            shipment_confirmed_after=shipment_confirmed_after,
            package_label_created_before=package_label_created_before,
            package_label_created_after=package_label_created_after,
            shipped_before=shipped_before,
            shipped_after=shipped_after,
            estimated_delivery_before=estimated_delivery_before,
            estimated_delivery_after=estimated_delivery_after,
            shipment_delivery_before=shipment_delivery_before,
            shipment_delivery_after=shipment_delivery_after,
            requested_pick_up_before=requested_pick_up_before,
            requested_pick_up_after=requested_pick_up_after,
            scheduled_pick_up_before=scheduled_pick_up_before,
            scheduled_pick_up_after=scheduled_pick_up_after,
            current_shipment_status=current_shipment_status,
            vendor_shipment_identifier=vendor_shipment_identifier,
            buyer_reference_number=buyer_reference_number,
            buyer_warehouse_code=buyer_warehouse_code,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentDetailsResponse",
            '400': "GetShipmentDetailsResponse",
            '401': "GetShipmentDetailsResponse",
            '403': "GetShipmentDetailsResponse",
            '404': "GetShipmentDetailsResponse",
            '415': "GetShipmentDetailsResponse",
            '429': "GetShipmentDetailsResponse",
            '500': "GetShipmentDetailsResponse",
            '503': "GetShipmentDetailsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_shipment_details_serialize(
        self,
        limit,
        sort_order,
        next_token,
        created_after,
        created_before,
        shipment_confirmed_before,
        shipment_confirmed_after,
        package_label_created_before,
        package_label_created_after,
        shipped_before,
        shipped_after,
        estimated_delivery_before,
        estimated_delivery_after,
        shipment_delivery_before,
        shipment_delivery_after,
        requested_pick_up_before,
        requested_pick_up_after,
        scheduled_pick_up_before,
        scheduled_pick_up_after,
        current_shipment_status,
        vendor_shipment_identifier,
        buyer_reference_number,
        buyer_warehouse_code,
        seller_warehouse_code,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if sort_order is not None:
            
            _query_params.append(('sortOrder', sort_order))
            
        if next_token is not None:
            
            _query_params.append(('nextToken', next_token))
            
        if created_after is not None:
            if isinstance(created_after, datetime):
                _query_params.append(
                    (
                        'createdAfter',
                        created_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('createdAfter', created_after))
            
        if created_before is not None:
            if isinstance(created_before, datetime):
                _query_params.append(
                    (
                        'createdBefore',
                        created_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('createdBefore', created_before))
            
        if shipment_confirmed_before is not None:
            if isinstance(shipment_confirmed_before, datetime):
                _query_params.append(
                    (
                        'shipmentConfirmedBefore',
                        shipment_confirmed_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shipmentConfirmedBefore', shipment_confirmed_before))
            
        if shipment_confirmed_after is not None:
            if isinstance(shipment_confirmed_after, datetime):
                _query_params.append(
                    (
                        'shipmentConfirmedAfter',
                        shipment_confirmed_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shipmentConfirmedAfter', shipment_confirmed_after))
            
        if package_label_created_before is not None:
            if isinstance(package_label_created_before, datetime):
                _query_params.append(
                    (
                        'packageLabelCreatedBefore',
                        package_label_created_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('packageLabelCreatedBefore', package_label_created_before))
            
        if package_label_created_after is not None:
            if isinstance(package_label_created_after, datetime):
                _query_params.append(
                    (
                        'packageLabelCreatedAfter',
                        package_label_created_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('packageLabelCreatedAfter', package_label_created_after))
            
        if shipped_before is not None:
            if isinstance(shipped_before, datetime):
                _query_params.append(
                    (
                        'shippedBefore',
                        shipped_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shippedBefore', shipped_before))
            
        if shipped_after is not None:
            if isinstance(shipped_after, datetime):
                _query_params.append(
                    (
                        'shippedAfter',
                        shipped_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shippedAfter', shipped_after))
            
        if estimated_delivery_before is not None:
            if isinstance(estimated_delivery_before, datetime):
                _query_params.append(
                    (
                        'estimatedDeliveryBefore',
                        estimated_delivery_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('estimatedDeliveryBefore', estimated_delivery_before))
            
        if estimated_delivery_after is not None:
            if isinstance(estimated_delivery_after, datetime):
                _query_params.append(
                    (
                        'estimatedDeliveryAfter',
                        estimated_delivery_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('estimatedDeliveryAfter', estimated_delivery_after))
            
        if shipment_delivery_before is not None:
            if isinstance(shipment_delivery_before, datetime):
                _query_params.append(
                    (
                        'shipmentDeliveryBefore',
                        shipment_delivery_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shipmentDeliveryBefore', shipment_delivery_before))
            
        if shipment_delivery_after is not None:
            if isinstance(shipment_delivery_after, datetime):
                _query_params.append(
                    (
                        'shipmentDeliveryAfter',
                        shipment_delivery_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('shipmentDeliveryAfter', shipment_delivery_after))
            
        if requested_pick_up_before is not None:
            if isinstance(requested_pick_up_before, datetime):
                _query_params.append(
                    (
                        'requestedPickUpBefore',
                        requested_pick_up_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('requestedPickUpBefore', requested_pick_up_before))
            
        if requested_pick_up_after is not None:
            if isinstance(requested_pick_up_after, datetime):
                _query_params.append(
                    (
                        'requestedPickUpAfter',
                        requested_pick_up_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('requestedPickUpAfter', requested_pick_up_after))
            
        if scheduled_pick_up_before is not None:
            if isinstance(scheduled_pick_up_before, datetime):
                _query_params.append(
                    (
                        'scheduledPickUpBefore',
                        scheduled_pick_up_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('scheduledPickUpBefore', scheduled_pick_up_before))
            
        if scheduled_pick_up_after is not None:
            if isinstance(scheduled_pick_up_after, datetime):
                _query_params.append(
                    (
                        'scheduledPickUpAfter',
                        scheduled_pick_up_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('scheduledPickUpAfter', scheduled_pick_up_after))
            
        if current_shipment_status is not None:
            
            _query_params.append(('currentShipmentStatus', current_shipment_status))
            
        if vendor_shipment_identifier is not None:
            
            _query_params.append(('vendorShipmentIdentifier', vendor_shipment_identifier))
            
        if buyer_reference_number is not None:
            
            _query_params.append(('buyerReferenceNumber', buyer_reference_number))
            
        if buyer_warehouse_code is not None:
            
            _query_params.append(('buyerWarehouseCode', buyer_warehouse_code))
            
        if seller_warehouse_code is not None:
            
            _query_params.append(('sellerWarehouseCode', seller_warehouse_code))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/vendor/shipping/v1/shipments',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_shipment_labels(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort the list by shipment label creation date in ascending or descending order.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.")] = None,
        label_created_after: Annotated[Optional[datetime], Field(description="Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        label_created_before: Annotated[Optional[datetime], Field(description="Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing buyer reference number.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing vendor shipment identifier.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetShipmentLabels:
        """get_shipment_labels

        Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort the list by shipment label creation date in ascending or descending order.
        :type sort_order: str
        :param next_token: A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
        :type next_token: str
        :param label_created_after: Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_after: datetime
        :param label_created_before: Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_before: datetime
        :param buyer_reference_number: Get Shipment labels by passing buyer reference number.
        :type buyer_reference_number: str
        :param vendor_shipment_identifier: Get Shipment labels by passing vendor shipment identifier.
        :type vendor_shipment_identifier: str
        :param seller_warehouse_code: Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_labels_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            label_created_after=label_created_after,
            label_created_before=label_created_before,
            buyer_reference_number=buyer_reference_number,
            vendor_shipment_identifier=vendor_shipment_identifier,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentLabels",
            '400': "GetShipmentLabels",
            '401': "GetShipmentLabels",
            '403': "GetShipmentLabels",
            '404': "GetShipmentLabels",
            '415': "GetShipmentLabels",
            '429': "GetShipmentLabels",
            '500': "GetShipmentLabels",
            '503': "GetShipmentLabels",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_shipment_labels_with_http_info(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort the list by shipment label creation date in ascending or descending order.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.")] = None,
        label_created_after: Annotated[Optional[datetime], Field(description="Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        label_created_before: Annotated[Optional[datetime], Field(description="Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing buyer reference number.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing vendor shipment identifier.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetShipmentLabels]:
        """get_shipment_labels

        Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort the list by shipment label creation date in ascending or descending order.
        :type sort_order: str
        :param next_token: A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
        :type next_token: str
        :param label_created_after: Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_after: datetime
        :param label_created_before: Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_before: datetime
        :param buyer_reference_number: Get Shipment labels by passing buyer reference number.
        :type buyer_reference_number: str
        :param vendor_shipment_identifier: Get Shipment labels by passing vendor shipment identifier.
        :type vendor_shipment_identifier: str
        :param seller_warehouse_code: Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_labels_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            label_created_after=label_created_after,
            label_created_before=label_created_before,
            buyer_reference_number=buyer_reference_number,
            vendor_shipment_identifier=vendor_shipment_identifier,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentLabels",
            '400': "GetShipmentLabels",
            '401': "GetShipmentLabels",
            '403': "GetShipmentLabels",
            '404': "GetShipmentLabels",
            '415': "GetShipmentLabels",
            '429': "GetShipmentLabels",
            '500': "GetShipmentLabels",
            '503': "GetShipmentLabels",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_shipment_labels_without_preload_content(
        self,
        limit: Annotated[Optional[Annotated[int, Field(le=50, strict=True, ge=1)]], Field(description="The limit to the number of records returned. Default value is 50 records.")] = None,
        sort_order: Annotated[Optional[StrictStr], Field(description="Sort the list by shipment label creation date in ascending or descending order.")] = None,
        next_token: Annotated[Optional[StrictStr], Field(description="A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.")] = None,
        label_created_after: Annotated[Optional[datetime], Field(description="Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        label_created_before: Annotated[Optional[datetime], Field(description="Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.")] = None,
        buyer_reference_number: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing buyer reference number.")] = None,
        vendor_shipment_identifier: Annotated[Optional[StrictStr], Field(description="Get Shipment labels by passing vendor shipment identifier.")] = None,
        seller_warehouse_code: Annotated[Optional[StrictStr], Field(description="Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """get_shipment_labels

        Returns small parcel shipment labels based on the filters that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param limit: The limit to the number of records returned. Default value is 50 records.
        :type limit: int
        :param sort_order: Sort the list by shipment label creation date in ascending or descending order.
        :type sort_order: str
        :param next_token: A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
        :type next_token: str
        :param label_created_after: Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_after: datetime
        :param label_created_before: Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
        :type label_created_before: datetime
        :param buyer_reference_number: Get Shipment labels by passing buyer reference number.
        :type buyer_reference_number: str
        :param vendor_shipment_identifier: Get Shipment labels by passing vendor shipment identifier.
        :type vendor_shipment_identifier: str
        :param seller_warehouse_code: Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment.
        :type seller_warehouse_code: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_shipment_labels_serialize(
            limit=limit,
            sort_order=sort_order,
            next_token=next_token,
            label_created_after=label_created_after,
            label_created_before=label_created_before,
            buyer_reference_number=buyer_reference_number,
            vendor_shipment_identifier=vendor_shipment_identifier,
            seller_warehouse_code=seller_warehouse_code,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetShipmentLabels",
            '400': "GetShipmentLabels",
            '401': "GetShipmentLabels",
            '403': "GetShipmentLabels",
            '404': "GetShipmentLabels",
            '415': "GetShipmentLabels",
            '429': "GetShipmentLabels",
            '500': "GetShipmentLabels",
            '503': "GetShipmentLabels",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_shipment_labels_serialize(
        self,
        limit,
        sort_order,
        next_token,
        label_created_after,
        label_created_before,
        buyer_reference_number,
        vendor_shipment_identifier,
        seller_warehouse_code,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if limit is not None:
            
            _query_params.append(('limit', limit))
            
        if sort_order is not None:
            
            _query_params.append(('sortOrder', sort_order))
            
        if next_token is not None:
            
            _query_params.append(('nextToken', next_token))
            
        if label_created_after is not None:
            if isinstance(label_created_after, datetime):
                _query_params.append(
                    (
                        'labelCreatedAfter',
                        label_created_after.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('labelCreatedAfter', label_created_after))
            
        if label_created_before is not None:
            if isinstance(label_created_before, datetime):
                _query_params.append(
                    (
                        'labelCreatedBefore',
                        label_created_before.strftime(
                            self.api_client.configuration.datetime_format
                        )
                    )
                )
            else:
                _query_params.append(('labelCreatedBefore', label_created_before))
            
        if buyer_reference_number is not None:
            
            _query_params.append(('buyerReferenceNumber', buyer_reference_number))
            
        if vendor_shipment_identifier is not None:
            
            _query_params.append(('vendorShipmentIdentifier', vendor_shipment_identifier))
            
        if seller_warehouse_code is not None:
            
            _query_params.append(('sellerWarehouseCode', seller_warehouse_code))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/vendor/shipping/v1/transportLabels',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def submit_shipment_confirmations(
        self,
        body: Annotated[SubmitShipmentConfirmationsRequest, Field(description="A request to submit shipment confirmation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SubmitShipmentConfirmationsResponse:
        """SubmitShipmentConfirmations

        Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment confirmation. (required)
        :type body: SubmitShipmentConfirmationsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipment_confirmations_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def submit_shipment_confirmations_with_http_info(
        self,
        body: Annotated[SubmitShipmentConfirmationsRequest, Field(description="A request to submit shipment confirmation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SubmitShipmentConfirmationsResponse]:
        """SubmitShipmentConfirmations

        Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment confirmation. (required)
        :type body: SubmitShipmentConfirmationsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipment_confirmations_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def submit_shipment_confirmations_without_preload_content(
        self,
        body: Annotated[SubmitShipmentConfirmationsRequest, Field(description="A request to submit shipment confirmation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """SubmitShipmentConfirmations

        Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment confirmation. (required)
        :type body: SubmitShipmentConfirmationsRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipment_confirmations_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _submit_shipment_confirmations_serialize(
        self,
        body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if body is not None:
            _body_params = body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/vendor/shipping/v1/shipmentConfirmations',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def submit_shipments(
        self,
        body: Annotated[SubmitShipments, Field(description="A request to submit shipment request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SubmitShipmentConfirmationsResponse:
        """SubmitShipments

        Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment request. (required)
        :type body: SubmitShipments
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipments_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def submit_shipments_with_http_info(
        self,
        body: Annotated[SubmitShipments, Field(description="A request to submit shipment request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SubmitShipmentConfirmationsResponse]:
        """SubmitShipments

        Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment request. (required)
        :type body: SubmitShipments
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipments_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def submit_shipments_without_preload_content(
        self,
        body: Annotated[SubmitShipments, Field(description="A request to submit shipment request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """SubmitShipments

        Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).

        :param body: A request to submit shipment request. (required)
        :type body: SubmitShipments
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._submit_shipments_serialize(
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "SubmitShipmentConfirmationsResponse",
            '400': "SubmitShipmentConfirmationsResponse",
            '403': "SubmitShipmentConfirmationsResponse",
            '404': "SubmitShipmentConfirmationsResponse",
            '413': "SubmitShipmentConfirmationsResponse",
            '415': "SubmitShipmentConfirmationsResponse",
            '429': "SubmitShipmentConfirmationsResponse",
            '500': "SubmitShipmentConfirmationsResponse",
            '503': "SubmitShipmentConfirmationsResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _submit_shipments_serialize(
        self,
        body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if body is not None:
            _body_params = body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/vendor/shipping/v1/shipments',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


