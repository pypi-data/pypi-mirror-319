[build-system]
requires = ["setuptools"]
backend = "setuptools.build_meta"

[project]
name = "dev-cmd"
requires-python = ">=3.8"
dependencies = [
    "aioconsole",
    "ansicolors",
    "colorama; sys_platform == 'win32'",
    "tomli; python_version < '3.11'",
    "typing-extensions"
]

authors = [
    {name = "John Sirois", email = "john.sirois@gmail.com"},
]
description = "A simple development command runner for Python projects."
readme = "README.md"
license = {file = "LICENSE"}
keywords = ["automation", "command", "runner", "testing"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Utilities",
]

dynamic = ["version"]

[project.urls]
Repository = "https://github.com/jsirois/dev-cmd"
"Bug Tracker" = "https://github.com/jsirois/dev-cmd/issues"
Changelog = "https://github.com/jsirois/dev-cmd/blob/main/CHANGES.md"

[project.scripts]
dev-cmd = "dev_cmd.run:main"

[tool.setuptools.dynamic]
version = {attr = "dev_cmd.__version__"}

[tool.setuptools.packages.find]
where = ["."]
include = ["dev_cmd*"]

[dependency-groups]
dev = [
    "ansicolors",
    "mypy",
    "pytest",
    "ruff",
    "types-colorama",
    "types-tqdm",
]

[[tool.mypy.overrides]]
module = ["aioconsole.*"]
follow_untyped_imports = true

[[tool.mypy.overrides]]
module = ["colors.*"]
follow_untyped_imports = true

[tool.ruff]
line-length = 100

[tool.ruff.lint]
extend-select = ["I"]

[tool.dev-cmd.commands]
clean = [
    "python",
    "-c",
    """\
import os
import shutil
import sys

import colors


# The MyPy cache can get corrupted by swithing Pythons with `uv ... --python ...` and re-building
# the .venv is cheap; so we clean these as a more restricted form than `git clean -fdx`
for cache_dir in '.mypy_cache', '.venv':
    if os.path.exists(cache_dir):
        shutil.rmtree(cache_dir, ignore_errors=True)
        print(colors.green(f"Removed directory `{cache_dir}`."), file=sys.stderr)
    """
]

fmt = ["ruff", "format"]
check-fmt = ["ruff", "format", "--diff"]

lint = ["ruff", "check", "--fix"]
check-lint = ["ruff", "check"]

type-check = ["mypy", "dev_cmd", "tests"]
type-check-38 = ["mypy", "--python-version", "3.8", "dev_cmd", "tests"]
type-check-39 = ["mypy", "--python-version", "3.9", "dev_cmd", "tests"]
type-check-310 = ["mypy", "--python-version", "3.10", "dev_cmd", "tests"]
type-check-311 = ["mypy", "--python-version", "3.11", "dev_cmd", "tests"]
type-check-312 = ["mypy", "--python-version", "3.12", "dev_cmd", "tests"]
type-check-313 = ["mypy", "--python-version",  "3.13", "dev_cmd", "tests"]

[tool.dev-cmd.commands.test]
args = ["pytest"]
cwd = "tests"
accepts-extra-args = true

[tool.dev-cmd.tasks]
checks = [
    "fmt",
    "lint",
    # Parallelizing the type checks and test is safe (they don't modify files), and it nets a ~3x
    # speedup over running them all serially.
    [
        "type-check-38",
        "type-check-39",
        "type-check-310",
        "type-check-311",
        "type-check-312",
        "type-check-313",
        "test"
    ],
]

# None of the CI checks modify files; so they can all be run in parallel which nets a ~1.5x speedup.
ci = [["check-fmt", "check-lint", "type-check", "test"]]

[tool.dev-cmd]
default = "checks"
exit-style = "immediate"