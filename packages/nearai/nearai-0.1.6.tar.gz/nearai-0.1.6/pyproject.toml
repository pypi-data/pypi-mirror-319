[tool.poetry]
name = "nearai"
version = "0.1.6"
description = "Near AI CLI"
authors = ["Support <support@near.ai>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
backoff = { version = "^2.2.1" }
base58 = { version = "2.1.1" }
boto3 = { version = "^1.34.100" }
boto3-stubs = { version = "^1.34.147" }
cryptography = { version = "^43.0.0" }
datasets = { version = "^2.20.0" }
ed25519 = "^1.5"
fabric = { version = "^3.2.2", optional = true }
fastapi = { version = "^0.111.0"}
fastapi-cli = { version = "^0.0.4", optional = true }
fire = { version = "^0.6.0" }
flask = { version = "^3.0.3", optional = true }
gunicorn = { version = "^22.0.0", optional = true }
jinja2 = { version = "^3.1.4" }
lean-dojo = { version = "^2.1.3", optional = true }
litellm = { version = "^1.41.0" }
mypy-boto3 = { version = "^1.34.147" }
mypy-boto3-s3 = { version = "^1.34.138" }
openai = { version = "^1.30.1" }
pandas-stubs = { version = "^2.2.2.240603" }
peft = "^0.10.0"
psutil = { version = "^5.9.5" }
pydantic = { version = "^2.7.1" }
pydantic-core = { version = "^2.18.4" }
pymysql = { version = "^1.1.0" }
pynacl = { version = "^1.5.0" }
python-dotenv = { version = "^1.0.1", optional = true }
requests = { version = "^2.31.0" }
setuptools = { version = "^69.5.1" }
shortuuid = { version = "^1.0.0", optional = true }
sqlmodel = { version = "^0.0.21", optional = true }
tabulate = { version = "^0.9.0" }
tenacity = { version = "^8.2.3" }
tensorboardX = { version = "^2.6.2.2" }
torch = { version = "^2.2.2" }
torchao = { version = "^0.3.1", optional = true }
torchtune = { version = "^0.2.0", optional = true }
tqdm = { version = "^4.66.4" }
transformers = { version = "^4.40.2" }
types-cffi = { version = "^1.16.0.20240331" }
types-colorama = { version = "^0.4.15.20240311" }
types-psutil = { version = "^6.0.0.20240621" }
types-pygments = { version = "^2.18.0.20240506" }
types-pyyaml = { version = "^6.0.12.20240724" }
types-redis = { version = "^4.6.0.20240425" }
types-regex = { version = "^2024.5.15.20240519" }
types-setuptools = { version = "^71.1.0.20240724" }
types-ujson = { version = "^5.10.0.20240515" }
vllm = { version = "^0.5.3", optional = true }
alembic = "^1.13.2"
python-docx = { version = "^1.1.2", optional = true }
openpyxl = { version = "^3.1.5", optional = true }
python-pptx = { version = "^1.0.2", optional = true }
pypdf = { version = "^4.3.1", optional = true }
chardet = { version = "^5.2.0", optional = true }
apscheduler = { version = "^3.10.4", optional = true }
fireworks-ai = "^0.15.7"
typer = "^0.12.5"
uvicorn = "^0.32.0"

[tool.poetry.extras]
# Experiment platform
explatform = ["flask", "fabric", "gunicorn", "requests", "shortuuid"]
hub = [
    "cryptography",
    "fastapi-cli",
    "fastapi",
    "python-dotenv",
    "sqlmodel",
    "python-docx",
    "openpyxl",
    "python-pptx",
    "pypdf",
    "chardet",
    "shortuuid",
    "apscheduler"
]
torch = ["torch", "torchao", "torchtune"]
vllm = ["vllm", "torch"]
lean = ["lean-dojo"]

[tool.poetry.group.dev.dependencies]
mypy = "^1.11.0"
ruff = "^0.5.2"
commitizen = "^3.29.0"
types-openpyxl = "^3.1.5.20240822"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.0"
pillow = "^10.4.0"
mkdocs-minify-plugin = "^0.8.0"
mkdocstrings = "^0.25.2"
mkdocstrings-python = "^1.10.7"
mkdocs-redirects = "^1.2.1"
mkdocs-embed-external-markdown = "^3.0.2"
mkdocs-exclude = "^1.0.2"
mkdocs-material = { extras = ["imaging"], version = "^9.5.31" }
mkdocs-simple-hooks = "^0.1.5"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-random-order = "^1.1.1"
pytest-xdist = "^3.6.1"

[tool.pytest.ini_options]
addopts = "-n auto"
timeout = 300
norecursedirs = ["hub", "dist", "docs"]
markers = [
  "integration: mark test as integration test",
]


[tool.poetry.scripts]
nearai = "nearai.cli:main"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver2"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
src = ["nearai"]
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "venv",
    "openapi_client",
]
extend-exclude = ["hub/tests", "./*/projects", "./*/examples"]
line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming conventions
    "D",  # pydocstyle
]
ignore = [
    "B008", # do not perform calls in argument defaults
    "C901", # too complex
    "C408", # dict() constructor
    "C417", # enforce list comprehension
    "W191", # indentation contains tabs
    "D401", # imperative mood
    "D100", # Missing docstring module
    "D101", # Missing docstring in public class
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = false
exclude = [
    "tests",
    "venv",
    ".venv",
    ".vscode",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "nearai/openapi_client",
]

[[tool.mypy.overrides]]
module = [
    'datasets.*',
    'fire.*',
    'tqdm.*',
    'fabric.*',
    'tabulate.*',
    'requests.*',
    'tensorboardX.*',
    'pymysql.*',
    'torchtune.*',
    'torchao.*',
    'fireworks.*',
    'apscheduler.*',
]
ignore_missing_imports = true
