# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/arcsolver',
                'doc_host': 'https://agemoai.github.io',
                'git_url': 'https://github.com/agemoai/arcsolver',
                'lib_path': 'arcsolver'},
  'syms': { 'arcsolver.describe': { 'arcsolver.describe.AsyncChat.__call__': ('describe.html#asyncchat.__call__', 'arcsolver/describe.py'),
                                    'arcsolver.describe.AsyncChat.toolloop': ('describe.html#asyncchat.toolloop', 'arcsolver/describe.py'),
                                    'arcsolver.describe.Description': ('describe.html#description', 'arcsolver/describe.py'),
                                    'arcsolver.describe.Description.cost': ('describe.html#description.cost', 'arcsolver/describe.py'),
                                    'arcsolver.describe.Description.d': ('describe.html#description.d', 'arcsolver/describe.py'),
                                    'arcsolver.describe.Description.usage': ('describe.html#description.usage', 'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator': ( 'describe.html#descriptiongenerator',
                                                                                 'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator.__init__': ( 'describe.html#descriptiongenerator.__init__',
                                                                                          'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator._create_chat': ( 'describe.html#descriptiongenerator._create_chat',
                                                                                              'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator._create_client': ( 'describe.html#descriptiongenerator._create_client',
                                                                                                'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator.describe_direct': ( 'describe.html#descriptiongenerator.describe_direct',
                                                                                                 'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator.describe_indirect': ( 'describe.html#descriptiongenerator.describe_indirect',
                                                                                                   'arcsolver/describe.py'),
                                    'arcsolver.describe.DescriptionGenerator.describe_task': ( 'describe.html#descriptiongenerator.describe_task',
                                                                                               'arcsolver/describe.py'),
                                    'arcsolver.describe.ShapeExtractor': ('describe.html#shapeextractor', 'arcsolver/describe.py'),
                                    'arcsolver.describe.ShapeExtractor.__init__': ( 'describe.html#shapeextractor.__init__',
                                                                                    'arcsolver/describe.py'),
                                    'arcsolver.describe.ShapeExtractor.extract_shapes': ( 'describe.html#shapeextractor.extract_shapes',
                                                                                          'arcsolver/describe.py'),
                                    'arcsolver.describe._create_chat': ('describe.html#_create_chat', 'arcsolver/describe.py'),
                                    'arcsolver.describe._create_client': ('describe.html#_create_client', 'arcsolver/describe.py'),
                                    'arcsolver.describe._describe_direct': ('describe.html#_describe_direct', 'arcsolver/describe.py'),
                                    'arcsolver.describe._describe_indirect': ('describe.html#_describe_indirect', 'arcsolver/describe.py'),
                                    'arcsolver.describe._pair_prompt': ('describe.html#_pair_prompt', 'arcsolver/describe.py'),
                                    'arcsolver.describe._shape_table': ('describe.html#_shape_table', 'arcsolver/describe.py')},
            'arcsolver.examples': {'arcsolver.examples.Example': ('examples.html#example', 'arcsolver/examples.py')},
            'arcsolver.ocm': { 'arcsolver.ocm.Bitmap': ('ocm.html#bitmap', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Bitmap._get_shape_array': ('ocm.html#bitmap._get_shape_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Bitmap.flip': ('ocm.html#bitmap.flip', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Bitmap.rotate': ('ocm.html#bitmap.rotate', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Bitmap.size': ('ocm.html#bitmap.size', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Bitmap.validate_data': ('ocm.html#bitmap.validate_data', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Color': ('ocm.html#color', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Color.__init__': ('ocm.html#color.__init__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Color.__str__': ('ocm.html#color.__str__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Color.to_array': ('ocm.html#color.to_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern': ('ocm.html#cyclicpattern', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern.__len__': ('ocm.html#cyclicpattern.__len__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern.extend': ('ocm.html#cyclicpattern.extend', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern.find_period': ('ocm.html#cyclicpattern.find_period', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern.from_array': ('ocm.html#cyclicpattern.from_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.CyclicPattern.to_array': ('ocm.html#cyclicpattern.to_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Direction': ('ocm.html#direction', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Direction.from_array': ('ocm.html#direction.from_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Direction.to_array': ('ocm.html#direction.to_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.EnclosureFiller': ('ocm.html#enclosurefiller', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.EnclosureFiller.fill_enclosures': ( 'ocm.html#enclosurefiller.fill_enclosures',
                                                                                  'arcsolver/ocm.py'),
                               'arcsolver.ocm.Grid': ('ocm.html#grid', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Grid._create_grid': ('ocm.html#grid._create_grid', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Grid.to_array': ('ocm.html#grid.to_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Grid.validate_grid_coverage': ('ocm.html#grid.validate_grid_coverage', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Line': ('ocm.html#line', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Line._get_shape_array': ('ocm.html#line._get_shape_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Line.offset': ('ocm.html#line.offset', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Object': ('ocm.html#object', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Object._get_shape_array': ('ocm.html#object._get_shape_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Object.to_array': ('ocm.html#object.to_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.PatternMatcher': ('ocm.html#patternmatcher', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.PatternMatcher.extract_matching_region': ( 'ocm.html#patternmatcher.extract_matching_region',
                                                                                         'arcsolver/ocm.py'),
                               'arcsolver.ocm.PatternMatcher.find_best_match': ( 'ocm.html#patternmatcher.find_best_match',
                                                                                 'arcsolver/ocm.py'),
                               'arcsolver.ocm.PatternMatcher.find_matches': ('ocm.html#patternmatcher.find_matches', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Rectangle': ('ocm.html#rectangle', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Rectangle._get_shape_array': ('ocm.html#rectangle._get_shape_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.ShapeExtractor': ('ocm.html#shapeextractor', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.ShapeExtractor.extract_all_shapes': ( 'ocm.html#shapeextractor.extract_all_shapes',
                                                                                    'arcsolver/ocm.py'),
                               'arcsolver.ocm.ShapeExtractor.extract_contiguous_regions': ( 'ocm.html#shapeextractor.extract_contiguous_regions',
                                                                                            'arcsolver/ocm.py'),
                               'arcsolver.ocm.ShapeExtractor.extract_largest_shape': ( 'ocm.html#shapeextractor.extract_largest_shape',
                                                                                       'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector': ('ocm.html#vector', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.__add__': ('ocm.html#vector.__add__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.__init__': ('ocm.html#vector.__init__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.__mul__': ('ocm.html#vector.__mul__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.__rmul__': ('ocm.html#vector.__rmul__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.__sub__': ('ocm.html#vector.__sub__', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.from_array': ('ocm.html#vector.from_array', 'arcsolver/ocm.py'),
                               'arcsolver.ocm.Vector.to_array': ('ocm.html#vector.to_array', 'arcsolver/ocm.py')},
            'arcsolver.ocm_cleaned': {},
            'arcsolver.score': {'arcsolver.score.score': ('score.html#score', 'arcsolver/score.py')},
            'arcsolver.solve': { 'arcsolver.solve.ArcSolver': ('solve.html#arcsolver', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver.__init__': ('solve.html#arcsolver.__init__', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver._collect_attempts': ( 'solve.html#arcsolver._collect_attempts',
                                                                                  'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver._count_attempts': ( 'solve.html#arcsolver._count_attempts',
                                                                                'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver._get_best_n': ('solve.html#arcsolver._get_best_n', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver._log_progress': ('solve.html#arcsolver._log_progress', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ArcSolver.solve': ('solve.html#arcsolver.solve', 'arcsolver/solve.py'),
                                 'arcsolver.solve.AsyncChat.codeloop': ('solve.html#asyncchat.codeloop', 'arcsolver/solve.py'),
                                 'arcsolver.solve.Attempt': ('solve.html#attempt', 'arcsolver/solve.py'),
                                 'arcsolver.solve.Attempt.score': ('solve.html#attempt.score', 'arcsolver/solve.py'),
                                 'arcsolver.solve.CodeValidator': ('solve.html#codevalidator', 'arcsolver/solve.py'),
                                 'arcsolver.solve.CodeValidator.format_syntax_error': ( 'solve.html#codevalidator.format_syntax_error',
                                                                                        'arcsolver/solve.py'),
                                 'arcsolver.solve.CodeValidator.validate': ('solve.html#codevalidator.validate', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ConcurrentExecutor': ('solve.html#concurrentexecutor', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ConcurrentExecutor.__init__': ( 'solve.html#concurrentexecutor.__init__',
                                                                                  'arcsolver/solve.py'),
                                 'arcsolver.solve.ConcurrentExecutor.run_attempts': ( 'solve.html#concurrentexecutor.run_attempts',
                                                                                      'arcsolver/solve.py'),
                                 'arcsolver.solve.ExecutionResult': ('solve.html#executionresult', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SandboxedExecutor': ('solve.html#sandboxedexecutor', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SandboxedExecutor.run': ('solve.html#sandboxedexecutor.run', 'arcsolver/solve.py'),
                                 'arcsolver.solve.Solution': ('solve.html#solution', 'arcsolver/solve.py'),
                                 'arcsolver.solve.Solution.from_response': ('solve.html#solution.from_response', 'arcsolver/solve.py'),
                                 'arcsolver.solve.Solution.full_code': ('solve.html#solution.full_code', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree': ('solve.html#solutiontree', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.__str__': ('solve.html#solutiontree.__str__', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree._add_attempt_node': ( 'solve.html#solutiontree._add_attempt_node',
                                                                                     'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree._collect_attempts': ( 'solve.html#solutiontree._collect_attempts',
                                                                                     'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.all_attempts': ( 'solve.html#solutiontree.all_attempts',
                                                                                'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.best_attempt': ( 'solve.html#solutiontree.best_attempt',
                                                                                'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.best_score': ('solve.html#solutiontree.best_score', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.correct': ('solve.html#solutiontree.correct', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolutionTree.show': ('solve.html#solutiontree.show', 'arcsolver/solve.py'),
                                 'arcsolver.solve.SolverProgress': ('solve.html#solverprogress', 'arcsolver/solve.py'),
                                 'arcsolver.solve.ValidationError': ('solve.html#validationerror', 'arcsolver/solve.py'),
                                 'arcsolver.solve._already_shown_task': ('solve.html#_already_shown_task', 'arcsolver/solve.py'),
                                 'arcsolver.solve._image_message': ('solve.html#_image_message', 'arcsolver/solve.py'),
                                 'arcsolver.solve._run_single_attempt': ('solve.html#_run_single_attempt', 'arcsolver/solve.py'),
                                 'arcsolver.solve.attempt_solution': ('solve.html#attempt_solution', 'arcsolver/solve.py'),
                                 'arcsolver.solve.clear_cache': ('solve.html#clear_cache', 'arcsolver/solve.py'),
                                 'arcsolver.solve.feedback': ('solve.html#feedback', 'arcsolver/solve.py'),
                                 'arcsolver.solve.retry_solution': ('solve.html#retry_solution', 'arcsolver/solve.py'),
                                 'arcsolver.solve.run_solutions': ('solve.html#run_solutions', 'arcsolver/solve.py')},
            'arcsolver.task': { 'arcsolver.task.ArcGrid': ('task.html#arcgrid', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid.__eq__': ('task.html#arcgrid.__eq__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid.__init__': ('task.html#arcgrid.__init__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid.__str__': ('task.html#arcgrid.__str__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid._draw_grid': ('task.html#arcgrid._draw_grid', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid._setup_ax': ('task.html#arcgrid._setup_ax', 'arcsolver/task.py'),
                                'arcsolver.task.ArcGrid.plot': ('task.html#arcgrid.plot', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair': ('task.html#arcpair', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.__getitem__': ('task.html#arcpair.__getitem__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.__init__': ('task.html#arcpair.__init__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.__iter__': ('task.html#arcpair.__iter__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.__len__': ('task.html#arcpair.__len__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.__str__': ('task.html#arcpair.__str__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair._create_separator': ('task.html#arcpair._create_separator', 'arcsolver/task.py'),
                                'arcsolver.task.ArcPair.plot': ('task.html#arcpair.plot', 'arcsolver/task.py'),
                                'arcsolver.task.ArcTask': ('task.html#arctask', 'arcsolver/task.py'),
                                'arcsolver.task.ArcTask.__init__': ('task.html#arctask.__init__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcTask.__str__': ('task.html#arctask.__str__', 'arcsolver/task.py'),
                                'arcsolver.task.ArcTask._load_data': ('task.html#arctask._load_data', 'arcsolver/task.py'),
                                'arcsolver.task.ArcTask.plot': ('task.html#arctask.plot', 'arcsolver/task.py'),
                                'arcsolver.task.get_task_files': ('task.html#get_task_files', 'arcsolver/task.py')},
            'arcsolver.utils': { 'arcsolver.utils.MultipleTagsError': ('utils.html#multipletagserror', 'arcsolver/utils.py'),
                                 'arcsolver.utils.NoContentError': ('utils.html#nocontenterror', 'arcsolver/utils.py'),
                                 'arcsolver.utils.TagNotFoundError': ('utils.html#tagnotfounderror', 'arcsolver/utils.py'),
                                 'arcsolver.utils.parse_from_xml': ('utils.html#parse_from_xml', 'arcsolver/utils.py')}}}
