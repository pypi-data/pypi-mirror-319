[tool.poetry]
name = "neoval-py-utils"
version = "0.5.1"
description = ""
authors = ["Neoval <data@neoval.io>"]
readme = "README.md"
packages = [{include = "neoval_py_utils", from = "src"}]


[tool.poetry.scripts]
ipdb = "neoval_py_utils.ipdb:app"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
google-cloud-storage = "*"
google-cloud-bigquery = "*"
polars = "*"
pyarrow= "*"
taskipy = "^1.12.2"
jinja2 = "^3.1.2"
pyyaml = "^6.0.1"
typer = "0.*"
duckdb = "1.*"

[tool.poetry.group.dev.dependencies]
black = "*"
ruff = "*"
pytest = "*"
pytest-xdist = "*"
pytest-cov = "*"
taskipy = "^1.12.2"
python-semantic-release = "^8.7.0"
pyright = "*"



[tool.taskipy.tasks]
format = "black ."
lint = "ruff check --output-format grouped src/ tests/"
test = "pytest tests/ -n auto"
test-with-coverage = "pytest -n auto --cov=src/neoval_py_utils --cov-fail-under=90 tests/"

[tool.pytest.ini_options]
pythonpath = "."
addopts = [
    "--import-mode=importlib",
]

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "D", "N", "PT", "PL", "NPY", "RUF", "UP", "YTT", "ANN"]
ignore = ["D102", "D211", "D213", "ANN101", "ANN401", "UP035"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.branches.other]
match = ".*"
prerelease = true

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test", "major"]
minor_tags = ["feat"]
patch_tags = ["build", "chore", "ci", "docs", "fix", "perf", "style", "refactor", "test"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
