# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .access_control_policy import *
from .address_group import *
from .category_key import *
from .category_value import *
from .floating_ip import *
from .foundation_central_api_keys import *
from .foundation_central_image_cluster import *
from .foundation_image import *
from .foundation_image_nodes import *
from .foundation_ipmi_config import *
from .get_access_control_policies import *
from .get_access_control_policy import *
from .get_address_group import *
from .get_address_groups import *
from .get_assert_helper import *
from .get_category_key import *
from .get_cluster import *
from .get_clusters import *
from .get_floating_ip import *
from .get_floating_ips import *
from .get_foundation_central_api_keys import *
from .get_foundation_central_cluster_details import *
from .get_foundation_central_imaged_clusters_list import *
from .get_foundation_central_imaged_node_details import *
from .get_foundation_central_imaged_nodes_list import *
from .get_foundation_central_list_api_keys import *
from .get_foundation_discover_nodes import *
from .get_foundation_hypervisor_isos import *
from .get_foundation_node_network_details import *
from .get_foundation_nos_packages import *
from .get_host import *
from .get_hosts import *
from .get_image import *
from .get_karbon_cluster import *
from .get_karbon_cluster_kube_config import *
from .get_karbon_cluster_ssh import *
from .get_karbon_clusters import *
from .get_karbon_private_registries import *
from .get_karbon_private_registry import *
from .get_ndb_clone import *
from .get_ndb_clones import *
from .get_ndb_cluster import *
from .get_ndb_clusters import *
from .get_ndb_database import *
from .get_ndb_databases import *
from .get_ndb_dbserver import *
from .get_ndb_dbservers import *
from .get_ndb_maintenance_window import *
from .get_ndb_maintenance_windows import *
from .get_ndb_network import *
from .get_ndb_network_available_ips import *
from .get_ndb_networks import *
from .get_ndb_profile import *
from .get_ndb_profiles import *
from .get_ndb_sla import *
from .get_ndb_slas import *
from .get_ndb_snapshot import *
from .get_ndb_snapshots import *
from .get_ndb_tag import *
from .get_ndb_tags import *
from .get_ndb_time_machine import *
from .get_ndb_time_machines import *
from .get_ndb_tms_capability import *
from .get_network_security_rule import *
from .get_pbr import *
from .get_pbrs import *
from .get_permission import *
from .get_permissions import *
from .get_project import *
from .get_projects import *
from .get_protection_rule import *
from .get_protection_rules import *
from .get_recovery_plan import *
from .get_recovery_plans import *
from .get_role import *
from .get_roles import *
from .get_service_group import *
from .get_service_groups import *
from .get_static_routes import *
from .get_subnet import *
from .get_subnets import *
from .get_user import *
from .get_user_group import *
from .get_user_groups import *
from .get_users import *
from .get_virtual_machine import *
from .get_vpc import *
from .get_vpcs import *
from .image import *
from .karbon_cluster import *
from .karbon_private_registry import *
from .karbon_worker_nodepool import *
from .ndb_authorize_dbserver import *
from .ndb_clone import *
from .ndb_clone_refresh import *
from .ndb_cluster import *
from .ndb_database import *
from .ndb_database_restore import *
from .ndb_database_scale import *
from .ndb_database_snapshot import *
from .ndb_dbserver_vm import *
from .ndb_linked_databases import *
from .ndb_log_catchups import *
from .ndb_maintenance_task import *
from .ndb_maintenance_window import *
from .ndb_network import *
from .ndb_profile import *
from .ndb_register_database import *
from .ndb_register_dbserver import *
from .ndb_scale_database import *
from .ndb_sla import *
from .ndb_software_version_profile import *
from .ndb_stretched_vlan import *
from .ndb_tag import *
from .ndb_tms_cluster import *
from .network_security_rule import *
from .pbr import *
from .project import *
from .protection_rule import *
from .provider import *
from .recovery_plan import *
from .role import *
from .service_group import *
from .static_routes import *
from .subnet import *
from .user import *
from .user_groups import *
from .virtual_machine import *
from .vpc import *
from ._inputs import *
from . import outputs

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumi_nutanix.config as __config
    config = __config
else:
    config = _utilities.lazy_import('pulumi_nutanix.config')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "nutanix",
  "mod": "index/accessControlPolicy",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/accessControlPolicy:AccessControlPolicy": "AccessControlPolicy"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/addressGroup",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/addressGroup:AddressGroup": "AddressGroup"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/categoryKey",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/categoryKey:CategoryKey": "CategoryKey"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/categoryValue",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/categoryValue:CategoryValue": "CategoryValue"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/floatingIp",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/floatingIp:FloatingIp": "FloatingIp"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/foundationCentralApiKeys",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/foundationCentralApiKeys:FoundationCentralApiKeys": "FoundationCentralApiKeys"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/foundationCentralImageCluster",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/foundationCentralImageCluster:FoundationCentralImageCluster": "FoundationCentralImageCluster"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/foundationImage",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/foundationImage:FoundationImage": "FoundationImage"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/foundationImageNodes",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/foundationImageNodes:FoundationImageNodes": "FoundationImageNodes"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/foundationIpmiConfig",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/foundationIpmiConfig:FoundationIpmiConfig": "FoundationIpmiConfig"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/image",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/image:Image": "Image"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/karbonCluster",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/karbonCluster:KarbonCluster": "KarbonCluster"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/karbonPrivateRegistry",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/karbonPrivateRegistry:KarbonPrivateRegistry": "KarbonPrivateRegistry"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/karbonWorkerNodepool",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/karbonWorkerNodepool:KarbonWorkerNodepool": "KarbonWorkerNodepool"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbAuthorizeDbserver",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbAuthorizeDbserver:NdbAuthorizeDbserver": "NdbAuthorizeDbserver"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbClone",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbClone:NdbClone": "NdbClone"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbCloneRefresh",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbCloneRefresh:NdbCloneRefresh": "NdbCloneRefresh"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbCluster",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbCluster:NdbCluster": "NdbCluster"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbDatabase",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbDatabase:NdbDatabase": "NdbDatabase"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbDatabaseRestore",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbDatabaseRestore:NdbDatabaseRestore": "NdbDatabaseRestore"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbDatabaseScale",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbDatabaseScale:NdbDatabaseScale": "NdbDatabaseScale"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbDatabaseSnapshot",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbDatabaseSnapshot:NdbDatabaseSnapshot": "NdbDatabaseSnapshot"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbDbserverVm",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbDbserverVm:NdbDbserverVm": "NdbDbserverVm"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbLinkedDatabases",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbLinkedDatabases:NdbLinkedDatabases": "NdbLinkedDatabases"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbLogCatchups",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbLogCatchups:NdbLogCatchups": "NdbLogCatchups"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbMaintenanceTask",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbMaintenanceTask:NdbMaintenanceTask": "NdbMaintenanceTask"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbMaintenanceWindow",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbMaintenanceWindow:NdbMaintenanceWindow": "NdbMaintenanceWindow"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbNetwork",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbNetwork:NdbNetwork": "NdbNetwork"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbProfile",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbProfile:NdbProfile": "NdbProfile"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbRegisterDatabase",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbRegisterDatabase:NdbRegisterDatabase": "NdbRegisterDatabase"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbRegisterDbserver",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbRegisterDbserver:NdbRegisterDbserver": "NdbRegisterDbserver"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbScaleDatabase",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbScaleDatabase:NdbScaleDatabase": "NdbScaleDatabase"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbSla",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbSla:NdbSla": "NdbSla"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbSoftwareVersionProfile",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbSoftwareVersionProfile:NdbSoftwareVersionProfile": "NdbSoftwareVersionProfile"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbStretchedVlan",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbStretchedVlan:NdbStretchedVlan": "NdbStretchedVlan"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbTag",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbTag:NdbTag": "NdbTag"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/ndbTmsCluster",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/ndbTmsCluster:NdbTmsCluster": "NdbTmsCluster"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/networkSecurityRule",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/networkSecurityRule:NetworkSecurityRule": "NetworkSecurityRule"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/pbr",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/pbr:Pbr": "Pbr"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/project",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/project:Project": "Project"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/protectionRule",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/protectionRule:ProtectionRule": "ProtectionRule"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/recoveryPlan",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/recoveryPlan:RecoveryPlan": "RecoveryPlan"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/role",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/role:Role": "Role"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/serviceGroup",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/serviceGroup:ServiceGroup": "ServiceGroup"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/staticRoutes",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/staticRoutes:StaticRoutes": "StaticRoutes"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/subnet",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/subnet:Subnet": "Subnet"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/user",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/user:User": "User"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/userGroups",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/userGroups:UserGroups": "UserGroups"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/virtualMachine",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/virtualMachine:VirtualMachine": "VirtualMachine"
  }
 },
 {
  "pkg": "nutanix",
  "mod": "index/vpc",
  "fqn": "pulumi_nutanix",
  "classes": {
   "nutanix:index/vpc:Vpc": "Vpc"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "nutanix",
  "token": "pulumi:providers:nutanix",
  "fqn": "pulumi_nutanix",
  "class": "Provider"
 }
]
"""
)
