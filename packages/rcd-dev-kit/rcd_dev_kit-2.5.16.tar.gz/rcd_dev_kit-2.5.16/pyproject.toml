[tool.poetry]
name = "rcd-dev-kit"
version = "2.5.16"
description = "Interact with OIP ecosystem."
authors = ["Maxime KIEFFER", "Robin Sarfati"]
license = "MIT"
readme = "README.md"
classifiers = [
    'Intended Audience :: Developers',
    'Topic :: Software Development :: Build Tools',
    'Programming Language :: Python :: 3.8',
]
homepage = "https://github.com/Tekkare/rcd-dev-kit"
repository = "https://github.com/Tekkare/rcd-dev-kit"
exclude = [
    "src/rcd_dev_kit/main.py",
    "src/rcd_dev_kit/migrate_sf_data.py",
    "src/rcd_dev_kit/Untitled.ipynb",
    "src/rcd_dev_kit/.ipynb_checkpoints",
    "src/rcd_dev_kit/migrate_big_data.py",
    "src/rcd_dev_kit/list_wrong_tables.py",
    "src/rcd_dev_kit/datawarehouse_quality_report.txt",
]

[tool.poetry.dependencies] # requirements.txt
ipykernel = "^6.29.4"
python = "^3.9"
snowflake-connector-python = { extras = ["pandas"], version = "^3.2.1" }
boto3 = "^1.28.12"
numpy = [
    { version = "^1.21.6", python = ">=3.9, <3.10" },
    { version = "^2.1.0", python = ">=3.10" }
]
pandas = "^2.0.3"
botocore = "^1.31.12"
# psycopg2-binary = "^2.9.6"
sqlparse = "^0.5.0"
elasticsearch = "^8.8.2"
python-dotenv = "^1.0.0"
py-markdown-table = "^0.4.0"
tqdm = "^4.65.0"
statsmodels = "^0.14.0"
scikit-learn = "^1.3.0"
sqlalchemy-redshift = "^0.8.14"
nltk = "^3.8.1"
# pyTest packages to be installed via extra package rcd-dev-kit[py_test]
pytest = { version = "^7.4.0", optional = true }
pytest-cov = { version = "^4.1.0", optional = true }

# Google packages to be installed via extra package rcd-dev-kit[google]
google = { version = "^3.0.0", optional = true }
google-api-python-client = { version = "^2.47.0", optional = true }
google-cloud-storage = { version = "^2.3.0", optional = true }
#REMOVAL OF google trans to approve
#googletrans = { version = "3.0.0", optional = true }
google-cloud = { version = "^0.34.0", optional = true }

# Sphinx packages to be installed via extra package rcd-dev-kit[docs]
# Those packages are used mainly to generate automatically the doc html of the package.
Sphinx = { version = "^7.2.6", optional = true }
sphinx-rtd-theme = { version = "1.3.0", optional = true }
sphinxcontrib-napoleon = { version = "0.7", optional = true }
sphinx-autoapi = { version = "^3.0.0", optional = true }
myst-parser = { version = "^2.0.0", optional = true }

# llama dependency for ...
# llama-index-vector-stores-elasticsearch = { version = "^0.1.5", optional = true }
# llama-index-readers-elasticsearch = { version = "^0.1.3", optional = true }
# llama-index-embeddings-huggingface = { version = "^0.2.0", optional = true }

# Connectorx dependency for parallel reading from redshift

connectorx = "^0.3.2"
polars = "^1.17.1"
psycopg2-binary = "^2.9.10"
setuptools = "^75.7.0"

[tool.poetry.extras]
llama = [
    "llama-index-vector-stores-elasticsearch",
    "llama-index-readers-elasticsearch",
    "llama-index-embeddings-huggingface",
]
py_test = ["pytest", "pytest-cov"]
google = [
    "google",
    "google-api-python-client",
    "google-cloud-storage",
    "googletrans",
]
docs = [
    "Sphinx",
    "sphinx-rtd-theme",
    "sphinxcontrib-napoleon",
    "sphinx-autoapi",
    "myst-parser",
]
ctx = ["connectorx"]

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.4"

[tool.semantic_release]
version_variable = "pyproject.toml:version" # version location
branch = "main"                             # branch to make releases of
changelog_file = "CHANGELOG.md"             # changelog file
build_command = "poetry build"              # build dists
dist_path = "dist/"                         # where to put dists
upload_to_release = true                    # auto-create GitHub release
upload_to_pypi = false                      # don't auto-upload to PyPI
remove_dist = false                         # don't remove dists
patch_without_tag = false                   # patch release by default

[tool.pytest.ini_options] # Pytest Init Configs
addopts = "-p no:warnings"

[build-system] # setuptools
requires = ["setuptools>=42", "wheel", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "tekkare-pypi"
url = "https://europe-west1-python.pkg.dev/oip-cluster/tekkare-pypi/"
priority = "supplemental"
