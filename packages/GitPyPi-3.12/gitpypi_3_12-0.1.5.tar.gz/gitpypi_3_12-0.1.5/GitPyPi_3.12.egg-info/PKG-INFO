Metadata-Version: 2.1
Name: GitPyPi_3.12
Version: 0.1.5
Home-page: https://github.com/kairos-xx/GitPyPi_3.12
Author: Joao Lopess
Author-email: Joao Lopes <joaoslopes@gmail.com>
License: 
        MIT License
        
        Copyright (c) 2024 Joao Lopes
        
        Permission is hereby granted, free of charge, to any person
        obtaining
        a copy of this software and associated documentation files (the
        "Software"), to deal in the Software without restriction, including
        without limitation the rights to use, copy, modify, merge, publish,
        distribute, sublicense, and/or sell copies of the Software, and to
        permit persons to whom the Software is furnished to do so,
        subject to
        the following conditions:
        
        The above copyright notice and this permission notice shall be
        included in all copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
        EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
        MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
        NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
        BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
        ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
        CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/kairos-xx/GitPyPi_3.12.git
Project-URL: Repository, https://github.com/kairos-xx/GitPyPi_3.12.git
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.11
Classifier: Operating System :: OS Independent
Classifier: Natural Language :: English
Classifier: Typing :: Typed
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE

<div align="center">
  <img src="https://github.com/kairos-xx/GitPyPi_3.12/raw/main/assets/icon_raster_new.png" alt="Replit Info API Logo" width="150"/>
  <h1>Python Project Template with GitHub and PyPI Integration</h1>
  <p><em>This template provides a complete setup for Python projects with automated GitHub repository creation and PyPI package publishing capabilities.</em></p>

  <a href="https://replit.com/@kairos/GitPyPi312">
    <img src="https://github.com/kairos-xx/GitPyPi_3.12/raw/main/assets/replit.png" alt="Try it on Replit" width="150"/>
  </a>
</div>

## Key Features

- Automated GitHub repository setup
- PyPI package publishing workflow
- Code formatting with Black, Ruff, and isort
- Code quality checks with Flake8 and Pyright
- Test coverage with Pytest
- Project archiving functionality
- Comprehensive workflow automation

## Core Scripts

### prepare_environment.py

The main setup script that:
1. Configures project structure
2. Sets up GitHub repository
3. Installs dependencies
4. Creates necessary configuration files

Key components of the script:
- Package management functions
- GitHub repository setup
- Project file generation
- Version control initialization

### Configuration Dictionary Structure

The script uses a comprehensive `project_info` dictionary that contains:

```python
project_info = {
    "templates": {
        # File templates for pyproject.toml, setup.py, etc.
    },
    "classifiers": {
        # PyPI project classifiers
    },
    "setup": {
        "paths": {
            # Project file paths configuration
        },
        "classifiers": {
            # Project-specific classifiers
        },
        "version": "0.1.1",
        "description": "",
        "user_config": {
            # User information
        },
        "urls": {
            # Project URLs
        },
        "requirements": [
            # Project dependencies
        ],
        "nix_packages": [
            # Nix environment packages
        ],
        "required_packages": [
            # Essential packages for setup
        ]
    }
}
```

### Other Utility Scripts

- **pypi_upload.py**: Handles PyPI package versioning and publishing
- **create_zip.py**: Creates project archives

## Getting Started

1. Ensure environment variables are set:
   - GITHUB_TOKEN
   - REPLIT_TOKEN
   - PYPI_TOKEN (for publishing)

2. Run the prepare environment script:
   ```bash
   python scripts/prepare_environment.py
   ```

3. Use the Tools menu in Replit to run workflows for:
   - Code formatting
   - Testing
   - Package publishing
   - Project archiving

## Project Structure

```
├── scripts/          # Utility scripts
├── src/             # Source code
├── tests/           # Test files
├── logs/            # Log outputs
├── zip/             # Archive storage
└── assets/          # Project assets
```
