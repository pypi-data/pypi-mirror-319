from .tiutools import SsoConfig as SsoConfig
from _typeshed import Incomplete
from typing import Optional

mod_logger: Incomplete

def check_auth(method): ...

class ScrapeFactory:
    options: Incomplete
    db: Incomplete
    logger: Incomplete
    gui_app: Incomplete
    login_page: Incomplete
    base_url: Incomplete
    driver: Incomplete
    is_authenticated: bool
    is_open: Incomplete
    retry: bool
    guests: Incomplete
    def __init__(self, options: Optional[list] = ..., db: Incomplete | None = ..., namespace: Optional[str] = ..., reset_keys: bool = ..., gui_app: bool = ..., login_page: Optional[str] = ..., logger: Incomplete | None = ...) -> None: ...
    def __enter__(self): ...
    def __exit__(self, exc_type, exc_value, exc_traceback) -> None: ...
    def print(self, msg, **kwargs) -> None: ...
    def close(self) -> None: ...
    def get(self, command) -> None: ...
    def click_submit_name(self, name): ...
    def wait_for(self, by_type, name, timeout: int = ...): ...
    def get_size_of_element(self, by_type, name): ...

class CanvasScraper(ScrapeFactory):
    def get_gradebook_image(self, canvas_id: int) -> str: ...
