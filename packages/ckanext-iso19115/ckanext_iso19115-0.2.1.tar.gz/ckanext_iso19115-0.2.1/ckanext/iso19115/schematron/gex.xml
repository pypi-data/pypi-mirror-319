<?xml version="1.0" encoding="UTF-8"?>
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <sch:ns prefix="cit" uri="http://standards.iso.org/iso/19115/-3/cit/1.0"/>
  <sch:ns prefix="gex" uri="http://standards.iso.org/iso/19115/-3/gex/1.0"/>
  <sch:ns prefix="gco" uri="http://standards.iso.org/iso/19115/-3/gco/1.0"/>
  <!--
    ISO 19115-3 base requirements for metadata instance documents

    See ISO19115-1:2014(E) page 24, Figure 19 Extent information classes
  -->

  <!--
    Rule: EX_Extent
    Ref: {count(description +
                geographicElement +
                temporalElement +
                verticalElement) >0}
    -->

  <sch:pattern id="rule.gex.extenthasoneelement">
    <sch:title>Extent MUST have one description or one geographic, temporal or vertical element</sch:title>

    <sch:rule context="//gex:EX_Extent">

      <!-- Check that element exist and is not empty ones.
      TODO improve nonEmpty checks -->
      <sch:let name="description"
               value="gex:description[text() != '']"/>
      <sch:let name="geographicId"
               value="gex:geographicElement/gex:EX_GeographicDescription/
                         gex:geographicIdentifier[normalize-space(*) != '']"/>
      <sch:let name="geographicBox"
               value="gex:geographicElement/
                         gex:EX_GeographicBoundingBox[
                         normalize-space(gex:westBoundLongitude/gco:Decimal) != '' and
                         normalize-space(gex:eastBoundLongitude/gco:Decimal) != '' and
                         normalize-space(gex:southBoundLatitude/gco:Decimal) != '' and
                         normalize-space(gex:northBoundLatitude/gco:Decimal) != ''
                         ]"/>
      <sch:let name="geographicPoly"
               value="gex:geographicElement/gex:EX_BoundingPolygon[
                         normalize-space(gex:polygon) != '']"/>
      <sch:let name="temporal"
               value="gex:temporalElement/gex:EX_TemporalExtent[
                         normalize-space(gex:extent) != '']"/>
      <sch:let name="vertical"
               value="gex:verticalElement/gex:EX_VerticalExtent[
                         normalize-space(gex:minimumValue) != '' and
                         normalize-space(gex:maximumValue) != '']"/>


      <sch:let name="hasAtLeastOneElement"
        value="count($description) +
        count($geographicId) +
        count($geographicBox) +
        count($geographicPoly) +
        count($temporal) +
        count($vertical) > 0
        "/>

      <sch:assert test="$hasAtLeastOneElement">
	The extent does not contain a description or a geographicElement.
      </sch:assert>
    </sch:rule>
  </sch:pattern>


  <!--
    Rule: EX_VerticalExtent
    Ref: {count(verticalCRS + verticalCRSId) > 0)}
  -->

  <sch:pattern id="rule.gex.verticalhascrsorcrsid">
    <sch:title>Vertical element MUST contains a CRS or CRS identifier</sch:title>

    <sch:rule context="//gex:EX_VerticalExtent">

      <sch:let name="crs" value="gex:verticalCRS"/>
      <sch:let name="crsId" value="gex:verticalCRSId"/>
      <sch:let name="hasCrsOrCrsId"
        value="count($crs) + count($crsId) > 0"/>

      <sch:assert test="$hasCrsOrCrsId">
	The vertical extent does not contains CRS or CRS identifier.
      </sch:assert>
    </sch:rule>
  </sch:pattern>


</sch:schema>
