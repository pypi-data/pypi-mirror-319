<?xml version="1.0" encoding="UTF-8"?>
<sch:schema xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <sch:ns prefix="cit" uri="http://standards.iso.org/iso/19115/-3/cit/2.0"/>
  <sch:ns prefix="mri" uri="http://standards.iso.org/iso/19115/-3/mri/1.0"/>
  <sch:ns prefix="mdb" uri="http://standards.iso.org/iso/19115/-3/mdb/2.0"/>
  <sch:ns prefix="mcc" uri="http://standards.iso.org/iso/19115/-3/mcc/1.0"/>
  <sch:ns prefix="lan" uri="http://standards.iso.org/iso/19115/-3/lan/1.0"/>
  <sch:ns prefix="gco" uri="http://standards.iso.org/iso/19115/-3/gco/1.0"/>
  <sch:ns prefix="srv" uri="http://standards.iso.org/iso/19115/-3/srv/2.0"/>
  <sch:ns prefix="gex" uri="http://standards.iso.org/iso/19115/-3/gex/1.0"/>
  <sch:ns prefix="mrc" uri="http://standards.iso.org/iso/19115/-3/mrc/2.0"/>
  <!--
    ISO 19115-3 base requirements for metadata instance documents

    See ISO19115-1:2014(E) page 11, Figure 6
  -->

  <!--
    Rule: MD_Identification
    Ref: {(MD_Metadata.metadataScope.MD_MetadataScope.resourceScope)=’dataset’
    implies count(
    extent.geographicElement.EX_GeographicBoundingBox +
    extent.geographicElement.EX_GeographicDescription) >= 1}
    -->

  <sch:pattern id="rule.mri.datasetextent">
    <sch:title>Dataset extent</sch:title>

    <sch:rule context="/">
      <sch:let name="hasOneMD_MetadataElement" value="count(/mdb:MD_Metadata) = 1"/>
      <sch:assert id="b" test="$hasOneMD_MetadataElement">The root element must be MD_Metadata.</sch:assert>
    </sch:rule>

    <sch:rule context="/mdb:MD_Metadata[mdb:metadataScope/
                          mdb:MD_MetadataScope/mdb:resourceScope/
                          mcc:MD_ScopeCode/@codeListValue = 'dataset']/
                          mdb:identificationInfo/mri:MD_DataIdentification">

      <sch:let name="geodescription"
        value="mri:extent/gex:EX_Extent/gex:geographicElement/
                  gex:EX_GeographicDescription/gex:geographicIdentifier[
                  normalize-space(mcc:MD_Identifier/mcc:code/*/text()) != ''
                  ]"/>
      <sch:let name="geobox"
        value="mri:extent/gex:EX_Extent/gex:geographicElement/
                  gex:EX_GeographicBoundingBox[
                  normalize-space(gex:westBoundLongitude/gco:Decimal) != '' and
                  normalize-space(gex:eastBoundLongitude/gco:Decimal) != '' and
                  normalize-space(gex:southBoundLatitude/gco:Decimal) != '' and
                  normalize-space(gex:northBoundLatitude/gco:Decimal) != ''
                  ]"/>

      <sch:let name="hasGeoextent" value="count($geodescription) + count($geobox) > 0"/>

      <sch:assert test="$hasGeoextent">
	The dataset MUST provide a geographic description or a bounding box.
	Rule: MD_Identification
	Ref: {(MD_Metadata.metadataScope.MD_MetadataScope.resourceScope)=’dataset’ implies count(extent.geographicElement.EX_GeographicBoundingBox + extent.geographicElement.EX_GeographicDescription) >= 1}
      </sch:assert>
    </sch:rule>
  </sch:pattern>


  <!--
    Ref: {(MD_Metadata.metadataScope.MD_Scope.resourceScope) =
            (’dataset’ or ‘series’)
          implies topicCategory is mandatory}
    -->
  <sch:pattern id="rule.mri.topicategoryfordsandseries">
    <sch:title>Topic category for dataset and series</sch:title>
    <sch:rule context="/mdb:MD_Metadata[mdb:metadataScope/
                         mdb:MD_MetadataScope/mdb:resourceScope/
                         mcc:MD_ScopeCode/@codeListValue = 'dataset' or
                         mdb:metadataScope/
                         mdb:MD_MetadataScope/mdb:resourceScope/
                         mcc:MD_ScopeCode/@codeListValue = 'series']/
                         mdb:identificationInfo/mri:MD_DataIdentification">

      <!-- The topic category is the enumeration value and
      not the human readable one. -->
      <sch:let name="topics"
               value="mri:topicCategory/mri:MD_TopicCategoryCode"/>
      <sch:let name="hasTopics"
               value="count($topics) > 0"/>

      <sch:assert test="$hasTopics">
	A topic category MUST be specified for dataset or series.
	Ref: {(MD_Metadata.metadataScope.MD_Scope.resourceScope) = (’dataset’ or ‘series’) implies topicCategory is mandatory}
      </sch:assert>
    </sch:rule>
  </sch:pattern>


  <!--
    Rule: MD_AssociatedResource
    Ref: {count(name + metadataReference) > 0}
    -->
  <sch:pattern id="rule.mri.associatedresource">
    <sch:title>Associated resource name</sch:title>

    <sch:rule context="//mri:MD_DataIdentification/mri:associatedResource/*|
                       //srv:SV_ServiceIdentification/mri:associatedResource/*">

      <!-- May be a CharacterString or LocalisedCharacterString -->
      <sch:let name="nameTitle"
               value="normalize-space(mri:name/*/cit:title)"/>
      <sch:let name="nameRef"
               value="mri:name/@uuidref"/>
      <sch:let name="mdRefTitle"
               value="normalize-space(mri:metadataReference/*/cit:title)"/>
      <sch:let name="mdRefRef"
               value="mri:metadataReference/@uuidref"/>

      <sch:let name="hasName" value="$nameTitle != '' or $nameRef != ''"/>
      <sch:let name="hasMdRef" value="$mdRefTitle != '' or $mdRefRef != ''"/>

      <!-- Concat ref assuming there is not both name and metadataReference -->
      <sch:let name="resourceRef"
               value="concat($nameTitle, $nameRef,
                             $mdRefRef, $mdRefTitle)"/>

      <sch:assert test="$hasName or $hasMdRef">
	When a resource is associated, a name or a metadata reference MUST be specified.
	Rule: MD_AssociatedResource
	Ref: {count(name + metadataReference) > 0}

      </sch:assert>
    </sch:rule>
  </sch:pattern>



  <!--
    Rule: MD_DataIdentification
    Ref: {defaultLocale documented if resource includes textual information}
    -->
  <sch:pattern id="rule.mri.defaultlocalewhenhastext">
    <sch:title>Resource language</sch:title>
    <!--
    QUESTION-TODO: "includes textual information" may not be easy to define.
    Imagery will not. Could we consider that this rule applies to
    a resource having a feature catalog ? For services ?

    Here the context define that the rule applies to DataIdentification
    having FeatureCatalog siblings.
    -->
    <sch:rule context="//mri:MD_DataIdentification[
      ../../mdb:contentInfo/mrc:MD_FeatureCatalogue or
      ../../mdb:contentInfo/mrc:MD_FeatureCatalogueDescription]">

      <sch:let name="resourceLanguages"
        value="mri:defaultLocale/lan:PT_Locale/
                lan:language/lan:LanguageCode/@codeListValue[. != '']"/>
      <sch:let name="hasAtLeastOneLanguage"
        value="count($resourceLanguages) > 0"/>

      <sch:assert test="$hasAtLeastOneLanguage">
	Resource language MUST be defined when the resource includes textual information.
	Rule: MD_DataIdentification
	Ref: {defaultLocale documented if resource includes textual information}
      </sch:assert>
    </sch:rule>
  </sch:pattern>



  <!--
    Ref: {defaultLocale.PT_Locale.characterEncoding default value is UTF-8}

    See Implemented in rule.mdb.defaultlocale.

    TODO: A better implementation would have been to make an Abstract
    test and use it in both places to not mix mdb and mri testsuites.
    -->



  <!--
    Rule: MD_Keywords
    Ref: {When the resource described is a service,
    one instance of MD_Keyword shall refer to the service taxonomy
    defined in ISO19119}

    QUESTION-TODO: This rules defined should move to srv.sch ?
  -->
  <sch:pattern id="rule.srv.servicetaxonomy">
    <sch:title>Service taxonomy</sch:title>
    <!--
    QUESTION-TODO: Is this the list to check against ?
      The list is not multilingual ?
    -->
    <sch:rule context="//srv:SV_ServiceIdentification">
      <sch:let name="listOfTaxonomy"
               value="'Geographic human interaction services,
                       Geographic model/information management services,
                       Geographic workflow/task management services,
                       Geographic processing services,
                       Geographic processing services — spatial,
                       Geographic processing services — thematic,
                       Geographic processing services — temporal,
                       Geographic processing services — metadata,
                       Geographic communication services'"/>
      <sch:let name="serviceTaxonomies"
        value="mri:descriptiveKeywords/mri:MD_Keywords/mri:keyword[
        contains($listOfTaxonomy, */text())]"/>
      <sch:let name="hasAtLeastOneTaxonomy"
        value="count($serviceTaxonomies) > 0"/>

       <sch:assert test="$hasAtLeastOneTaxonomy">
	 A service metadata SHALL refer to the service taxonomy defined in ISO19119 defining one or more value in the keyword section.
	 Rule: MD_Keywords
	 Ref: {When the resource described is a service, one instance of MD_Keyword shall refer to the service taxonomy defined in ISO19119}

       </sch:assert>
    </sch:rule>
  </sch:pattern>

</sch:schema>
