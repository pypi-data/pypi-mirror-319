# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import typing
from .type import Type
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Statement(UniversalBaseModel):
    id: str
    statement: str
    z_3_formalization: typing_extensions.Annotated[str, FieldMetadata(alias="z3_formalization")]
    type: typing.Optional[Type] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
