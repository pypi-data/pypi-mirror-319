from flukit.align import ref_numbering
from Bio.Data import IUPACData
from flukit.utils import NumberedResidue, NumberedProtein
from flukit.refseq import H3ref, H1ref, H5ref


def test_ma():
    ma_seq = "MKAIIALSNILCLVFAQKIPGNDNSTATLCLGHHAVPNGTIVKTITNDRIEVTNATELVQNSSIGKICNSPHQILDGGNCTLIDALLGDPQCDGFQNKEWDLFVERSRANSSCYPYDVPDYASLRSLVASSGTLEFKNESFNWTGVKQNGTSSACKRGSSSSFFSRLNWLTSLNNIYPAQNVTMPNKEQFDKLYIWGVHHPDTDKNQFSLFAQSSGRITVSTKRSQQAVIPNIGSRPRVRDIPSRISIYWTIVKPGDILLINSTGNLIAPRGYFKIRSGKSSIMRSDAPIGKCKSECITPNGSIPNDKPFQNVNRITYGACPRYVKQSTLKLATGMRNVPEKQTRGIFGAIAGFIENGWEGMVDGWYGFRHQNSEGRGQAADLKSTQAAIDQISGKLNRLIGKTNEKFHQIEKEFSEVEGRVQDLEKYVEDTKIDLWSYNAELLVALENQHTIDLTDSEMNKLFEKTKKQLRENAEDMGNGCFKIYHKCDNACIGSIRNETYDHNVYRDEALNNRFQIKGVELKSGYKDWILWISFAMSCFLLCIALLGFIMWACQKGNIRCNICI"
    ma_numbering = ref_numbering(query=ma_seq, ref=H3ref)
    nump = NumberedProtein(ma_seq, {"H3": ma_numbering}, default_schema="H3")

    nump.replace_residue("H3", 329, "A")
    nump.replace_residue("H3", 330, "A")
    nump.replace_residue("H3", 355, "W")
    nump.replace_residue("H3", 380, "I")
    nump.replace_residue("H3", 432, "I")

    assert nump.mutations == ["R329A", "G330A", "H355W", "K380I", "E432I"]

    assert (
        nump.slice(1, 505, schema="H3").seq
        == "QKIPGNDNSTATLCLGHHAVPNGTIVKTITNDRIEVTNATELVQNSSIGKICNSPHQILDGGNCTLIDALLGDPQCDGFQNKEWDLFVERSRANSSCYPYDVPDYASLRSLVASSGTLEFKNESFNWTGVKQNGTSSACKRGSSSSFFSRLNWLTSLNNIYPAQNVTMPNKEQFDKLYIWGVHHPDTDKNQFSLFAQSSGRITVSTKRSQQAVIPNIGSRPRVRDIPSRISIYWTIVKPGDILLINSTGNLIAPRGYFKIRSGKSSIMRSDAPIGKCKSECITPNGSIPNDKPFQNVNRITYGACPRYVKQSTLKLATGMRNVPEKQTAAIFGAIAGFIENGWEGMVDGWYGFRWQNSEGRGQAADLKSTQAAIDQISGILNRLIGKTNEKFHQIEKEFSEVEGRVQDLEKYVEDTKIDLWSYNAELLVALINQHTIDLTDSEMNKLFEKTKKQLRENAEDMGNGCFKIYHKCDNACIGSIRNETYDHNVYRDEALNNRFQIKGV"
    )


def test_wi():
    wi_seq = "MKAILVVMLYTFTTANADTLCIGYHANNSTDTVDTVLEKNVTVTHSVNLLEDKHNGKLCKLRGVAPLHLGQCNIAGWILGNPECESLSTARSWSYIVETSNSDNGTCYPGDFINYEELREQLSSVSSFERFEIFPKTSSWPNHDSDNGVTAACSHAGARSFYKNLIWLVKKGKSYPKINQTYINDKGKEVLVLWGIHHPPTITDQESLYQNADAYVFVGTSRYSKKFKPEIATRPKVRDQAGRMNYYWTLVEPGDKITFEATGNLVAPRYAFTMEKEAGSGIIISDTPVHDCNATCQTPEGAINTSLPFQNVHPITIGKCPKYVRSTKLRLATGLRNVPSIQSRGLFGAIAGFIEGGWTGMVDGWYGYHHQNDQGSGYAADLKSTQNAIDKITNKVNSVIEKMNTQFTAVGKEFNHLEKRIENLNKKVDDGFLDVWTYNAELLVLLENERTLDYHDSNVKNLYEKVRHQLKNNAKEIGNGCFEFYHKCDNTCMESVKNGTYDYPKYSEEAKLNREKIDGVKLDSTRIYQILAIYSTVASSLVLVVSLGAISFWMCSNGSLQCRICI"
    H3_numbering = ref_numbering(query=wi_seq, ref=H3ref)
    H1_numbering = ref_numbering(query=wi_seq, ref=H1ref)
    nump = NumberedProtein(
        wi_seq, {"H3": H3_numbering, "H1": H1_numbering}, default_schema="H3"
    )

    nump.replace_residue("H3", 329, "A")
    nump.replace_residue("H3", 330, "A")
    nump.replace_residue("H3", 355, "W")
    nump.replace_residue("H3", 380, "I")
    nump.replace_residue("H3", 432, "I")

    assert nump.mutations == ["R329A", "G330A", "H355W", "K380I", "E432I"]

    assert (
        nump.slice(11, 505, schema="H3").seq
        == "DTLCIGYHANNSTDTVDTVLEKNVTVTHSVNLLEDKHNGKLCKLRGVAPLHLGQCNIAGWILGNPECESLSTARSWSYIVETSNSDNGTCYPGDFINYEELREQLSSVSSFERFEIFPKTSSWPNHDSDNGVTAACSHAGARSFYKNLIWLVKKGKSYPKINQTYINDKGKEVLVLWGIHHPPTITDQESLYQNADAYVFVGTSRYSKKFKPEIATRPKVRDQAGRMNYYWTLVEPGDKITFEATGNLVAPRYAFTMEKEAGSGIIISDTPVHDCNATCQTPEGAINTSLPFQNVHPITIGKCPKYVRSTKLRLATGLRNVPSIQSAALFGAIAGFIEGGWTGMVDGWYGYHWQNDQGSGYAADLKSTQNAIDKITNIVNSVIEKMNTQFTAVGKEFNHLEKRIENLNKKVDDGFLDVWTYNAELLVLLINERTLDYHDSNVKNLYEKVRHQLKNNAKEIGNGCFEFYHKCDNTCMESVKNGTYDYPKYSEEAKLNREKIDGV"
    )


def test_tx():
    tx_seq = "MENIVLLLAIVSLVKSDQICIGYHANNSTEQVDTIMEKNVTVTHAQDILEKTHNGKLCDLNGVKPLILKDCSVAGWLLGNPMCDEFIRVPEWSYIVERANPANDLCYPGSLNDYEELKHMLSRINHFEKIQIIPKSSWPNHETSLGVSAACPYQGAPSFFRNVVWLIKKNDAYPTIKISYNNTNREDLLILWGIHHSNNAEEQTNLYKNPITYISVGTSTLNQRLAPKIATRSQVNGQRGRMDFFWTILKPDDAIHFESNGNFIAPEYAYKIVKKGDSTIMKSGVEYGHCNTKCQTPVGAINSSMPFHNIHPLTIGECPKYVKSNKLVLATGLRNSPLREKRRKRGLFGAIAGFIEGGWQGMVDGWYGYHHSNEQGSGYAADKESTQKAIDGVTNKVNSIIDKMNTQFEAVGREFNNLERRIENLNKKMEDGFLDVWTYNAELLVLMENERTLDFHDSNVKNLYDKVRLQLRDNAKELGNGCFEFYHKCDNECMESVRNGTYDYPQYSEEARLKREEISGVKLESVGTYQILSIYSTAASSLALAIMMAGLSLWMCSNGSLQCRICI"
    H3_numbering = ref_numbering(query=tx_seq, ref=H3ref)
    H1_numbering = ref_numbering(query=tx_seq, ref=H1ref)
    H5_numbering = ref_numbering(query=tx_seq, ref=H5ref)
    nump = NumberedProtein(
        tx_seq,
        {"H3": H3_numbering, "H1": H1_numbering, "H5": H5_numbering},
        default_schema="H3",
    )

    nump.replace_residue("H3", 329, "A")
    nump.replace_residue("H3", 330, "A")
    nump.replace_residue("H3", 355, "W")
    nump.replace_residue("H3", 380, "I")
    nump.replace_residue("H3", 432, "I")

    assert nump.mutations == ["R329A", "G330A", "H355W", "K380I", "E432I"]

    print(nump.slice(11, 505, schema="H3").seq)

    assert (
        nump.slice(11, 505, schema="H3").seq
        == "DQICIGYHANNSTEQVDTIMEKNVTVTHAQDILEKTHNGKLCDLNGVKPLILKDCSVAGWLLGNPMCDEFIRVPEWSYIVERANPANDLCYPGSLNDYEELKHMLSRINHFEKIQIIPKSSWPNHETSLGVSAACPYQGAPSFFRNVVWLIKKNDAYPTIKISYNNTNREDLLILWGIHHSNNAEEQTNLYKNPITYISVGTSTLNQRLAPKIATRSQVNGQRGRMDFFWTILKPDDAIHFESNGNFIAPEYAYKIVKKGDSTIMKSGVEYGHCNTKCQTPVGAINSSMPFHNIHPLTIGECPKYVKSNKLVLATGLRNSPLREKRRKAALFGAIAGFIEGGWQGMVDGWYGYHWSNEQGSGYAADKESTQKAIDGVTNIVNSIIDKMNTQFEAVGREFNNLERRIENLNKKMEDGFLDVWTYNAELLVLMINERTLDFHDSNVKNLYDKVRLQLRDNAKELGNGCFEFYHKCDNECMESVRNGTYDYPQYSEEARLKREEISGV"
    )
